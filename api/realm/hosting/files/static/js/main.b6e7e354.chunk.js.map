{"version":3,"sources":["styles/colours.js","Components/Headings/Heading.js","Components/Tiles/ResponsiveTileWrapper.js","Views/Client/Home/styledComponents.js","Views/Client/Home/Services.js","Components/Testimonials/Testimonial.js","Components/Testimonials/TestimonialCarousel.js","Views/Client/Home/Testimonials.js","Components/ProgressSpinner.js","styles/fonts.js","Components/ActionButton.js","Components/TextSection.js","Components/SectionSpacer.js","hooks/useMediaQuery.js","hooks/useBreakpoints.js","Views/Client/Home/Home.js","realmApolloClient.js","Views/Admin/Components/Navbar/styledComponents.js","Views/Admin/Components/Navbar/Navbar.js","Views/Admin/Components/Orders/styledComponents.js","Views/Admin/styledComponents.js","Views/Admin/Components/Orders/DeliverySection.js","Components/Forms/SelectInput.js","Components/UserMessage.js","helpers/price.js","helpers/refund.js","Views/Admin/Components/Orders/PaymentSection.js","hooks/useDDMutation.js","graphql/fragments.js","graphql/mutations.js","helpers/global.js","Views/Admin/Components/Orders/StatusSection.js","Components/Headings/LinkedHeading.js","graphql/queries.js","Views/Admin/Components/Orders/OrderDetails.js","Components/Table/DDTable.js","Views/Admin/Components/Orders/Orders.js","Views/Admin/Components/Inventory/BigButton.js","helpers/inventory.js","Views/Admin/Components/Inventory/InventoryDetails.js","Components/Table/PaginationActions.js","Components/Table/PaginatedTable.js","Views/Admin/Components/Inventory/styledComponents.js","Views/Admin/Components/Inventory/Categories/CategoryTable.js","Components/FileBrowseButton.js","Components/ImageUploader.js","Views/Admin/Components/Inventory/Categories/CategoryEdit.js","Views/Admin/Components/Inventory/SubCategories/SubCategoryTable.js","Components/Forms/RowGroup.js","Views/Admin/Components/Inventory/SubCategories/SubCategoryEdit.js","Views/Admin/Components/Inventory/Products/ProductTable.js","Views/Admin/Components/Inventory/Products/ProductEdit.js","Views/Admin/Components/Inventory/Inventory.js","Views/Admin/Admin.js","Components/Tiles/CategoryTile.js","Components/Tiles/TileList.js","Components/LoadingView.js","Views/Client/Shop/styledComponents.js","Views/Client/Shop/Categories.js","Views/Client/Shop/SubCategories.js","Components/Image.js","context/CurrencyContext.js","context/OrderContext.js","helpers/cart.js","Components/AddToCart.js","Components/Tiles/ProductTile/styledComponents.js","Components/Tiles/ProductTile/ProductTile.js","hooks/useScrollToTop.js","Views/Client/Shop/Products.js","Views/Client/Shop/Product/ImageViewer.js","Views/Client/Shop/Product/styledComponents.js","Views/Client/Shop/Product/Product.js","Views/Client/Shop/Cart/StyledComponents.js","Views/Client/Shop/Cart/CartProduct.js","Views/Client/Shop/Cart/Cart.js","helpers/auth.js","helpers/address.js","Views/Client/Shop/Checkout/StyledComponents.js","Views/Client/Shop/Checkout/PaymentForm.js","helpers/offers.js","Components/AddressForms/StyledComponents.js","Components/AddressForms/FormSubmit.js","Components/Forms/TextInput.js","Components/Forms/Checkbox.js","helpers/user.js","Components/AddressForms/AddressFormBasic.js","Components/AddressForms/PersonalDetailsForm.js","Views/Client/Shop/Checkout/DeliveryForm.js","Views/Client/Shop/Checkout/AdditionalInfo.js","Views/Client/Shop/Checkout/CartSummary.js","Views/Client/Shop/Checkout/Checkout.js","Views/Client/Shop/Checkout/Summary.js","Views/Client/Shop/Shop.js","Views/Client/AboutUs/styledComponents.js","Views/Client/AboutUs/AboutUs.js","Views/Client/ContactUs/styledComponents.js","Views/Client/ContactUs/ContactUs.js","Views/Client/CustomerInfo/Components/SizingInfo.js","Views/Client/CustomerInfo/Components/DeliveryInfo.js","Views/Client/CustomerInfo/Components/PaymentInfo.js","Views/Client/CustomerInfo/Components/ReturnsPolicy.js","Views/Client/CustomerInfo/Components/PrivacyPolicy.js","Views/Client/CustomerInfo/Components/Faq.js","Views/Client/CustomerInfo/CustomerInfo.js","Views/Client/Account/StyledComponents.js","Views/Client/Account/PersonalDetails.js","Views/Client/Account/DeliveryDetails.js","Components/Tiles/OrderTile/styledComponents.js","Components/Tiles/OrderTile/OrderTile.js","Views/Client/Account/MyOrders.js","Components/TabMenu.js","Views/Client/Account/Account.js","Views/Client/Account/Login.js","Views/Error/Error404.js","Components/Navbar/CurrencySelection.js","Components/Navbar/NavbarElements.js","Components/Navbar/MyAccountMenu.js","Components/Navbar/Navbar.js","Components/SideDrawer/SideDrawerElements.js","Components/SideDrawer/SideDrawer.js","Components/BackgroundShadow/BackgroundShadowElements.js","Components/BackgroundShadow/BackgroundShadow.js","Components/Link.js","Components/Footer/FooterElements.js","Components/Footer/Footer.js","Components/Offers/FreeDelivery.js","Components/ClientView.js","Components/PrivateRoutes/PrivateClientRoute.js","Components/PrivateRoutes/PrivateAdminRoute.js","App.js","index.js"],"names":["colours","primary","primaryAlt","secondary","secondaryAlt","light","lightFade","dark","darkFade","transparent","white","blue","green","StyledHeading","styled","h4","color","noSpace","margin","paddingTop","paddingBottom","marginBottom","size","Heading","text","other","ResponsiveTileWrapper","div","GoToShopWrapper","ImagesWrapper","PrimaryImage","img","SecondaryImages","SecondaryImage","LargeScreenImageAndButton","TertiaryImage","HomeBottomWrapper","Wrapper","IntroText","p","ServicesList","ListItem","LeatherIcon","GiCowboyHolster","TailoringIcon","GiSewingString","AdjustmentIcon","FaTape","Services","h1","MainText","Testimonial","heading","CarouselWrapper","Spacer","Buttons","ForwardArrow","IoArrowForwardCircleOutline","BackArrow","IoArrowBackCircleOutline","TestimonialCarousel","testimonials","id","useState","content","setContent","slideIndex","setSlideIndex","isLastSlide","length","onClick","indexOfTestimonial","_","findIndex","previousItem","find","nextItem","Testimonials","ProgressSpinner","colour","CircularProgress","sx","fonts","fancyHeading","standard","ActionButton","linkTo","variant","customStyles","name","value","disabled","fullWidth","loading","basicStyles","fontFamily","width","button","Button","style","to","align","h2","Text","TextSection","secondaryText","SectionSpacer","props","spaceAbove","css","spaceBelow","useMediaQuery","query","matches","setMatches","useEffect","mediaQuery","window","matchMedia","handler","event","addEventListener","removeEventListener","useBreakpoints","breakpoints","isXs","isSm","isMd","isLg","active","Home","buttonStyles","height","backgroundColor","borderRadius","fontSize","display","right","headingFontSize","src","appId","graphqlUri","app","Realm","getValidAccessToken","a","console","log","currentUser","logIn","anonymous","refreshCustomData","accessToken","Error","ApolloClient","link","HttpLink","uri","fetch","options","headers","Authorization","cache","InMemoryCache","RealmAppContext","createContext","RealmAppProvider","children","realmApp","setCurrentUser","email","password","credentials","emailPassword","user","error","logOut","getDbUser","useCallback","functions","db_getFullUser","dbUser","prev","Object","keys","_id","wrapped","Provider","ButtonsWrapper","borderColor","Navbar","useContext","history","useHistory","handleLogout","e","preventDefault","push","DataSection","DataRow","DataRowLeftItem","h6","DataRowRightItem","AddressWrapper","DeliveryNotesWrapper","DeliveryNotes","PaymentSectionWrapper","RefundWrapper","OrderStatusContainer","CurrentStatusRow","StatusButtons","DialogHeadingWrapper","AdminWrapper","GridItem","OrdersWrapper","InventoryWrapper","InventoryButtonWrapper","DialogContentWrapper","DataLoading","DeliverySection","order","delivery","firstName","lastName","phone","address","line1","line2","city","postcode","toUpperCase","country","extraInfo","SelectInput","required","label","handleChange","FormControl","InputLabel","Select","aria-describedby","onChange","background","MenuProps","padding","justifyContent","map","option","index","MenuItem","Message","span","TickIcon","IoCheckmarkCircleOutline","WarningIcon","IoWarningOutline","ErrorIcon","IoAlertCircleOutline","UserMessage","icon","type","convertStripeAmountToPrice","amount","stringified","toString","section1","substring","section2","parseFloat","convertPriceToStripeAmount","price","sections","split","parseInt","toTwoDecimalPlaces","toFixed","getCurrencySymbol","currency","GBP","USD","EUR","getPriceInCurrency","product","verifyRefundAmount","requestedAmount","orderTotal","previousRefunds","refundAmount","totalOrderAmount","checkIsFullRefund","refundedAmount","refundNum","refundedNum","orderTotalNum","PaymentSection","setError","setLoading","paymentIntent","setPaymentIntent","existingRefundTotal","setExistingRefundTotal","pendingRefundTotal","setPendingRefundTotal","reason","refund","setRefund","refunds","prevRefunds","reduce","b","handleRefundSubmit","isFullRefund","stripeAmount","stripe_refundPaymentIntent","stripeRefund","status","getPaymentIntent","stripe_retrievePaymentIntent","paymentIntentId","datePaid","target","isAdminSelect","TextField","InputProps","startAdornment","InputAdornment","position","useDDMutation","mutation","variables","resultsObj","useRef","called","data","useMutation","new","callMutation","current","resetResults","USER_DETAILS","gql","CATEGORY_DETAILS","SUBCATEGORY_DETAILS","PRODUCT_DETAILS","ORDER_DETAILS","ORDER_ITEM_DETAILS","DELIVERY_DETAILS","ADDRESS_DETAILS","REFUND_DETAILS","mutations","AddUser","AddUserWithOrders","UpdateUser","UpdateUserAddresses","UpdateUserOrders","DeleteUser","UpsertProduct","DeleteProduct","UpsertSubCategory","DeleteSubCategory","UpsertCategory","DeleteCategory","CreateGuestOrder","CreateOrderForExistingCustomer","CreateNewOrderItem","UpdateOrder","DeleteOrder","UpdateItemInOrder","DeleteOrderItem","UpdateOrderItemsInOrder","CreateAddress","UpdateAddress","AddDeliveryDetailsToOrder","AddPickUpDetailsToOrder","isObjectEmpty","obj","capitaliseFirstCharacter","string","getDateFromUTCString","utcString","getUpdatedObjectFields","originalObj","fieldsToCompare","updatedFields","field","hasUpdatedFields","StatusSection","orderStatus","setStatus","updateOrder","updateOrderStatus","state","capitalisedStatus","dateUpdatedKey","Date","now","startCase","HeadingWrapper","LinkedHeading","buttonText","headingSize","flex","marginTop","SINGLE_CATEGORY","SINGLE_CATEGORY_BY_NAME","ALL_CATEGORIES","CATEGORY_SEARCH","ALL_CATEGORIES_AND_SUBCATEGORIES","SINGLE_SUBCATEGORY_BY_NAME","SINGLE_SUBCATEGORY","SUBCATEGORY_SEARCH","SINGLE_PRODUCT","PRODUCTS_SEARCH","SINGLE_ORDER_DETAILED","ORDER_BY_PAYMENT_INTENT","ADMIN_ACTIVE_ORDERS","ADMIN_ARCHIVED_ORDERS","OrderDetails","open","handleClose","orderId","setOrder","useQuery","skip","Dialog","fullScreen","DDTable","columns","rows","handleRowClick","TableContainer","WebkitBoxShadow","boxShadow","component","Paper","Table","TableHead","TableRow","c","TableCell","uniqueString","TableBody","row","border","cursor","hover","column","defaultProps","maxRows","Orders","dialogOpen","setDialogOpen","orderType","setOrderType","setRows","selectedOrderId","activeOrders","archivedOrders","queryData","orders","tableRows","orderItems","paymentStatus","buildRows","order_id","message","err","BigButton","handleSelection","validateInventoryFields","requestedFields","requiredFields","failedItems","result","item","trim","getTrimmedFormFields","fields","clonedFields","assign","getInitialFormFields","description","images","category","subCategory","numInStock","priceGBP","priceUSD","priceEUR","weightInGrams","image","getFormattedRow","sharedFields","subcategory","InventoryDetails","tableSection","editSection","inventoryType","setTableRows","itemToEdit","setItemToEdit","lastSelectedItem","initialFields","setFields","setMessage","deleteRequested","setDeleteRequested","inventoryTypeId","selectedRowId","shouldCreateNewItem","capitalisedInventoryType","upsertItem","deleteItem","TableComponent","EditComponent","handleResetEditForm","handleUpsertItem","trimmedFields","__typename","upsertedItem","formattedRow","clonedTableRows","JSON","parse","stringify","indexOfUpdatedRow","handleDeleteItem","deletedItem","isDeleted","updatedRows","filter","populateFormFields","itemFields","key","updatedInitialFields","updateRows","selectedRow","reset","handleItemSelected","updateFields","handleDeleteItemRequest","relatedDocuments","relatedDocumentArray","kebabCase","handleResetForm","PaginationActions","count","page","rowsPerPage","onPageChange","Box","alignItems","IconButton","aria-label","Math","ceil","max","PaginatedTable","rowsNum","selectionLoading","setPage","setRowsPerPage","emptyRows","slice","colSpan","selected","col","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onRowsPerPageChange","ActionsComponent","SearchWrapper","InventorySection","EditInventorySection","EditFormContainer","SubmitButtons","CategoryTable","categoryLoading","setCategoryLoading","searchTerm","useLazyQuery","onCompleted","categorySearch","mappedRows","category_id","onError","searchFunc","searchCategories","getSelectedCategory","categoryId","Label","FileBrowseButton","htmlFor","UploadWrapper","MessageWrapper","SelectedFile","ThumbnailsWrapper","ThumbnailWrapper","ThumbnailImage","ThumbnailDeleteIcon","TiDeleteOutline","ImagePlaceholder","ImageUploader","onUpload","onDelete","placeholderText","selectedFile","setSelectedFile","handleUpload","file","uploadFile","helper_getS3Config","imageUpload","location","files","imageUrl","handleDelete","CategoryEdit","handleFormChange","handleImageChange","action","updatedImage","subHeading","multiline","SubCategoryTable","subCategoryLoading","setSubCategoryLoading","subCategorySearch","subCategory_id","searchSubCategories","getSelectedSubCategory","subCategoryId","RowGroup","flexDirection","gap","SubCategoryEdit","categories","ProductTable","productLoading","setProductLoading","productSearch","product_id","searchProducts","getSelectedProduct","productId","ProductEdit","hasSelectedCategory","updatedImages","selectedCategory","allCategories","subCategories","subCat","getSubCategoryDetails","Inventory","selectedType","setSelectedType","components","edit","table","Admin","Image","CategoryCaption","CategoryTile","title","alt","FlexContainer","TileList","Skeleton","LoadingView","ShopBrowseWrapper","Description","Categories","dataReady","SubCategories","url","useRouteMatch","useParams","Img","CurrencyContext","CurrencyContextProvider","setCurrency","getLocale","response","json","getLocaleCurrency","locale","continent_code","country_code","OrderContext","OrderContextProvider","activeOrder","setActiveOrder","subtotal","setSubtotal","deliveryCountry","setDeliveryCountry","deliveryPrice","setDeliveryPrice","deliveryZone","getActiveOrder","db_getActiveOrder","user_id","userActiveOrder","subTotal","productTotals","quantity","prevValue","currentValue","getCartSubTotal","getDeliveryPrice","countries","requestedCountry","helper_getDeliveryPrice","AddToCart","addingToCart","updateAddingToCart","productInCart","setProductInCart","setButtonText","isLoading","updateCurrentUser","styles","createGuestOrder","createOrderForExistingCustomer","createNewOrderItem","updateOrderItemsInOrder","updateUserOrders","handleAddToCart","currentTarget","newOrderItemId","orderItem_id","orderItemIds","updateOneOrder","helper_createOrderId","newOrderId","dateCreated","existingOrderIds","insertOneOrder","customer","newUserId","user_ObjectId","OuterContainer","ProductContent","ProductTextContent","TextContainer","InStockInfo","ButtonContainer","ProductTile","useScrollToTop","scroll","top","left","behavior","Products","products","sort","Container","MainImage","AllImages","MiniImage","SelectedImage","ImageViewer","currentImage","setCurrentImage","ProductWrapper","MainContent","ProductInfo","AddToCartWrapper","ContactUsWrapper","Product","maxWidth","CartLine","CartWrapper","isMinimised","DetailsWrapper","ProductDetailsWrapper","CartDetailsWrapper","Divider","EditButtonsWrapper","IncreaseQuantityButton","IoAddCircleOutline","DecreaseQuantityButton","IoRemoveCircleSharp","RemoveItemButton","IoTrashOutline","ProductLink","Link","TotalsWrapper","TotalsLine","TotalsRows","ProductListWrapper","DeliveryPrice","showLineThrough","textDecoration","marginRight","CartProduct","orderItem","isSaveDisabled","setIsSaveDisabled","setQuantity","productTotal","setProductTotal","deleteOrderItem","updateItemInOrder","handleRemoveItem","updatedOrderItems","handleSave","updateOneOrderItem","Cart","registerEmailPassword","unknownErrorMessage","handleRegistrationError","MongoDBRealmError","statusCode","emailPasswordAuth","registerUser","errorMessage","getLoginError","isAuthenticated","providerType","isAdmin","validateInputFields","inputFields","isValid","tests","failedTests","forEach","t","regex","test","regexCheck","getDefaultAddress","addresses","defaultAddress","addr","isDefault","CheckoutFormsWrapper","CheckoutItem","PaymentFormItems","SummaryWrapper","SummaryItem","SummaryRow","PaymentForm","deliveryDetails","additionalInfo","checkoutFormsComplete","updateCheckoutCompletion","willCustomerPickUpInStore","stripe","useStripe","elements","useElements","setErrorMessage","setIsLoading","createAddress","updateAddress","updateUserAddresses","addDeliveryDetailsToOrder","addPickUpDetailsToOrder","handleSubmitPayment","addressFields","county","deliveryFields","toBeDelivered","stripe_updatePaymentTotals","updatedTotals","deliveryTotal","addressId","address_id","insertOneAddress","updateOneUser","delivery_id","confirmPayment","confirmParams","return_url","stripeError","getElement","on","complete","paymentFormComplete","opacity","CheckboxWrapper","useFormOnly","FormSubmit","formDisabled","buttonDisabled","handleSubmit","handleBackToEdit","pickUpInStore","buttonProps","TextInput","helperText","autoFocus","Checkbox","FormControlLabel","control","marginLeft","formatUserDetails","details","formattedFields","toLowerCase","AddressFormBasic","onAddressValid","onEditting","onPickUpInStore","successMessage","disableOnComplete","isCheckoutForm","setAddressFields","deliveryCountries","setDeliveryCountries","setFormDisabled","handleFormComplete","fieldsToFormat","handleInputChange","getCountries","jsonResponse","PersonalDetailsForm","onValidDetails","personalDetailsFields","setPersonalDetailsFields","initialValuesChecked","includes","DeliveryForm","updateDeliveryDetails","updateUser","handleValidDetails","formType","handleEditDetails","willPickUp","deliveryFormComplete","AdditionalInfo","updateAdditionalInfo","minRows","CartSummary","successfulOrder","freeDelivery","completedOrderTotals","setCompletedOrderTotals","successfulPayment","failedPayment","orderInCheckout","getCompletedOrderTotals","amountPaid","stripeAmountPaid","completedTotal","completedSubtotal","completedDeliveryPrice","orderToDiplay","Checkout","stripePromise","setAdditionalInfo","setDeliveryDetails","personalFormComplete","checkoutCompletion","setCheckoutCompletion","update","replace","stripe_createPaymentIntent","intent","createPaymentIntent","retrievePaymentIntent","clientSecret","client_secret","appearance","theme","fontLineHeight","colorBackground","colorPrimaryText","rules","fontWeight","Summary","setSuccessfulOrder","getSuccessfulOrder","handleRegister","updatedUser","pathname","form","URLSearchParams","search","get","loadStripe","Shop","setAddingToCart","exact","path","render","OuterWrapper","ContentWrapper","ImageInsideText","TextWrapper","AboutUs","ContactDetailsWrapper","DetailsItem","DetailsText","MailIcon","IoMail","PhoneIcon","MdPhone","AddressIcon","FaMapSigns","ContactUs","SizesTable","SizingInfo","mensSizes","womensSizes","dressesAndEnsembles","DeliveryInfo","PaymentInfo","ReturnsPolicy","PrivacyPolicy","Faq","AccordionWrapper","CustomerInfo","expanded","setExpanded","useLocation","offsetTop","document","getElementById","accordionItems","panel","Component","Accordion","isExpanded","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","PersonalDetails","updateDbUser","DeliveryDetails","addressData","userData","updateOneAddress","addressListClone","addressListLessUpdated","updatedAddressList","OrderItems","OrderItem","ItemInfo","Info","OrderStatus","CurrentStatusWrapper","CurrentStatus","OrderTile","dateAccepted","dateDispatched","MyOrders","TabPanel","role","hidden","aria-labelledby","TabMenu","items","initialItem","personal","setValue","borderBottom","Tabs","newValue","textColor","centered","Tab","MyAccount","minHeight","LoginWrapper","Login","setFormType","confirmPassword","formFields","setFormFields","addUser","addUserWithOrders","deleteUser","handleLogin","registerError","guestUser","loginError","standardVars","guestUserVars","addUserWithOrdersData","updateUserAddressesData","newUser","insertOneUser","addUserData","locationStateUsed","borderWidth","Error404","requestedURL","CurrencySelection","anchorEl","setAnchorEl","Boolean","handleCloseMenu","handleCurrencySelection","selection","icons","undefined","aria-haspopup","aria-expanded","endIcon","Menu","onClose","MenuListProps","MenuList","normalHeading","NavbarContainer","header","NavbarNavigation","nav","NavbarBrand","NavbarHomeLink","NavbarSpacer","NavbarLinksContainer","NavbarLinkList","ul","NavbarLinkItem","li","NavbarLink","BrowseShop","BrowseShopLink","NavbarCart","NavbarToggleIcon","FaBars","LoginIcon","IoPersonCircleOutline","SmallScreenOptions","MyAccountMenu","handleMenuSelection","menuStyles","divider","handleToggle","className","propsTypes","PropTypes","func","isRequired","DrawerNav","DrawerItems","LinkContainer","DrawerLink","hr","handleLinkClick","handleClick","handleClickComplete","SideDrawer","handleDrawerLinkClick","secondaryLinks","Shadow","BackgroundShadow","handleBackgroundClick","LinkTo","FooterOuterWrapper","FooterInner","FooterTopSection","TopSectionInner","TopSectionLinks","GetInTouch","SocialIcons","FindUsOnFacebook","IoMailOutline","FooterBottomSection","ContactWrapper","InfoLinksWrapper","Copyright","Footer","copyrightDate","getFullYear","Icon","GrDeliver","h5","FreeDelivery","amountConstraints","ClientStyles","section","ScrollDisabled","ClientView","menuInView","setMenuInView","closeMenu","cloneElement","PrivateClientRoute","rest","PrivateAdminRoute","App","appReady","setAppReady","Account","ReactDOM","StrictMode","ApolloProvider","client"],"mappings":"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","file":"static/js/main.b6e7e354.chunk.js","sourcesContent":["const colours = {\n  // client\n  primary: 'rgba(12,4,24,1)', // Light Brown\n  primaryAlt: 'rgba(12,4,24,0.7)', // Yellow fade\n  secondary: 'rgba(227,187,103,1)', // Yellow-brown\n  secondaryAlt: 'rgba(182,146,74,1)', // Tan-brown\n  light: 'rgba(230,231,203,1)', // Beige\n  lightFade: 'rgba(230,231,203,0.6)', // Beige-faded\n  dark: 'rgba(49,24,14,1)', // Brown\n  darkFade: 'rgba(49,24,14,0.6)', // Brown-faded\n  transparent: 'rgba(0,0,0,0)',\n  //\n  // admin\n  white: '#fff',\n  blue: 'rgba(63, 81, 181, 1)',\n  green: 'rgba(9, 121, 105, 1)'\n};\n\nexport default colours;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n// Colours\nimport colours from '../../styles/colours.js';\nconst { darkFade, dark } = colours;\n\nexport const StyledHeading = styled.h4`\n  color: ${({ color }) => color || dark};\n  ${({ noSpace }) => noSpace ? ({\n    margin: 0\n  }) : ({\n    paddingTop: '0.5rem',\n    paddingBottom: '0.25rem',\n    marginBottom: '0.25rem'\n  })};\n  border-bottom: 1px solid ${({ color }) => color || darkFade};\n  font-size: ${({ size }) => {\n    switch (size) {\n      case 'large':\n        return '1.75rem';\n      case 'x-small':\n        return '1rem';\n      case 'small':\n        return '1.25rem';\n      default: return '1.5rem';\n    }\n  }}\n`;\n\nconst Heading = ({ text, ...other }) => {\n  return <StyledHeading {...other}>{text}</StyledHeading>;\n};\n\nHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  noSpace: PropTypes.bool\n};\n\nexport default Heading;\n","import styled from 'styled-components';\n\nconst ResponsiveTileWrapper = styled.div`\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  height: auto;\n  width: 240px;\n  @media (min-width: 320px) {\n    width: 320px;\n  }\n  @media (min-width: 360px) {\n    width: 360px;\n  }\n  @media (min-width: 414px) {\n    width: 414px;\n  }\n`;\n\nexport default ResponsiveTileWrapper;\n","import styled from 'styled-components';\nimport { GiCowboyHolster, GiSewingString } from 'react-icons/gi';\nimport { FaTape } from 'react-icons/fa';\n\nimport ResponsiveTileWrapper from '../../../Components/Tiles/ResponsiveTileWrapper.js';\nimport colours from '../../../styles/colours.js';\n\nexport const GoToShopWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  @media (min-width: 1025px) {\n    flex-direction: row;\n    align-items: flex-end;\n  }\n`;\n\nexport const ImagesWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n  margin: 0 1rem;\n  @media (min-width: 768px) {\n    height: 400px;\n    flex-direction: row;\n  }\n`;\n\nexport const PrimaryImage = styled.img`\n  border-radius: 6px;\n  height: auto;\n  width: 100%;\n  @media (min-width: 768px) {\n    height: 100%;\n    width: auto;\n  }\n`;\n\nexport const SecondaryImages = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  @media (min-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const SecondaryImage = styled.img`\n  border-radius: 6px;\n  height: auto;\n  width: 48%;\n  @media (min-width: 768px) {\n    height: 192px;\n    width: auto;\n  }\n`;\n\nexport const LargeScreenImageAndButton = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const TertiaryImage = styled.img`\n  border-radius: 6px;\n  justify-self: flex-start;\n  position: relative;\n  right: 1rem;\n`;\n\nexport const HomeBottomWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\n// 'Services' section\nexport const Wrapper = styled(ResponsiveTileWrapper)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.5rem;\n  width: 96%;\n  @media (min-width: 768px) {\n    max-width: 760px;\n  }\n  @media (min-width: 1025px) {\n    max-width: 985px;\n  }\n`;\nexport const Title = styled.h4`\n  font-size: 1.5rem;\n  @media (min-width: 1025px) {\n    font-size: 1.75rem;\n    margin-bottom: 1rem;\n  }\n`;\nexport const IntroText = styled.p`\n  text-align: center;\n  font-size: 1.15rem;\n`;\nexport const ServicesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const ListItem = styled.p`\n  font-size: 1.35rem;\n`;\nexport const LeatherIcon = styled(GiCowboyHolster)`\n  font-size: 1.75rem;\n  color: colours.dark;\n`;\nexport const TailoringIcon = styled(GiSewingString)`\n  font-size: 1.75rem;\n  color: colours.dark;\n`;\nexport const AdjustmentIcon = styled(FaTape)`\n  font-size: 1.75rem;\n  color: ${colours.dark};\n`;\n","import React from 'react';\n\nimport Heading from '../../../Components/Headings/Heading.js';\nimport {\n  Wrapper,\n  IntroText,\n  ServicesList,\n  ListItem,\n  LeatherIcon,\n  TailoringIcon,\n  AdjustmentIcon\n} from './styledComponents.js';\n\nconst Services = () => {\n  return (\n    <Wrapper>\n      <Heading text='Our Services' />\n      <IntroText>All of our work is carried out in our small but well equipped workshop in Wales, UK.</IntroText>\n      <IntroText>As well as our stock items we also offer a range of high quality bespoke services.  Please get in touch to enquire about any of these.</IntroText>\n      <ServicesList>\n        <ListItem><LeatherIcon /> Old West Leather</ListItem>\n        <ListItem><TailoringIcon /> Bespoke Tailoring</ListItem>\n        <ListItem><AdjustmentIcon /> Fixes and Adjustments</ListItem>\n      </ServicesList>\n    </Wrapper>\n  );\n};\n\nexport default Services;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  justify-content: center;\n  align-items: center;\n  padding: 0 1rem;\n  width: 100%;\n  @media (min-width: 768px) {\n    padding: 0 2rem;\n  }\n`;\n\nconst Heading = styled.h1`\n  font-size: 1.35rem;\n  text-align: center;\n  @media (min-width: 1024px) {\n    font-size: 1.75rem;\n  }\n`;\n\nconst MainText = styled.p`\n  text-align: center;\n  font-size: 1.15rem;\n  letter-spacing: 1.5px\n  line-height: 2rem;\n`;\n\nconst Testimonial = ({ heading, text }) => {\n  return (\n    <Wrapper>\n      <MainText>\"{text}\"</MainText>\n      <Heading>{heading}</Heading>\n    </Wrapper>\n  );\n};\n\nTestimonial.propTypes = {\n  heading: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default Testimonial;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport {\n  IoArrowBackCircleOutline,\n  IoArrowForwardCircleOutline\n} from 'react-icons/io5';\n\nimport Testimonial from './Testimonial';\nimport colours from '../../styles/colours.js';\n\n// Custom styled components\nconst CarouselWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 400px;\n  @media (min-width: 414px) {\n    height: 350px;\n  };\n  @media (min-width: 600px) {\n    height: 300px;\n  }\n  @media (min-width: 768px) {\n    height: 250px;\n  }\n`;\n\nconst Spacer = styled.div`\n  width: 60px;\n  height: 60px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n`;\n\nconst ForwardArrow = styled(IoArrowForwardCircleOutline)`\n  font-size: 60px;\n  color: ${colours.dark};\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst BackArrow = styled(IoArrowBackCircleOutline)`\n  font-size: 60px;\n  color: ${colours.dark};\n  :hover {\n    cursor: pointer;\n  }\n`;\n\n// Return a selection of testimonials\nconst TestimonialCarousel = () => {\n  const testimonials = [\n    {\n      id: 0,\n      heading: 'Allan Lavigne, California USA',\n      text:\n        \"Diane knocked it out of the ballpark. When I first put it on straight out of the box it fit like a glove. The symmetry, stitching and lining were clean and professional. And the lines and silhouette were identical to Conrad's. I was so excited and couldn't have been happier with the fantastic work.\"\n    },\n    {\n      id: 1,\n      heading: 'Mr Kevin Groninga, Arizona USA',\n      text:\n        \"My wife and I have purchased several leather items from Steve and I gotta say, we couldn't have been more pleased with the final products. Steve's attention to detail and craftsmanship is second to none!\"\n    },\n    {\n      id: 2,\n      heading: 'Mrs A Sheppard, Bristol UK',\n      text:\n        'We were very impressed with the quality and professional workmanship you obviously put into your work. I am most grateful for all the help you gave me concerning the colour, design and authenticity prior to commissioning. I would not hesitate in recommending you and your workmanship to anyone.'\n    },\n    {\n      id: 3,\n      heading: 'Alan Williams, Hampshire UK',\n      text:\n        'Well strike me down \"Hand of God\" you certainly do have!  I was speechless for a minute or so. It is a wonderful piece of work and I am very impressed and will be one proud dude with these on my hips. So much I ordered cuffs and spur straps.'\n    },\n    {\n      id: 4,\n      heading: 'Mark Effner, Germany',\n      text:\n        \"The rig arrived today and I can't believe how beautiful it is.  All the details and everything and you did all that in such a short time. Also the price, payment procedure and shipping... everything perfect. I wish that shopping over the internet would always be like this.\"\n    }\n  ];\n\n  const [content, setContent] = useState(testimonials[0]);\n  const [slideIndex, setSlideIndex] = useState(0);\n\n  const handleBackClick = () => {\n    let indexOfTestimonial = _.findIndex(testimonials, {\n      heading: content.heading\n    });\n\n    if (indexOfTestimonial > 0) {\n      indexOfTestimonial--;\n      const previousItem = _.find(testimonials, { id: indexOfTestimonial });\n      setContent(previousItem);\n      setSlideIndex(indexOfTestimonial);\n    }\n  };\n\n  const handleNextClick = () => {\n    let indexOfTestimonial = _.findIndex(testimonials, {\n      heading: content.heading\n    });\n\n    if (indexOfTestimonial < testimonials.length - 1) {\n      indexOfTestimonial++;\n      const nextItem = _.find(testimonials, { id: indexOfTestimonial });\n      setContent(nextItem);\n      setSlideIndex(indexOfTestimonial);\n    }\n  };\n\n  return (\n    <>\n      <CarouselWrapper>\n        <Testimonial\n          heading={content.heading}\n          text={content.text}\n          isLastSlide={slideIndex === testimonials.length - 1}\n        />\n      </CarouselWrapper>\n      <Buttons>\n        {\n          slideIndex > 0\n            ? <BackArrow onClick={handleBackClick} />\n            : <Spacer />\n        }\n        {\n          slideIndex < testimonials.length - 1\n            ? <ForwardArrow onClick={handleNextClick} />\n            : <Spacer />\n        }\n      </Buttons>\n    </>\n  );\n};\n\nexport default TestimonialCarousel;\n","import React from 'react';\n\nimport TestimonialCarousel from '../../../Components/Testimonials/TestimonialCarousel.js';\n\nimport {\n  Wrapper\n} from './styledComponents.js';\n\nconst Testimonials = () => {\n  return (\n    <Wrapper>\n      <TestimonialCarousel />\n    </Wrapper>\n  );\n};\n\nexport default Testimonials;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport colours from '../styles/colours.js';\n\nconst ProgressSpinner = ({ colour, size }) => {\n  return <CircularProgress sx={{ color: colour ? colours[colour] : colours.dark }} size={size} />;\n};\n\nProgressSpinner.propTypes = {\n  colour: PropTypes.string,\n  size: PropTypes.string\n};\n\nexport default ProgressSpinner;\n","const fonts = {\n  fancyHeading: \"'Libre Bodoni', serif\",\n  standard: \"'Ubuntu', sans-serif\"\n};\n\nexport default fonts;\n","// External imports\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nimport ProgressSpinner from './ProgressSpinner.js';\n\n// Fonts\nimport fonts from '../styles/fonts.js';\nimport colours from '../styles/colours.js';\nconst { standard } = fonts;\nconst { dark } = colours;\n\n//\nconst ActionButton = ({ text, linkTo, variant, customStyles, onClick, name, value, disabled, fullWidth, loading }) => {\n  const basicStyles = {\n    fontFamily: standard,\n    width: fullWidth && '100%',\n    color: dark\n  };\n\n  if (customStyles) {\n    customStyles = {\n      ...basicStyles,\n      ...customStyles\n    };\n  }\n\n  const button =\n    <Button\n      onClick={onClick}\n      name={name}\n      value={value}\n      variant={variant || 'outlined'}\n      style={customStyles || basicStyles}\n      disabled={loading || disabled || false}\n    >\n      {\n        loading\n          ? <ProgressSpinner size='1.25rem' color={dark} />\n          : text\n      }\n    </Button>;\n\n  return linkTo ? <Link to={linkTo}>{button}</Link> : button;\n};\n\nActionButton.propTypes = {\n  text: PropTypes.node.isRequired,\n  name: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  linkTo: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object\n  ]),\n  variant: PropTypes.string,\n  customStyles: PropTypes.object,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool\n};\n\nexport default ActionButton;\n","// External imports\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n// Custom styled components\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: ${({ align }) => align === 'left' ? 'flex-start' : 'center'};\n  justify-content: ${({ align }) => align === 'left' ? 'flex-start' : 'center'};\n  margin: ${({ align }) => align === 'left' ? '1rem 0 1rem 1rem' : '1rem 0'};\n  width: 100%;\n`;\n\nexport const Heading = styled.h2`\n  font-size: 1.5rem;\n  text-align: ${({ align }) => align || 'center'};\n  padding-bottom: 1rem;\n  width: 85%;\n  @media (min-width: 650px) {\n    font-size: 2rem;\n  }\n  @media (min-width: 768px) {\n    font-size: 2.5rem;\n\n  }\n  @media (min-width: 1024px) {\n    font-size: 2.75rem;\n    width: 70%;\n  }\n`;\n\nexport const Text = styled.p`\n  text-align: ${({ align }) => align || 'center'};\n  font-size: 1.15rem;\n  letter-spacing: 1.5px\n  line-height: 2rem;\n  width: 85%;\n  @media (min-width: 1024px) {\n    font-size: 1.25rem;\n    width: 70%;\n  }\n`;\n\n//\nconst TextSection = ({ heading, text, secondaryText, align }) => {\n  return (\n    <Wrapper align={align}>\n      <Heading align={align}>{heading}</Heading>\n      <Text align={align}>{text}</Text>\n      {secondaryText && <Text>{secondaryText}</Text>}\n    </Wrapper>\n  );\n};\n\nTextSection.propTypes = {\n  heading: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  secondaryText: PropTypes.string,\n  align: PropTypes.string\n};\n\nexport default TextSection;\n","// External imports\nimport styled, { css } from 'styled-components';\n\n// Colours\nimport colours from '../styles/colours';\nconst { dark, light } = colours;\n\n// Block spacer to be used between sections of a page\nconst SectionSpacer = styled.div`\n  height: 0.25rem;\n  ${props =>\n    props.spaceAbove &&\n    css`\n      margin-top: 1.5rem;\n    `}\n  ${props =>\n    props.spaceBelow &&\n    css`\n      margin-bottom: 1.5rem;\n    `}\n  ${props =>\n    props.dark &&\n    css`\n      background-color: ${dark};\n      color: ${light};\n    `}\n`;\n\nexport default SectionSpacer;\n","import { useEffect, useState } from 'react';\n\n/*\n * Custom hook that tells you whether a given media query is active.\n *\n * Inspired by https://usehooks.com/useMedia/\n * https://gist.github.com/gragland/ed8cac563f5df71d78f4a1fefa8c5633\n */\n\nconst useMediaQuery = (query) => {\n  const [matches, setMatches] = useState(false);\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(query);\n    setMatches(mediaQuery.matches);\n    const handler = event => setMatches(event.matches);\n    mediaQuery.addEventListener('change', handler);\n    return () => mediaQuery.removeEventListener('change', handler);\n  }, [query]);\n\n  return matches;\n};\n\nexport default useMediaQuery;\n","import useMediaQuery from './useMediaQuery';\n\n/*\n * Get a set of boolean representing which breakpoint is active\n * and which breakpoints are inactive.\n *\n * Inspired by: https://github.com/contra/react-responsive/issues/162#issuecomment-592082035\n */\n\nconst useBreakpoints = () => {\n  const breakpoints = {\n    isXs: useMediaQuery('(max-width: 414px)'),\n    isSm: useMediaQuery('(min-width: 415px) and (max-width: 768px)'),\n    isMd: useMediaQuery('(min-width: 769px) and (max-width: 1024px)'),\n    isLg: useMediaQuery('(min-width: 1025px)'),\n    active: 'xs'\n  };\n  if (breakpoints.isXs) breakpoints.active = 'xs';\n  if (breakpoints.isSm) breakpoints.active = 'sm';\n  if (breakpoints.isMd) breakpoints.active = 'md';\n  if (breakpoints.isLg) breakpoints.active = 'lg';\n  return breakpoints;\n};\n\nexport default useBreakpoints;\n","import React from 'react';\n\nimport Services from './Services.js';\nimport Testimonials from './Testimonials.js';\nimport ActionButton from '../../../Components/ActionButton.js';\nimport TextSection from '../../../Components/TextSection.js';\nimport SectionSpacer from '../../../Components/SectionSpacer.js';\nimport colours from '../../../styles/colours.js';\nimport useBreakpoints from '../../../hooks/useBreakpoints.js';\n\nimport {\n  GoToShopWrapper,\n  ImagesWrapper,\n  PrimaryImage,\n  SecondaryImages,\n  SecondaryImage,\n  TertiaryImage,\n  LargeScreenImageAndButton,\n  HomeBottomWrapper\n} from './styledComponents.js';\n\nconst Home = () => {\n  const { isLg } = useBreakpoints();\n\n  let buttonStyles = {\n    height: '5rem',\n    backgroundColor: colours.dark,\n    borderRadius: '10px',\n    color: colours.light,\n    fontSize: '1.5rem',\n    width: '220px'\n  };\n  if (isLg) {\n    buttonStyles = {\n      ...buttonStyles,\n      display: 'relative',\n      right: '1rem'\n    };\n  }\n  return (\n    <>\n      <TextSection\n        headingFontSize='3rem'\n        heading='Makers of the finest bespoke, Victorian clothing and Old-West leather.'\n        text='We specialise in individual designs and styles for both clothing and leather. We use only the finest materials available and all of our products are carefully researched and hand crafted by us.'\n      />\n      <SectionSpacer spaceBelow dark />\n      <GoToShopWrapper>\n        <ImagesWrapper>\n          <PrimaryImage src='/images/gents-wear-landing-page.jpg' />\n          <SecondaryImages>\n            <SecondaryImage src='/images/ladies-wear-landing-page.jpg' />\n            <SecondaryImage src='/images/old-west-leather-landing-page.jpg' />\n          </SecondaryImages>\n        </ImagesWrapper>\n        {\n          isLg ? (\n            <LargeScreenImageAndButton>\n              <TertiaryImage src='https://placedog.net/200/276' />\n              <ActionButton\n                text='Browse Shop'\n                linkTo='/shop'\n                customStyles={buttonStyles}\n              />\n            </LargeScreenImageAndButton>\n          ) : (\n            <ActionButton\n              text='Browse Shop'\n              linkTo='/shop'\n              customStyles={buttonStyles}\n            />\n          )\n        }\n      </GoToShopWrapper>\n      <SectionSpacer spaceBelow spaceAbove dark />\n      <HomeBottomWrapper>\n        <Services />\n        <Testimonials />\n      </HomeBottomWrapper>\n      <SectionSpacer spaceBelow />\n    </>\n  );\n};\n\nexport default Home;\n","import { createContext, useState, useEffect, useCallback } from 'react';\nimport * as Realm from 'realm-web';\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\n\nexport const appId = 'doves-and-dandys-fkaex';\nconst graphqlUri = `https://us-east-1.aws.realm.mongodb.com/api/client/v2.0/app/${appId}/graphql`;\nconst app = new Realm.App(appId);\n\n// Guarantee that there's a logged in user with a valid access token\nconst getValidAccessToken = async () => {\n  console.log('getValidAccessToken fired. app:', app);\n  try {\n    if (!app.currentUser) {\n      console.log('Logging in an anonymous user.');\n      await app.logIn(Realm.Credentials.anonymous());\n      console.log('Logged in an anonymous user:', app.currentUser);\n    } else {\n      await app.currentUser.refreshCustomData();\n    }\n    return app.currentUser.accessToken;\n  } catch (err) {\n    throw new Error('Failed to get valid access token. Error:', err);\n  }\n};\n\n// Setup Graphql Apollo client\nexport default new ApolloClient({\n  link: new HttpLink({\n    uri: graphqlUri,\n    fetch: async (uri, options) => {\n      const accessToken = await getValidAccessToken();\n      options.headers.Authorization = `Bearer ${accessToken}`;\n      return fetch(uri, options);\n    }\n  }),\n  cache: new InMemoryCache()\n});\n\n// Setup Realm App context\nexport const RealmAppContext = createContext();\n\nexport const RealmAppProvider = ({ children }) => {\n  const [realmApp] = useState(app);\n  const [currentUser, setCurrentUser] = useState(app.currentUser);\n\n  console.log('RealmAppProvider -> realmApp', realmApp);\n  console.log('RealmAppProvider -> currentUser', currentUser);\n\n  const logIn = async (email, password) => {\n    let error;\n    let user;\n    try {\n      const credentials = Realm.Credentials.emailPassword(email, password);\n      user = await app.logIn(credentials);\n      setCurrentUser(user);\n    } catch (err) {\n      error = err;\n    }\n    return { user, error };\n  };\n\n  const logOut = async () => {\n    let error;\n    try {\n      if (app.currentUser) {\n        await app.currentUser.logOut();\n\n        if (app.currentUser) {\n          // If another user was logged in too, they're now the current user.\n          await app.currentUser.refreshCustomData();\n          setCurrentUser(app.currentUser);\n        } else {\n          // Otherwise, create a new anonymous user and log them in.\n          const credentials = Realm.Credentials.anonymous();\n          const user = await app.logIn(credentials);\n          setCurrentUser(user);\n        }\n      }\n    } catch (err) {\n      error = err;\n    }\n    return { error };\n  };\n\n  // Get the users db object and attach to Realm current user object\n  const getDbUser = useCallback(async () => {\n    console.log('getDbUser fired');\n    try {\n      const dbUser = await app.currentUser.functions.db_getFullUser(app.currentUser.id);\n\n      if (dbUser) {\n        if (currentUser.dbUser !== dbUser) {\n          setCurrentUser(prev => ({ ...prev, dbUser: dbUser }));\n        }\n      } else if (!currentUser.dbUser || Object.keys(currentUser.dbUser).length) {\n        setCurrentUser(prev => ({ ...prev, dbUser: {} }));\n      }\n    } catch (err) {\n      console.error('Failed to retrieve user details from db. Error:', err);\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    console.log('RealmAppProvider useEffect -> app.currentUser', app.currentUser);\n    console.log('RealmAppProvider useEffect -> currentUser (state)', currentUser);\n    if (currentUser && (!currentUser.dbUser || !currentUser.dbUser._id)) {\n      getDbUser();\n    }\n  }, [currentUser, getDbUser]);\n\n  const wrapped = {\n    ...realmApp,\n    currentUser,\n    setCurrentUser,\n    logIn,\n    logOut\n  };\n\n  return (\n    <RealmAppContext.Provider value={wrapped}>\n      {children}\n    </RealmAppContext.Provider>\n  );\n};\n","import styled from 'styled-components';\n\n// Not inside the grid wrapper\nexport const Wrapper = styled.div`\n  background-color: rgba(63, 81, 181, 1);\n  height: 65px;\n  margin-bottom: 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n`;\n\nexport const MainText = styled.h4`\n  color: #fff;\n  margin: 0;\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  gap: 2rem;\n`;\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport ActionButton from '../../../../Components/ActionButton.js';\nimport { RealmAppContext } from '../../../../realmApolloClient.js';\n\n// Styled components\nimport { Wrapper, MainText, ButtonsWrapper } from './styledComponents.js';\n\nconst buttonStyles = {\n  borderColor: '#fff',\n  color: '#fff'\n};\n\nconst Navbar = () => {\n  const app = useContext(RealmAppContext);\n  const history = useHistory();\n\n  const handleLogout = async (e) => {\n    e.preventDefault();\n    await app.logOut();\n    history.push('/');\n  };\n\n  return (\n    <Wrapper>\n      <MainText>Doves & Dandys Dashboard</MainText>\n      <ButtonsWrapper>\n        <ActionButton\n          text='view customer site'\n          linkTo='/'\n          customStyles={buttonStyles}\n        />\n        <ActionButton\n          text='logout'\n          onClick={handleLogout}\n          customStyles={buttonStyles}\n        />\n      </ButtonsWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Navbar;\n","import styled from 'styled-components';\n\nimport colours from '../../../../styles/colours.js';\n\nexport const DataSection = styled.div`\n  background-color: #fff;\n  border-radius: 6px;\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n  flex-direction: column;\n  margin: 0;\n  justify-content: flex-start;\n  padding: 1rem;\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n`;\nexport const DataRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  border-bottom: 0.03px solid rgba(0,0,0,0.2);\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.25rem;\n  min-height: 2.5rem;\n`;\nexport const DataRowLeftItem = styled.h6`\n  margin: 0 1rem 0 0;\n  width: 10rem;\n`;\nexport const DataRowRightItem = styled.h4`\n  margin: 0;\n  flex-wrap: wrap;\n`;\n\n// Delivery details\nexport const AddressWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\nexport const DeliveryNotesWrapper = styled(DataRow)`\n  margin-top: 1rem;\n  height: 12rem;\n`;\nexport const DeliveryNotes = styled.p`\n  font-size: 1.15rem;\n  margin: 0;\n  line-height: 1.5rem;\n  height: 12rem;\n  overflow: scroll;\n`;\n\n// Payment details\nexport const PaymentSectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  gap: 1rem;\n`;\nexport const RefundWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\n// Order Status\nexport const OrderStatusContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const CurrentStatusRow = styled(DataRow)`\n  background-color: ${colours.green};\n  color: ${colours.white};\n  align-items: center;\n  gap: 0.5rem;\n  margin-top: 0.5rem;\n  border: none;\n  padding: 1rem;\n  border-radius: 10px;\n`;\n\nexport const StatusButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem\n`;\n\nexport const DialogHeadingWrapper = styled.div`\n  margin: 0 1rem;\n`;\n","import styled from 'styled-components';\n\n// Parent grid wrapper\nexport const AdminWrapper = styled.div`\n  display: grid;\n  height: calc(100vh - 97px);\n  grid-template-columns: repeat(13, 1fr);\n  grid-template-rows: 1fr 1fr;\n  column-gap: 2rem;\n  row-gap: 2rem;\n  margin: 1rem;\n`;\n\n// Grid children -->\nconst GridItem = styled.div`\n  background-color: rgba(63, 81, 181, 1);\n  border-radius: 10px;\n  color: white;\n  font-weight: bold;\n  padding: 1rem;\n`;\nexport const OrdersWrapper = styled(GridItem)`\n  grid-column: 1 / 7;\n  grid-row: 1 / 3;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const InventoryWrapper = styled(GridItem)`\n  grid-column: 7 / 14;\n  grid-row: 1 / 2;\n`;\n\nexport const ArchiveWrapper = styled(GridItem)`\n  grid-column: 7 / 14;\n  grid-row: 2 / 3;\n`;\n\nexport const InventoryButtonWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 87%;\n`;\n\nexport const DialogContentWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 1rem;\n  margin: 1rem;\n`;\n\nexport const DataLoading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IoCheckmarkCircleSharp } from 'react-icons/io5';\n\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport ProgressSpinner from '../../../../Components/ProgressSpinner.js';\n\n// Styled components\nimport {\n  DataSection as Section,\n  DataRow,\n  DataRowLeftItem,\n  DataRowRightItem,\n  DeliveryNotesWrapper,\n  DeliveryNotes,\n  AddressWrapper\n} from './styledComponents.js';\nimport { DataLoading } from '../../styledComponents.js';\n\nconst DeliverySection = ({ order }) => {\n  const { delivery } = order;\n  return (\n    <Section>\n      <Heading text='Delivery Details' size='small' />\n      {\n        order && delivery ? (\n          <div>\n            <DataRow>\n              <DataRowLeftItem>Name</DataRowLeftItem>\n              <DataRowRightItem>{delivery.firstName} {delivery.lastName}</DataRowRightItem>\n            </DataRow>\n            <DataRow>\n              <DataRowLeftItem>Email</DataRowLeftItem>\n              <DataRowRightItem>{delivery.email}</DataRowRightItem>\n            </DataRow>\n            <DataRow>\n              <DataRowLeftItem>Phone</DataRowLeftItem>\n              <DataRowRightItem>{delivery.phone}</DataRowRightItem>\n            </DataRow>\n            <DataRow>\n              {\n                delivery.address\n                  ? <>\n                    <DataRowLeftItem>Address</DataRowLeftItem>\n                    <AddressWrapper>\n                      <DataRowRightItem>{delivery.address.line1}</DataRowRightItem>\n                      <DataRowRightItem>{delivery.address.line2}</DataRowRightItem>\n                      <DataRowRightItem>{delivery.address.city}</DataRowRightItem>\n                      <DataRowRightItem>{delivery.address.postcode.toUpperCase()}</DataRowRightItem>\n                      <DataRowRightItem>{delivery.address.country.toUpperCase()}</DataRowRightItem>\n                    </AddressWrapper>\n                  </>\n                  : <>\n                    <DataRowLeftItem>Store Pick-up</DataRowLeftItem>\n                    <IoCheckmarkCircleSharp style={{ fontSize: '1.5rem', color: 'green' }} />\n                  </>\n              }\n            </DataRow>\n            <DeliveryNotesWrapper>\n              <DataRowLeftItem>Notes</DataRowLeftItem>\n              <DeliveryNotes>\n                {order.extraInfo}\n              </DeliveryNotes>\n            </DeliveryNotesWrapper>\n          </div>\n        ) : (\n          <DataLoading>\n            <ProgressSpinner size='3rem' colour='blue' />\n          </DataLoading>\n        )\n      }\n    </Section>\n  );\n};\n\nDeliverySection.propTypes = {\n  order: PropTypes.object.isRequired\n};\n\nexport default DeliverySection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControl, InputLabel, Select, MenuItem } from '@mui/material';\n\nconst SelectInput = ({ name, value, required, label, handleChange, options, variant, disabled, style }) => (\n  <FormControl\n    fullWidth\n    sx={style}\n  >\n    <InputLabel>{label}</InputLabel>\n    <Select\n      id={name}\n      name={name}\n      value={value}\n      label={label}\n      aria-describedby={name}\n      required={required}\n      variant={variant || 'filled'}\n      onChange={handleChange}\n      disabled={disabled}\n      sx={{\n        backgroundColor: 'transparent',\n        background: 'transparent',\n        borderRadius: '4px'\n      }}\n      MenuProps={{\n        sx: {\n          '.MuiMenu-list': {\n            padding: '0.5rem'\n          },\n          '.MuiMenuItem-root': {\n            fontSize: '1.25rem',\n            width: '100%'\n          },\n          '.MuiButtonBase-root': {\n            justifyContent: 'flex-start'\n          },\n          '.MuiMenu-paper': {\n            width: '200px'\n          }\n        }\n      }}\n    >\n      {\n        options.map((option, index) => {\n          return (\n            <MenuItem key={index} value={option.value}>\n              {option.name}\n            </MenuItem>\n          );\n        })\n      }\n    </Select>\n  </FormControl>\n);\n\nSelectInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  required: PropTypes.bool,\n  variant: PropTypes.string,\n  disabled: PropTypes.bool,\n  style: PropTypes.object\n};\n\nexport default SelectInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { IoAlertCircleOutline, IoCheckmarkCircleOutline, IoWarningOutline } from 'react-icons/io5';\n\nconst Wrapper = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n  margin: 0.25rem;\n`;\n\nconst Message = styled.span`\n  color: ${props => props.colour};\n  font-size: 0.8rem;\n  margin: 0;\n`;\nconst TickIcon = styled(IoCheckmarkCircleOutline)`\n  color: green;\n  font-size: 1.25rem;\n`;\nconst WarningIcon = styled(IoWarningOutline)`\n  color: orange;\n  font-size: 1.25rem;\n`;\n\nconst ErrorIcon = styled(IoAlertCircleOutline)`\n  color: red; \n  font-size: 1.25rem;\n`;\n\nconst UserMessage = ({ text, type }) => {\n  let icon;\n  let colour;\n  switch (type) {\n    case 'success':\n      icon = <TickIcon />;\n      colour = 'green';\n      break;\n    case 'warning':\n      icon = <WarningIcon />;\n      colour = 'orange';\n      break;\n    case 'error':\n      icon = <ErrorIcon />;\n      colour = 'red';\n      break;\n    default: throw new Error('Invalid user message type');\n  }\n  return (\n    <Wrapper>\n      {icon}\n      <Message colour={colour}>{text}</Message>\n    </Wrapper>\n  );\n};\n\nUserMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\n\nexport default UserMessage;\n","export const convertStripeAmountToPrice = (amount) => {\n  // 50200 --> 502.00\n\n  const stringified = amount.toString();\n  const length = stringified.length;\n  const section1 = stringified.substring(0, length - 2);\n  const section2 = stringified.substring(length, length - 2);\n\n  return parseFloat(`${section1}.${section2}`);\n};\n\nexport const convertPriceToStripeAmount = (price) => {\n  // 502.00 --> 50200\n  const sections = price.toString().split('.');\n  return sections[1] ? parseInt(`${sections[0]}${sections[1]}`) : parseInt(sections[0]);\n};\n\nexport const toTwoDecimalPlaces = (value) => {\n  return parseFloat(value).toFixed(2);\n};\n\nexport const getCurrencySymbol = (currency) => {\n  const currencySymbols = {\n    GBP: '£',\n    USD: '$',\n    EUR: '€'\n  };\n  return currencySymbols[currency];\n};\n\nexport const getPriceInCurrency = (product, currency) => {\n  return `${getCurrencySymbol(currency)}${product[`price${currency}`]}`;\n};\n","import { convertStripeAmountToPrice } from './price.js';\n\nexport const getTotalPreviousRefunds = (refunds) => {\n  const amounts = refunds.map(refund => parseFloat(refund.amount));\n  return amounts.reduce((a, b) => a + b);\n};\n\nexport const verifyRefundAmount = (requestedAmount, orderTotal, previousRefunds) => {\n  const refundAmount = parseFloat(requestedAmount);\n  const totalOrderAmount = convertStripeAmountToPrice(orderTotal);\n\n  if (\n    (!previousRefunds && (refundAmount > totalOrderAmount)) ||\n    (previousRefunds && (refundAmount > (totalOrderAmount - previousRefunds)))\n  ) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const checkIsFullRefund = (refundAmount, orderTotal, refundedAmount) => {\n  const refundNum = parseFloat(refundAmount);\n  const refundedNum = refundedAmount ? parseFloat(refundedAmount) : null;\n  const orderTotalNum = parseFloat(orderTotal);\n\n  return refundedNum\n    ? refundNum === (orderTotalNum - refundedNum)\n    : refundNum === orderTotalNum;\n};\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField, InputAdornment } from '@mui/material';\n\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport ActionButton from '../../../../Components/ActionButton.js';\nimport ProgressSpinner from '../../../../Components/ProgressSpinner.js';\nimport SelectInput from '../../../../Components/Forms/SelectInput.js';\nimport UserMessage from '../../../../Components/UserMessage.js';\nimport { RealmAppContext } from '../../../../realmApolloClient.js';\nimport { convertStripeAmountToPrice, convertPriceToStripeAmount, toTwoDecimalPlaces } from '../../../../helpers/price.js';\nimport { getTotalPreviousRefunds, verifyRefundAmount, checkIsFullRefund } from '../../../../helpers/refund.js';\n\n// Styled components\nimport {\n  PaymentSectionWrapper,\n  DataSection as Section,\n  DataRow,\n  DataRowLeftItem,\n  DataRowRightItem,\n  RefundWrapper\n} from './styledComponents.js';\nimport { DataLoading } from '../../styledComponents.js';\n\nconst PaymentSection = ({ order }) => {\n  const app = useContext(RealmAppContext);\n\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [paymentIntent, setPaymentIntent] = useState();\n  const [existingRefundTotal, setExistingRefundTotal] = useState(0);\n  const [pendingRefundTotal, setPendingRefundTotal] = useState(0);\n  const [refund, setRefund] = useState({ reason: 'requested_by_customer' });\n\n  useEffect(() => {\n    if (order && order.refunds && order.refunds.length) {\n      const prevRefunds = getTotalPreviousRefunds(order.refunds);\n      setExistingRefundTotal(prevRefunds);\n    }\n  }, [order]);\n\n  const handleRefundSubmit = async () => {\n    setLoading(true);\n    if (!refund.amount || !refund.reason) {\n      setError('Refund must include an amount and reason');\n      return;\n    }\n\n    // Make sure the refund amount doesn't exceed the order amount (including any past partial refunds)\n    const verified = verifyRefundAmount(refund.amount, paymentIntent.amount, existingRefundTotal);\n\n    if (verified) {\n      const refundAmount = toTwoDecimalPlaces(refund.amount); // returns string representation of price to maintain trailing 0's\n      const orderTotal = convertStripeAmountToPrice(paymentIntent.amount);\n      const isFullRefund = checkIsFullRefund(refundAmount, orderTotal, existingRefundTotal);\n      const stripeAmount = convertPriceToStripeAmount(refundAmount);\n\n      // refund payment through stripe & add refund to db collection\n      const stripeRefund = await app.currentUser.functions.stripe_refundPaymentIntent(\n        paymentIntent.id,\n        stripeAmount,\n        refundAmount,\n        refund.reason,\n        isFullRefund\n      );\n      if (stripeRefund.status === 'succeeded') {\n        setExistingRefundTotal(existingRefundTotal + parseFloat(refundAmount));\n      } else if (stripeRefund.status === 'pending') {\n        setPendingRefundTotal(pendingRefundTotal + parseFloat(refundAmount));\n      } else {\n        setError('Refund failed');\n        return;\n      }\n    } else {\n      setError('Total refund amount exceeds the order amount');\n      return;\n    }\n\n    setLoading(false);\n    setError('');\n  };\n\n  const handleRefundReasonSelect = (e) => {\n    const reason = e.target.value;\n    setRefund(prev => ({ ...prev, reason }));\n  };\n  const handleRefundAmountInput = (e) => {\n    const amount = e.target.value;\n    setRefund(prev => ({ ...prev, amount }));\n  };\n\n  const getPaymentIntent = useCallback(async () => {\n    try {\n      const paymentIntent = await app.currentUser.functions.stripe_retrievePaymentIntent(order.paymentIntentId);\n      setPaymentIntent(paymentIntent);\n    } catch (err) {\n      console.error('Failed to retrieve payment intent', err);\n    }\n  }, [app.currentUser, order]);\n\n  useEffect(() => {\n    if (order && order.paymentIntentId && !paymentIntent) {\n      getPaymentIntent();\n    }\n  }, [order, paymentIntent, getPaymentIntent]);\n\n  useEffect(() => {\n    if (error && loading) {\n      setLoading(false);\n    }\n  }, [error, loading]);\n\n  return (\n    <PaymentSectionWrapper>\n      <Section>\n        <Heading text='Payment Details' size='small' />\n        {\n          order && paymentIntent\n            ? (\n              <div>\n                <DataRow>\n                  <DataRowLeftItem>Date Paid</DataRowLeftItem>\n                  <DataRowRightItem>{order.datePaid.split('T')[0]}</DataRowRightItem>\n                </DataRow>\n                <DataRow>\n                  <DataRowLeftItem>Amount Paid</DataRowLeftItem>\n                  <DataRowRightItem>{convertStripeAmountToPrice(paymentIntent.amount)}</DataRowRightItem>\n                </DataRow>\n                <DataRow>\n                  <DataRowLeftItem>Currency</DataRowLeftItem>\n                  <DataRowRightItem>{paymentIntent.currency.toUpperCase()}</DataRowRightItem>\n                </DataRow>\n                <DataRow>\n                  <DataRowLeftItem>Pending Refunds</DataRowLeftItem>\n                  <DataRowRightItem>{toTwoDecimalPlaces(pendingRefundTotal)}</DataRowRightItem>\n                </DataRow>\n                <DataRow>\n                  <DataRowLeftItem>Completed Refunds</DataRowLeftItem>\n                  <DataRowRightItem>{toTwoDecimalPlaces(existingRefundTotal)}</DataRowRightItem>\n                </DataRow>\n              </div>\n            ) : (\n              <DataLoading>\n                <ProgressSpinner size='3rem' colour='blue' />\n              </DataLoading>\n            )\n        }\n      </Section>\n      <Section>\n        <RefundWrapper>\n          <Heading text='Refund' size='small' />\n          <SelectInput\n            name='refundReason'\n            value={refund.reason}\n            label='Select a reason for the refund'\n            handleChange={handleRefundReasonSelect}\n            required\n            options={[\n              { name: 'Requested by customer', value: 'requested_by_customer' },\n              { name: 'Duplicate order', value: 'duplicate' },\n              { name: 'Fraudulent', value: 'fraudulent' }\n            ]}\n            variant='outlined'\n            isAdminSelect\n          />\n          <TextField\n            label='Refund amount'\n            variant='outlined'\n            required\n            InputProps={{\n              startAdornment: <InputAdornment position='start'>£</InputAdornment>\n            }}\n            onChange={handleRefundAmountInput}\n          />\n          <ActionButton\n            text='refund order'\n            onClick={handleRefundSubmit}\n            fullWidth\n            loading={loading}\n          />\n          {error && <UserMessage text={error} type='error' />}\n        </RefundWrapper>\n      </Section>\n    </PaymentSectionWrapper>\n  );\n};\n\nPaymentSection.propTypes = {\n  order: PropTypes.object.isRequired\n};\n\nexport default PaymentSection;\n","import { useRef } from 'react';\nimport { useMutation } from '@apollo/client';\n\nconst useDDMutation = (mutation, variables) => {\n  const resultsObj = useRef({ called: false, loading: false, data: {}, error: {} });\n\n  const resetResults = () => {\n    resultsObj.current = {};\n  };\n\n  const [callMutation, { data, loading, error }] = useMutation(mutation, { variables }, { new: true });\n\n  if (loading) {\n    resultsObj.current.called = true;\n    resultsObj.current.loading = true;\n  }\n  if (error) {\n    resultsObj.current.error = error;\n    resultsObj.current.called = true;\n    resultsObj.current.loading = false;\n  }\n  if (data) {\n    resultsObj.current.data = data;\n    resultsObj.current.called = true;\n    resultsObj.current.loading = false;\n  }\n\n  return [callMutation, {\n    data: resultsObj.current.data,\n    loading: resultsObj.current.loading,\n    error: resultsObj.current.error,\n    called: resultsObj.current.called,\n    resetResults\n  }];\n};\n\nexport default useDDMutation;\n","import { gql } from '@apollo/client';\n\nexport const USER_DETAILS = gql`\n  fragment UserDetails on User {\n    _id\n    user_id\n    firstName\n    lastName\n    email\n    phone\n    type\n  }\n`;\n\nexport const CATEGORY_DETAILS = gql`\n  fragment CategoryDetails on Category {\n    _id\n    category_id\n    description\n    image\n    name\n  }\n`;\n\nexport const SUBCATEGORY_DETAILS = gql`\n  fragment SubCategoryDetails on SubCategory {\n    _id\n    subCategory_id\n    category\n    description\n    image\n    name\n  }\n`;\n\nexport const PRODUCT_DETAILS = gql`\n  fragment ProductDetails on Product {\n    _id\n    product_id\n    category\n    description\n    images\n    name\n    numInStock\n    priceGBP\n    priceUSD\n    priceEUR\n    weightInGrams\n    category\n    subCategory\n  }\n`;\n\nexport const ORDER_DETAILS = gql`\n  fragment OrderDetails on Order {\n    _id\n    order_id\n    extraInfo\n    paymentIntentId\n    orderStatus\n    paymentStatus\n    dateCreated\n    datePaid\n    dateAccepted\n    dateDispatched\n    stripeAmountPaid\n    currency\n  }\n`;\n\nexport const ORDER_ITEM_DETAILS = gql`\n  fragment OrderItemDetails on OrderItem {\n    _id\n    orderItem_id\n    info\n    quantity\n  }\n`;\n\nexport const DELIVERY_DETAILS = gql`\n  fragment DeliveryDetails on Delivery {\n    _id\n    delivery_id\n    firstName\n    lastName\n    email\n    phone\n    price\n  }\n`;\n\nexport const ADDRESS_DETAILS = gql`\n  fragment AddressDetails on Address {\n    _id\n    address_id\n    line1\n    line2\n    city\n    county\n    postcode\n    country\n    isDefault\n  }\n`;\n\nexport const REFUND_DETAILS = gql`\n  fragment RefundDetails on Refund {\n    _id\n    refund_id\n    amount\n    reason\n    date\n    status\n  }\n`;\n","import gql from 'graphql-tag';\nimport {\n  USER_DETAILS,\n  ORDER_DETAILS,\n  ORDER_ITEM_DETAILS,\n  PRODUCT_DETAILS,\n  SUBCATEGORY_DETAILS,\n  CATEGORY_DETAILS,\n  DELIVERY_DETAILS,\n  ADDRESS_DETAILS\n} from './fragments.js';\n\nconst mutations = {\n  //\n  // Users -->\n  AddUser: gql`\n    ${USER_DETAILS}\n    mutation(\n      $_id: ObjectId!,\n      $user_id: String!,\n      $type: String!,\n      $email: String\n    ) {\n      insertOneUser(data: {\n        _id: $_id,\n        user_id: $user_id,\n        type: $type,\n        email: $email,\n      } ) {\n        ...UserDetails\n      }\n    }\n  `,\n  AddUserWithOrders: gql`\n    ${USER_DETAILS}\n    ${ORDER_DETAILS}\n    ${ORDER_ITEM_DETAILS}\n    ${PRODUCT_DETAILS}\n    ${DELIVERY_DETAILS}\n    ${ADDRESS_DETAILS}\n    mutation(\n      $_id: ObjectId!,\n      $user_id: String!,\n      $firstName: String,\n      $lastName: String,\n      $email: String,\n      $phone: String,\n      $type: String!,\n      $orders: [String]\n    ) {\n      insertOneUser(data: {\n        _id: $_id,\n        user_id: $user_id,\n        firstName: $firstName,\n        lastName: $lastName,\n        email: $email,\n        phone: $phone,\n        type: $type,\n        orders: {\n          link: $orders\n        },\n      } ) {\n        ...UserDetails\n        orders {\n          ...OrderDetails\n          delivery {\n            ...DeliveryDetails\n            address {\n              ...AddressDetails\n            }\n          }\n          orderItems {\n            ...OrderItemDetails\n            product {\n              ...ProductDetails\n            }\n          }\n        }\n      }\n    }\n  `,\n  UpdateUser: gql`\n    ${USER_DETAILS}\n    ${ORDER_DETAILS}\n    ${ORDER_ITEM_DETAILS}\n    ${PRODUCT_DETAILS}\n    ${ADDRESS_DETAILS}\n    mutation(\n      $id: ObjectId!,\n      $firstName: String,\n      $lastName: String,\n      $email: String,\n      $phone: String,\n      $type: String\n    ) {\n      updateOneUser(\n        query: { _id: $id },\n        set: {\n          firstName: $firstName,\n          lastName: $lastName,\n          email: $email,\n          phone: $phone,\n          type: $type\n        } ) {\n        ...UserDetails\n        addresses {\n          ...AddressDetails\n        }\n        orders {\n          ...OrderDetails\n          orderItems {\n            ...OrderItemDetails\n            product {\n              ...ProductDetails\n            }\n          }\n        }\n      }\n    }\n  `,\n  UpdateUserAddresses: gql`\n    ${USER_DETAILS}\n    ${ORDER_DETAILS}\n    ${ORDER_ITEM_DETAILS}\n    ${PRODUCT_DETAILS}\n    ${ADDRESS_DETAILS}\n    mutation(\n      $id: ObjectId!,\n      $addresses: [String!]\n    ) {\n      updateOneUser(\n        query: { _id: $id },\n        set: {\n          addresses: { link: $addresses }\n        } ) {\n        ...UserDetails\n        addresses {\n          ...AddressDetails\n        }\n        orders {\n          ...OrderDetails\n          orderItems {\n            ...OrderItemDetails\n            product {\n              ...ProductDetails\n            }\n          }\n        }\n      }\n    }\n  `,\n  UpdateUserOrders: gql`\n    ${USER_DETAILS}\n    mutation(\n      $user_id: String!,\n      $orders: [String!]\n    ) {\n      updateOneUser(\n        query: { user_id: $user_id },\n        set: {\n          orders: { link: $orders }\n        } ) {\n        ...UserDetails\n      }\n    }\n  `,\n  DeleteUser: gql`\n    ${USER_DETAILS}\n    mutation($id: ObjectId!) {\n      deleteOneUser(query: { _id: $id }) {\n        ...UserDetails\n      }\n    }\n  `,\n  // Shop Inventory -->\n  UpsertProduct: gql`\n  ${PRODUCT_DETAILS}\n    mutation(\n      $_id: ObjectId,\n      $product_id: String!,\n      $name: String!,\n      $images: [String]!,\n      $category: String!,\n      $subCategory: String!,\n      $description: String!,\n      $priceGBP: Int!,\n      $priceUSD: Int!,\n      $priceEUR: Int!,\n      $numInStock: Int!,\n      $weightInGrams: Int!\n    ) {\n      upsertProduct(input: {\n          _id: $_id,\n          product_id: $product_id,\n          name: $name,\n          images: $images,\n          category: $category,\n          subCategory: $subCategory,\n          description: $description,\n          priceGBP: $priceGBP,\n          priceUSD: $priceUSD,\n          priceEUR: $priceEUR,\n          numInStock: $numInStock,\n          weightInGrams: $weightInGrams\n          }\n       ) {\n        ...ProductDetails\n      }\n    }\n  `,\n  DeleteProduct: gql`\n    mutation(\n      $product_id: String!\n    ) {\n      deleteProduct(\n        input: $product_id\n      ) {\n        productId\n        isDeleted\n      }\n    }\n  `,\n  UpsertSubCategory: gql`\n  ${SUBCATEGORY_DETAILS}\n    mutation(\n      $_id: ObjectId,\n      $subCategory_id: String!\n      $name: String!,\n      $description: String!,\n      $image: String!,\n      $category: String!\n    ) {\n      upsertSubCategory(input: {\n        _id: $_id,\n        subCategory_id: $subCategory_id\n        name: $name,\n        description: $description,\n        image: $image,\n        category: $category\n      } ) {\n        ...SubCategoryDetails\n      }\n    }\n  `,\n  DeleteSubCategory: gql`\n    mutation(\n      $subCategory_id: String!\n    ) {\n      deleteSubCategory(\n        input: $subCategory_id\n      ) {\n        subCategoryId\n        isDeleted\n      }\n    }\n  `,\n  UpsertCategory: gql`\n  ${CATEGORY_DETAILS}\n    mutation(\n      $_id: ObjectId,\n      $category_id: String!\n      $name: String!,\n      $description: String!,\n      $image: String!\n    ) {\n      upsertCategory(input: {\n        _id: $_id,\n        category_id: $category_id\n        name: $name,\n        description: $description,\n        image: $image\n      } ) {\n        ...CategoryDetails\n      }\n    }\n  `,\n  DeleteCategory: gql`\n    ${CATEGORY_DETAILS}\n    mutation(\n      $category_id: String!\n    ) {\n      deleteOneCategory(query: {\n        category_id: $category_id\n      } ) {\n        ...CategoryDetails\n      }\n    }\n  `,\n  //\n  // Orders ->\n  CreateGuestOrder: gql`\n    ${USER_DETAILS}\n    ${PRODUCT_DETAILS}\n    ${ORDER_DETAILS}\n    ${ORDER_ITEM_DETAILS}\n    mutation(\n      $order_id: String!,\n      $user_ObjectId: ObjectId!,\n      $user_id: String!,\n      $orderItem_id: String!,\n      $product_id: String!,\n      $dateCreated: DateTime!\n    ) {\n      insertOneOrder(data: {\n        order_id: $order_id,\n        orderStatus: \"pendingInCart\",\n        paymentStatus: \"notAttempted\"\n        dateCreated: $dateCreated\n        customer: {\n          link: \"user_id\",\n          create: {\n            _id: $user_ObjectId,\n            user_id: $user_id,\n            type: \"guest\",\n            orders: {\n              link: [$order_id]\n            }\n          }\n        },\n        orderItems: {\n          link: [\"orderItem_id\"],\n          create: [{\n            orderItem_id: $orderItem_id,\n            quantity: 1,\n            order: {\n              link: $order_id\n            }\n            product: {\n              link: $product_id\n            }\n          }]\n        }\n      } ) {\n        customer {\n          ...UserDetails\n          orders {\n            ...OrderDetails\n            orderItems {\n              ...OrderItemDetails\n              product {\n                ...ProductDetails\n              }\n            }\n          }\n        }\n      }\n    }\n  `,\n  CreateOrderForExistingCustomer: gql`\n    ${USER_DETAILS}\n    ${PRODUCT_DETAILS}\n    ${ORDER_DETAILS}\n    ${ORDER_ITEM_DETAILS}\n    mutation(\n      $order_id: String!,\n      $user_id: String!,\n      $orderItem_id: String!,\n      $product_id: String!,\n      $dateCreated: DateTime!\n    ) {\n      insertOneOrder(data: {\n        order_id: $order_id,\n        orderStatus: \"pendingInCart\",\n        paymentStatus: \"notAttempted\"\n        dateCreated: $dateCreated\n        customer: {\n          link: $user_id,\n        },\n        orderItems: {\n          link: [\"orderItem_id\"],\n          create: [{\n            orderItem_id: $orderItem_id,\n            quantity: 1,\n            order: {\n              link: $order_id\n            },\n            product: {\n              link: $product_id\n            }\n          }]\n        }\n      }) {\n        ...OrderDetails\n        customer {\n          ...UserDetails\n          orders {\n            ...OrderDetails\n          }\n        }\n        orderItems {\n          ...OrderItemDetails\n          product {\n            ...ProductDetails\n          }\n        }\n      }\n    }\n  `,\n  CreateNewOrderItem: gql`\n    ${ORDER_ITEM_DETAILS}\n    ${ORDER_DETAILS}\n    ${PRODUCT_DETAILS}\n    mutation(\n      $orderItem_id: String!,\n      $order_id: String!,\n      $product_id: String!,\n      $info: String,\n      $quantity: Int = 1\n    ) {\n      insertOneOrderItem(data: {\n        orderItem_id: $orderItem_id,\n        info: $info,\n        quantity: $quantity,\n        order: {\n          link: $order_id\n        },\n        product: {\n          link: $product_id\n        }\n      } ) {\n        ...OrderItemDetails\n        order {\n          ...OrderDetails\n        },\n        product {\n          ...ProductDetails\n        }\n      }\n    }\n  `,\n  UpdateOrder: gql`\n    ${ORDER_DETAILS}\n    ${ORDER_ITEM_DETAILS}\n    ${PRODUCT_DETAILS}\n    mutation(\n      $id: ObjectId!,\n      $extraInfo: String,\n      $paymentIntentId: String,\n      $orderStatus: String,\n      $paymentStatus: String,\n      $dateCreated: DateTime,\n      $datePaid: DateTime,\n      $dateAccepted: DateTime,\n      $dateDispatched: DateTime,\n      $currency: String\n    ) {\n      updateOneOrder(\n        query: { _id: $id },\n        set: {\n          extraInfo: $extraInfo,\n          paymentIntentId: $paymentIntentId\n          orderStatus: $orderStatus,\n          paymentStatus: $paymentStatus,\n          dateCreated: $dateCreated,\n          datePaid: $datePaid,\n          dateAccepted: $dateAccepted,\n          dateDispatched: $dateDispatched,\n          currency: $currency\n        } ) {\n        ...OrderDetails\n        orderItems {\n          ...OrderItemDetails\n          product {\n            ...ProductDetails\n          }\n        }\n      }\n    }\n  `,\n  DeleteOrder: gql`\n    ${ORDER_DETAILS}\n    mutation($id: ObjectId!) {\n      deleteOneOrder(query: { _id: $id }) {\n        ...OrderDetails\n      }\n    }\n  `,\n  UpdateItemInOrder: gql`\n    ${ORDER_ITEM_DETAILS}\n    ${ORDER_DETAILS}\n    ${PRODUCT_DETAILS}\n    mutation(\n      $id: ObjectId!,\n      $info: String,\n      $quantity: Int\n    ) {\n      updateOneOrderItem(\n        query: { _id: $id },\n        set: {\n          info: $info,\n          quantity: $quantity\n        } ) {\n        ...OrderItemDetails\n        order {\n          ...OrderDetails\n          orderItems {\n            ...OrderItemDetails\n            product {\n              ...ProductDetails\n            }\n          }\n        }\n      }\n    }\n  `,\n  DeleteOrderItem: gql`\n    ${ORDER_ITEM_DETAILS}\n    mutation(\n      $orderItem_id: String!\n    ) {\n      deleteOneOrderItem(\n        query: { orderItem_id: $orderItem_id }\n      ) {\n        ...OrderItemDetails\n      }\n    }\n  `,\n  UpdateOrderItemsInOrder: gql`\n    ${ORDER_ITEM_DETAILS}\n    ${ORDER_DETAILS}\n    ${PRODUCT_DETAILS}\n    mutation(\n      $order_id: String!,\n      $orderItems: [String!]\n    ) {\n      updateOneOrder(\n        query: { order_id: $order_id},\n        set: {\n          orderItems: { link: $orderItems }\n        } ) {\n          ...OrderDetails\n          orderItems {\n            ...OrderItemDetails\n            product {\n              ...ProductDetails\n            }\n          }\n      }\n    }\n  `,\n  // Addresses ->\n  CreateAddress: gql`\n    ${ADDRESS_DETAILS}\n    mutation(\n      $address_id: String!,\n      $line1: String!,\n      $line2: String,\n      $city: String!,\n      $county: String!,\n      $postcode: String!,\n      $country: String = \"UK\",\n      $isDefault: Boolean = false\n    ) {\n      insertOneAddress(\n        data: {\n          address_id: $address_id,\n          line1: $line1,\n          line2: $line2,\n          city: $city,\n          county: $county,\n          postcode: $postcode,\n          country: $country,\n          isDefault: $isDefault\n        }\n      ) {\n        ...AddressDetails\n      }\n    }\n  `,\n  UpdateAddress: gql`\n    ${ADDRESS_DETAILS}\n    mutation(\n      $address_id: String!,\n      $line1: String,\n      $line2: String,\n      $city: String,\n      $county: String,\n      $postcode: String,\n      $country: String,\n      $isDefault: Boolean\n    ) {\n      updateOneAddress(\n        query: { address_id: $address_id },\n        set: {\n          line1: $line1,\n          line2: $line2,\n          city: $city,\n          county: $county,\n          postcode: $postcode,\n          country: $country,\n          isDefault: $isDefault\n        }\n      ) {\n        ...AddressDetails\n      }\n    }\n  `,\n  //\n  // Deliveries -->\n  AddDeliveryDetailsToOrder: gql`\n    ${ORDER_DETAILS}\n    ${DELIVERY_DETAILS}\n    mutation(\n      $order_id: String!,\n      $delivery_id: String!,\n      $firstName: String!,\n      $lastName: String!,\n      $email: String!,\n      $address_id: String,\n      $phone: String,\n      $price: Int\n    ) {\n      updateOneOrder(\n        query: { order_id: $order_id },\n        set: {\n          delivery: {\n            link: \"delivery_id\",\n            create: {\n              delivery_id: $delivery_id,\n              firstName: $firstName,\n              lastName: $lastName,\n              email: $email,\n              phone: $phone,\n              price: $price,\n              address: {\n                link: $address_id\n              }\n            }\n          }\n        }\n      ) {\n        ...OrderDetails,\n        delivery {\n          ...DeliveryDetails\n        }\n      }\n    }\n  `,\n  AddPickUpDetailsToOrder: gql`\n  ${ORDER_DETAILS}\n  ${DELIVERY_DETAILS}\n  mutation(\n    $order_id: String!,\n    $delivery_id: String!,\n    $firstName: String!,\n    $lastName: String!,\n    $email: String!,\n    $phone: String\n  ) {\n    updateOneOrder(\n      query: { order_id: $order_id },\n      set: {\n        delivery: {\n          link: \"delivery_id\",\n          create: {\n            delivery_id: $delivery_id,\n            firstName: $firstName,\n            lastName: $lastName,\n            email: $email,\n            phone: $phone\n          }\n        }\n      }\n    ) {\n      ...OrderDetails,\n      delivery {\n        ...DeliveryDetails\n      }\n    }\n  }\n`\n};\n\nexport default mutations;\n","export const isObjectEmpty = (obj) => {\n  if (typeof obj !== 'object') return undefined;\n  return !Object.keys(obj).length;\n};\n\nexport const capitaliseFirstCharacter = (string) => {\n  if (!string || typeof string !== 'string') return undefined;\n  return `${string.substring(0, 1).toUpperCase()}${string.substring(1)}`;\n};\n\nexport const getDateFromUTCString = (utcString) => {\n  if (typeof utcString !== 'string') return undefined;\n  return utcString.split('T')[0];\n};\n\nexport const getUpdatedObjectFields = (originalObj, fieldsToCompare) => {\n  const updatedFields = {};\n\n  for (const field in fieldsToCompare) {\n    if (originalObj[field] !== fieldsToCompare[field]) {\n      updatedFields[field] = fieldsToCompare[field];\n    }\n  }\n  const hasUpdatedFields = !!(Object.keys(updatedFields).length);\n\n  return {\n    updatedFields,\n    hasUpdatedFields\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport ActionButton from '../../../../Components/ActionButton.js';\nimport ProgressSpinner from '../../../../Components/ProgressSpinner.js';\nimport useDDMutation from '../../../../hooks/useDDMutation.js';\nimport mutations from '../../../../graphql/mutations.js';\nimport { capitaliseFirstCharacter } from '../../../../helpers/global.js';\n\n// Styled components\nimport {\n  DataSection as Section,\n  CurrentStatusRow,\n  DataRowLeftItem,\n  DataRowRightItem,\n  StatusButtons,\n  OrderStatusContainer\n} from './styledComponents.js';\nimport { DataLoading } from '../../styledComponents.js';\n\nconst StatusSection = ({ order }) => {\n  const [loading, setLoading] = useState({});\n  const [status, setStatus] = useState(order ? order.orderStatus : null);\n\n  const [updateOrder] = useDDMutation(mutations.UpdateOrder);\n\n  const updateOrderStatus = async (e, status) => {\n    try {\n      e.preventDefault();\n      setLoading({ button: status, state: true });\n\n      const variables = {\n        id: order._id,\n        orderStatus: status\n      };\n      if (status !== 'archived') {\n        const capitalisedStatus = capitaliseFirstCharacter(status);\n        const dateUpdatedKey = `date${capitalisedStatus}`;\n        variables[dateUpdatedKey] = new Date(Date.now());\n      }\n\n      await updateOrder({ variables });\n\n      setStatus(status);\n      setLoading({ button: status, state: false });\n    } catch (err) {\n      throw new Error('Failed to update order. Error:', err);\n    } finally {\n      loading.state === true && setLoading({});\n    }\n  };\n\n  useEffect(() => {\n    if (order && order.orderStatus !== status) {\n      setStatus(order.orderStatus);\n    }\n  }, [order, status]);\n\n  return (\n    <Section>\n      <Heading text='Order Status' size='small' />\n      {\n        order && status ? (\n          <OrderStatusContainer>\n            <CurrentStatusRow>\n              <DataRowLeftItem>Current Status</DataRowLeftItem>\n              <DataRowRightItem>{_.startCase(status)}</DataRowRightItem>\n            </CurrentStatusRow>\n            <StatusButtons>\n              <ActionButton\n                text='Accept Order'\n                onClick={(e) => updateOrderStatus(e, 'accepted')}\n                fullWidth\n                disabled={status === 'accepted' || status === 'dispatched' || status === 'archived'}\n                loading={loading.status === true && loading.button === 'accepted'}\n              />\n              <ActionButton\n                text='Mark as dispatched'\n                onClick={(e) => updateOrderStatus(e, 'dispatched')}\n                fullWidth\n                disabled={status === 'dispatched' || status === 'archived'}\n                loading={loading.status === true && loading.button === 'dispatched'}\n              />\n              <ActionButton\n                text='Archive Order'\n                onClick={(e) => updateOrderStatus(e, 'archived')}\n                fullWidth\n                disabled={status === 'archived'}\n                loading={loading.status === true && loading.button === 'archived'}\n              />\n            </StatusButtons>\n          </OrderStatusContainer>\n        ) : (\n          <DataLoading>\n            <ProgressSpinner size='3rem' colour='blue' />\n          </DataLoading>\n        )\n      }\n    </Section>\n  );\n};\n\nStatusSection.propTypes = {\n  order: PropTypes.object.isRequired\n};\n\nexport default StatusSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Heading from './Heading.js';\nimport ActionButton from '../ActionButton.js';\n\nexport const HeadingWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: flex-end;\n  margin: ${({ margin }) => margin || 0};\n  justify-content: space-between;\n`;\n\nconst LinkedHeading = ({ text, onClick, linkTo, buttonText, headingSize, color, margin }) => (\n  <HeadingWrapper margin={margin}>\n    <div style={{ flex: 1 }}>\n      <Heading\n        text={text}\n        noSpace\n        color={color}\n        size={headingSize}\n      />\n    </div>\n    <ActionButton\n      text={buttonText}\n      onClick={onClick || null}\n      linkTo={linkTo || null}\n      customStyles={{\n        marginTop: '0.5rem',\n        color: color === 'white' && '#fff',\n        borderColor: color === 'white' && '#fff'\n      }}\n    />\n  </HeadingWrapper>\n);\n\nLinkedHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  linkTo: PropTypes.string,\n  buttonText: PropTypes.string.isRequired,\n  headingSize: PropTypes.string,\n  color: PropTypes.string,\n  margin: PropTypes.string\n};\n\nexport default LinkedHeading;\n","import { gql } from '@apollo/client';\n\nimport {\n  USER_DETAILS,\n  CATEGORY_DETAILS,\n  SUBCATEGORY_DETAILS,\n  PRODUCT_DETAILS,\n  ORDER_DETAILS,\n  ORDER_ITEM_DETAILS,\n  DELIVERY_DETAILS,\n  ADDRESS_DETAILS,\n  REFUND_DETAILS\n} from './fragments.js';\n\n// Users\nexport const SINGLE_USER = gql`\n  ${USER_DETAILS}\n  query($id: ObjectId!) {\n    user(query: { _id: $id }) {\n      ...UserDetails\n    }\n  }\n`;\n\nexport const SINGLE_USER_BY_EMAIL = gql`\n  ${USER_DETAILS}\n  query($email: String!) {\n    user(query: { email: $email }) {\n      ...UserDetails\n    }\n  }\n`;\n\nexport const USER_DETAILED = gql`\n  ${USER_DETAILS}\n  ${ORDER_DETAILS}\n  ${ORDER_ITEM_DETAILS}\n  ${PRODUCT_DETAILS}\n  ${ADDRESS_DETAILS}\n  query($id: ObjectId!) {\n    user(query: { _id: $id }) {\n      ...UserDetails\n      addresses {\n        ...AddressDetails\n      }\n      orders {\n        ...OrderDetails\n        orderItems {\n          ...OrderItemDetails\n          product {\n            ...ProductDetails\n          }\n        }\n      }\n    }\n  }\n`;\n\n// Shop Categories\nexport const SINGLE_CATEGORY = gql`\n${CATEGORY_DETAILS}\n${SUBCATEGORY_DETAILS}\n query($categoryId: String!) {\n   category(query: { category_id: $categoryId, }) {\n     ...CategoryDetails\n     subCategories {\n       ...SubCategoryDetails\n     }\n   }\n }\n`;\n\nexport const SINGLE_CATEGORY_BY_NAME = gql`\n${CATEGORY_DETAILS}\n${SUBCATEGORY_DETAILS}\n query($name: String!) {\n   category(query: { name: $name, }) {\n     ...CategoryDetails\n     subCategories {\n       ...SubCategoryDetails\n     }\n   }\n }\n`;\n\nexport const ALL_CATEGORIES = gql`\n  ${CATEGORY_DETAILS}\n  query {\n    categories {\n      ...CategoryDetails\n    }\n  }\n`;\n\nexport const CATEGORY_SEARCH = gql`\n  ${CATEGORY_DETAILS}\n  query($name: String) {\n    categorySearch(input: $name) {\n      ...CategoryDetails\n    }\n  }\n`;\n\nexport const ALL_CATEGORIES_AND_SUBCATEGORIES = gql`\n  ${CATEGORY_DETAILS}\n  ${SUBCATEGORY_DETAILS}\n  query {\n    categories {\n      ...CategoryDetails\n      subCategories {\n        ...SubCategoryDetails\n      }\n    }\n  }\n`;\n\nexport const SINGLE_SUBCATEGORY_BY_NAME = gql`\n${SUBCATEGORY_DETAILS}\n${PRODUCT_DETAILS}\n query($name: String!, $category: String!) {\n   subCategory(query: {\n     AND: [\n       { name: $name },\n       { category: $category }\n     ]\n   }) {\n     ...SubCategoryDetails\n     products {\n       ...ProductDetails\n     }\n   }\n }\n`;\n\nexport const SINGLE_SUBCATEGORY = gql`\n${SUBCATEGORY_DETAILS}\n${PRODUCT_DETAILS}\n query($subCategoryId: String!) {\n   subCategory(query: { subCategory_id: $subCategoryId }) {\n     ...SubCategoryDetails\n     products {\n       ...ProductDetails\n     }\n   }\n }\n`;\n\nexport const ALL_SUBCATEGORIES = gql`\n  ${SUBCATEGORY_DETAILS}\n  query {\n    subCategories {\n      ...SubCategoryDetails\n    }\n  }\n`;\n\nexport const SUBCATEGORY_SEARCH = gql`\n  ${SUBCATEGORY_DETAILS}\n  query($name: String) {\n    subCategorySearch(input: $name) {\n      ...SubCategoryDetails\n    }\n  }\n`;\n\n// Shop products\nexport const SINGLE_PRODUCT = gql`\n  ${PRODUCT_DETAILS}\n  query(\n    $id: ObjectId,\n    $productId: String\n  ) {\n    product(\n      query: {\n        _id: $id,\n        product_id: $productId\n      } ) {\n      ...ProductDetails\n    }\n  }\n`;\n\nexport const ALL_PRODUCTS = gql`\n  ${PRODUCT_DETAILS}\n  query {\n    products {\n      ...ProductDetails\n    }\n  }\n`;\n\nexport const PRODUCTS_SEARCH = gql`\n  ${PRODUCT_DETAILS}\n  query($name: String) {\n    productSearch(input: $name) {\n      ...ProductDetails\n    }\n  }\n`;\n\n// Orders\nexport const SINGLE_ORDER_DETAILED = gql`\n  ${ORDER_DETAILS}\n  ${ORDER_ITEM_DETAILS}\n  ${PRODUCT_DETAILS}\n  ${USER_DETAILS}\n  ${DELIVERY_DETAILS}\n  ${ADDRESS_DETAILS}\n  ${REFUND_DETAILS}\n  query($orderId: String!) {\n    order(query: { order_id: $orderId }) {\n      ...OrderDetails\n      delivery {\n        ...DeliveryDetails\n        address {\n          ...AddressDetails\n        }\n      }\n      customer {\n        ...UserDetails\n      }\n      orderItems {\n        ...OrderItemDetails\n        product {\n          ...ProductDetails\n        }\n      }\n      refunds {\n        ...RefundDetails\n      }\n    }\n  }\n`;\n\nexport const SINGLE_ORDER_BASIC = gql`\n  ${ORDER_DETAILS}\n  query($id: ObjectId!) {\n    order(query: { _id: $id }) {\n      ...OrderDetails\n    }\n  }\n`;\n\nexport const ORDER_BY_PAYMENT_INTENT = gql`\n  ${ORDER_DETAILS}\n  ${ORDER_ITEM_DETAILS}\n  ${PRODUCT_DETAILS}\n  ${DELIVERY_DETAILS}\n  ${ADDRESS_DETAILS}\n  query($paymentIntentId: String!) {\n    order(query: { paymentIntentId: $paymentIntentId }) {\n      ...OrderDetails,\n      delivery {\n        ...DeliveryDetails\n        address {\n          ...AddressDetails\n        }\n      }\n      orderItems {\n        ...OrderItemDetails\n        product {\n          ...ProductDetails\n        }\n      }\n    }\n  }\n`;\n\nexport const ALL_ORDERS = gql`\n  ${ORDER_DETAILS}\n  query {\n    orders {\n      ...OrderDetails\n    }\n  }\n`;\n\nexport const ADMIN_ACTIVE_ORDERS = gql`\n  ${ORDER_DETAILS}\n  ${ORDER_ITEM_DETAILS}\n  ${PRODUCT_DETAILS}\n  ${USER_DETAILS}\n  query {\n    orders(\n      query: {\n        AND: [\n          {\n            OR: [\n              { paymentStatus: \"successful\" },\n              { paymentStatus: \"refunded\" },\n            ]\n          },\n          { orderStatus_ne: \"archived\" }\n        ]\n      },\n      sortBy: DATEPAID_DESC\n    ) {\n      ...OrderDetails\n      orderItems {\n        ...OrderItemDetails\n        product {\n          ...ProductDetails\n        }\n      }\n      customer {\n        ...UserDetails\n      }\n    }\n  }\n`;\n\nexport const ADMIN_ARCHIVED_ORDERS = gql`\n  ${ORDER_DETAILS}\n  ${ORDER_ITEM_DETAILS}\n  ${PRODUCT_DETAILS}\n  ${USER_DETAILS}\n  query {\n    orders(\n      query: { orderStatus: \"archived\" },\n      sortBy: DATEPAID_DESC\n    ) {\n      ...OrderDetails\n      orderItems {\n        ...OrderItemDetails\n        product {\n          ...ProductDetails\n        }\n      }\n      customer {\n        ...UserDetails\n      }\n    }\n  }\n`;\n\nexport const DELIVERY_BY_ID = gql`\n  ${DELIVERY_DETAILS}\n  query($delivery_id: String!) {\n    delivery(query: { delivery_id: $delivery_id }) {\n      ...DeliveryDetails\n    }\n  }\n`;\n\nexport const ADDRESSES_BY_ID = gql`\n  ${ADDRESS_DETAILS}\n  query(\n    $addressIds: [String]!\n  ) {\n    addresses(query: {\n      address_id_in: $addressIds\n    } ) {\n      ...AddressDetails\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport { Dialog } from '@mui/material';\n\nimport DeliverySection from './DeliverySection.js';\nimport PaymentSection from './PaymentSection.js';\nimport StatusSection from './StatusSection.js';\nimport LinkedHeading from '../../../../Components/Headings/LinkedHeading.js';\nimport { SINGLE_ORDER_DETAILED } from '../../../../graphql/queries.js';\n\nimport { DialogHeadingWrapper } from './styledComponents.js';\nimport { DialogContentWrapper } from '../../styledComponents.js';\n\nconst OrderDetails = ({ open, handleClose, orderId }) => {\n  const [order, setOrder] = useState();\n\n  const { data, loading } = useQuery(SINGLE_ORDER_DETAILED, {\n    variables: { orderId },\n    skip: !orderId\n  });\n\n  useEffect(() => {\n    if (data && data.order) {\n      setOrder(data.order);\n    }\n  }, [data, loading]);\n\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n      sx={{\n        '.MuiDialog-paper': {\n          backgroundColor: 'rgba(63, 81, 181, 1)'\n        }\n      }}\n    >\n      <DialogHeadingWrapper>\n        <LinkedHeading\n          text='Manage Orders'\n          onClick={handleClose}\n          buttonText='back to dashboard'\n          color='white'\n        />\n      </DialogHeadingWrapper>\n      <DialogContentWrapper>\n        <DeliverySection order={order || {}} />\n        <PaymentSection order={order || {}} />\n        <StatusSection order={order || {}} />\n      </DialogContentWrapper>\n    </Dialog>\n  );\n};\n\nOrderDetails.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  orderId: PropTypes.string.isRequired\n};\n\nexport default OrderDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@mui/material';\nimport uniqueString from 'unique-string';\n\nconst DDTable = ({ columns, rows, size, handleRowClick, style }) => {\n  return (\n    <TableContainer\n      sx={style || {\n        background: 'transparent',\n        WebkitBoxShadow: '-3px -1px 10px 2px rgba(0,0,0,0.2)',\n        boxShadow: '-3px -1px 10px 2px rgba(0,0,0,0.2)'\n      }}\n      component={Paper}\n    >\n      <Table sx={{ width: '100%' }} size={size || 'medium'}>\n        <TableHead>\n          <TableRow>\n            {\n              columns.map(c =>\n                <TableCell key={uniqueString()} align='left'>{c.label}</TableCell>\n              )\n            }\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => {\n            return (\n              <TableRow\n                key={uniqueString()}\n                sx={{\n                  '&:last-child td, &:last-child th': { border: 0 },\n                  ':hover': {\n                    cursor: handleRowClick ? 'pointer' : 'cursor'\n                  }\n                }}\n                hover={!!handleRowClick}\n                onClick={handleRowClick ? () => handleRowClick(row.orderId) : null}\n              >\n                {\n                  columns.map(column =>\n                    <TableCell key={uniqueString()} align='left'>{row[column.name]}</TableCell>\n                  )\n                }\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nDDTable.defaultProps = {\n  maxRows: 25\n};\n\nDDTable.propTypes = {\n  rows: PropTypes.array.isRequired,\n  maxRows: PropTypes.number.isRequired,\n  columns: PropTypes.array.isRequired,\n  size: PropTypes.string,\n  handleRowClick: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default DDTable;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport _ from 'lodash';\n\nimport OrderDetails from './OrderDetails.js';\nimport DDTable from '../../../../Components/Table/DDTable.js';\nimport LinkedHeading from '../../../../Components/Headings/LinkedHeading.js';\nimport ProgressSpinner from '../../../../Components/ProgressSpinner.js';\nimport { ADMIN_ACTIVE_ORDERS, ADMIN_ARCHIVED_ORDERS } from '../../../../graphql/queries.js';\n\n// Styled components\nimport { OrdersWrapper, DataLoading } from '../../styledComponents.js';\n\nconst Orders = () => {\n  // Dialog state / handlers\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [orderType, setOrderType] = useState('active');\n  const [rows, setRows] = useState([]);\n\n  const selectedOrderId = useRef('');\n\n  const { data: activeOrders, loading, error } = useQuery(ADMIN_ACTIVE_ORDERS);\n  const { data: archivedOrders } = useQuery(ADMIN_ARCHIVED_ORDERS);\n\n  const handleCloseDialog = () => {\n    setDialogOpen(false);\n  };\n  const handleOpenDialog = (orderId) => {\n    selectedOrderId.current = orderId;\n    setDialogOpen(true);\n  };\n\n  const columns = [\n    { name: 'orderId', label: 'Order ID' },\n    { name: 'product', label: 'Product' },\n    { name: 'paymentStatus', label: 'Payment Status' },\n    { name: 'orderStatus', label: 'Order Status' }\n  ];\n\n  useEffect(() => {\n    try {\n      const buildRows = (orderId, product, paymentStatus, orderStatus) => {\n        return {\n          orderId,\n          product,\n          paymentStatus: _.startCase(paymentStatus),\n          orderStatus: _.startCase(orderStatus)\n        };\n      };\n\n      const queryData = orderType === 'active' ? activeOrders : archivedOrders;\n\n      if (queryData && queryData.orders && queryData.orders.length) {\n        const orders = queryData.orders;\n\n        const tableRows = orders.map(order => {\n          let product = 'Multiple products';\n          if (order.orderItems.length === 1) {\n            product = order.orderItems[0].product.name;\n          }\n\n          return buildRows(\n            order.order_id,\n            product,\n            order.paymentStatus,\n            order.orderStatus\n          );\n        });\n        setRows(tableRows);\n      } else if (error) {\n        throw new Error('Graphql error:', error.message);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [orderType, activeOrders, archivedOrders, error]);\n\n  const handleSwitchOrderType = () => {\n    if (orderType === 'active') setOrderType('archived');\n    if (orderType === 'archived') setOrderType('active');\n  };\n\n  return (\n    <>\n      <OrderDetails\n        open={dialogOpen}\n        handleClose={handleCloseDialog}\n        orderId={selectedOrderId.current}\n      />\n      <OrdersWrapper>\n        <LinkedHeading\n          text={`${_.startCase(orderType)} Orders`}\n          size='small'\n          color='white'\n          onClick={handleSwitchOrderType}\n          buttonText={`View ${orderType === 'active' ? 'Archived' : 'Active'} Orders`}\n        />\n        {\n          loading ? (\n            <DataLoading>\n              <ProgressSpinner size='3rem' colour='white' />\n            </DataLoading>\n          ) : (\n            rows ? (\n              <DDTable\n                rows={rows}\n                columns={columns}\n                size='small'\n                handleRowClick={handleOpenDialog}\n                style={{ marginTop: '1rem' }}\n              />\n            ) : (\n              <p style={{ color: 'white' }}>No active orders</p>\n            )\n          )\n        }\n      </OrdersWrapper>\n    </>\n  );\n};\n\nexport default Orders;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ActionButton from '../../../../Components/ActionButton.js';\n\nconst style = {\n  border: '0.25rem solid white',\n  color: 'white',\n  width: '220px',\n  height: '200px',\n  fontSize: '1.25rem',\n  borderRadius: '25px'\n};\n\nconst BigButton = ({ type, handleSelection }) => (\n  <ActionButton\n    text={type}\n    onClick={handleSelection}\n    customStyles={style}\n  />\n);\n\nBigButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  handleSelection: PropTypes.func.isRequired\n};\n\nexport default BigButton;\n","import _ from 'lodash';\n\nexport const validateInventoryFields = (requestedFields, type) => {\n  let requiredFields;\n  switch (type) {\n    case 'product':\n      requiredFields = [\n        'name',\n        'description',\n        'category',\n        'subCategory',\n        'images',\n        'priceGBP',\n        'priceUSD',\n        'priceEUR',\n        'numInStock',\n        'weightInGrams'\n      ];\n      break;\n    case 'subCategory':\n      requiredFields = ['name', 'description', 'category', 'image'];\n      break;\n    case 'category':\n      requiredFields = ['name', 'description', 'image'];\n      break;\n    default: throw new Error(`Invalid type '${type}' supplied to validateInventoryFields`);\n  }\n\n  const failedItems = [];\n\n  for (const field of requiredFields) {\n    if (!requestedFields[field]) {\n      failedItems.push(field);\n    }\n  }\n  if (failedItems.length) {\n    return { result: 'failed', failedItems };\n  }\n\n  for (const field in requestedFields) {\n    const item = requestedFields[field];\n    switch (field) {\n      case 'name':\n      case 'description':\n      case 'image':\n        if (typeof item !== 'string' || item.trim().length < 1) {\n          failedItems.push(field);\n        }\n        break;\n      case 'images':\n        if (!item.length) {\n          failedItems.push(field);\n        }\n        break;\n      case 'priceGBP':\n      case 'priceUSD':\n      case 'priceEUR': {\n        const parsed = parseFloat(item);\n        if (parsed === 0) {\n          failedItems.push(field);\n        }\n      }\n        break;\n      case 'numInStock':\n      case 'weightInGrams': {\n        const parsed = parseInt(item);\n        if (typeof parsed !== 'number') {\n          failedItems.push(field);\n        }\n      }\n        break;\n      default:\n    }\n  }\n  return failedItems.length\n    ? { result: 'failed', failedItems }\n    : { result: 'passed' };\n};\n\nexport const getTrimmedFormFields = (fields) => {\n  const clonedFields = Object.assign(fields, {});\n  for (const field in clonedFields) {\n    let item = clonedFields[field];\n    if (typeof item === 'string') {\n      item = item.trim();\n    }\n  }\n  return clonedFields;\n};\n\nexport const getInitialFormFields = (type) => {\n  switch (type) {\n    case 'product':\n      return {\n        name: '',\n        description: '',\n        images: [],\n        category: '',\n        subCategory: '',\n        numInStock: '',\n        priceGBP: '',\n        priceUSD: '',\n        priceEUR: '',\n        weightInGrams: ''\n      };\n    case 'subCategory':\n      return {\n        name: '',\n        description: '',\n        image: '',\n        category: ''\n      };\n    case 'category':\n      return {\n        name: '',\n        description: '',\n        image: ''\n      };\n    default: throw new Error(`Invalid inventory type '${type}' supplied to getInitialFormFields`);\n  }\n};\n\nexport const getFormattedRow = (item, type) => {\n  if (!item || Object.keys(item).length === 0 || !type || typeof type !== 'string') {\n    throw new Error('Failed to supply proper input to getFormattedRow');\n  }\n\n  const sharedFields = {\n    id: item[`${type}_id`],\n    name: _.startCase(item.name)\n  };\n  switch (type) {\n    case 'product':\n      return {\n        ...sharedFields,\n        numInStock: item.numInStock,\n        price: item.priceGBP,\n        category: _.startCase(item.category),\n        subcategory: _.startCase(item.subCategory)\n      };\n    case 'subCategory':\n      return {\n        ...sharedFields,\n        category: _.startCase(item.category)\n      };\n    case 'category':\n      return sharedFields;\n    default: throw new Error(`Invalid inventory type '${type}' supplied to getFormattedRow`);\n  }\n};\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@mui/material';\nimport _ from 'lodash';\nimport uniqueString from 'unique-string';\n\nimport LinkedHeading from '../../../../Components/Headings/LinkedHeading.js';\nimport {\n  getInitialFormFields,\n  validateInventoryFields,\n  getTrimmedFormFields,\n  getFormattedRow\n} from '../../../../helpers/inventory.js';\nimport { isObjectEmpty, capitaliseFirstCharacter } from '../../../../helpers/global.js';\nimport mutations from '../../../../graphql/mutations.js';\nimport useDDMutation from '../../../../hooks/useDDMutation.js';\n\nimport { DialogContentWrapper } from '../../styledComponents.js';\n\nconst InventoryDetails = ({ tableSection, editSection, inventoryType, open, handleClose }) => {\n  // Table state\n  const [tableRows, setTableRows] = useState([]);\n  const [itemToEdit, setItemToEdit] = useState({});\n  const lastSelectedItem = useRef({});\n\n  // Form state\n  const initialFields = useRef(getInitialFormFields(inventoryType));\n  const [fields, setFields] = useState(initialFields.current);\n  const [loading, setLoading] = useState({ type: '', state: false });\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [deleteRequested, setDeleteRequested] = useState(false);\n\n  const inventoryTypeId = `${inventoryType}_id`;\n  const selectedRowId = useRef(itemToEdit ? itemToEdit[inventoryTypeId] : null);\n  const shouldCreateNewItem = !itemToEdit || isObjectEmpty(itemToEdit);\n  const capitalisedInventoryType = capitaliseFirstCharacter(inventoryType);\n\n  // Mutations\n  const [upsertItem] = useDDMutation(mutations[`Upsert${capitalisedInventoryType}`]);\n  const [deleteItem] = useDDMutation(mutations[`Delete${capitalisedInventoryType}`]);\n\n  const TableComponent = tableSection;\n  const EditComponent = editSection;\n\n  const handleResetEditForm = () => {\n    setItemToEdit({});\n    setFields(initialFields.current);\n    setLoading({ type: '', state: false });\n    setMessage({ type: '', text: '' });\n    setDeleteRequested(false);\n  };\n\n  const handleCloseAndReset = () => {\n    handleResetEditForm();\n    setTableRows([]);\n    handleClose();\n  };\n\n  const handleItemSelected = (item) => {\n    setItemToEdit(item);\n    lastSelectedItem.current = item;\n  };\n\n  const handleUpsertItem = async () => {\n    try {\n      setLoading({ type: 'upsert', state: true });\n\n      // Make sure inputted fields are valid and contain all required fields\n      const { result, failedItems } = validateInventoryFields(fields, inventoryType);\n\n      if (result === 'failed') {\n        console.log('failedItems', failedItems);\n        setMessage({\n          type: 'error',\n          text: 'Some form fields have failed validation, please check and resubmit'\n        });\n        return;\n      }\n\n      // Get all fields in proper format for db\n      const trimmedFields = getTrimmedFormFields(fields);\n\n      // Build variables object for mutation\n      const variables = {\n        [inventoryTypeId]: shouldCreateNewItem ? `${inventoryType}-${await uniqueString()}` : itemToEdit[inventoryTypeId],\n        ...trimmedFields\n      };\n      if (!shouldCreateNewItem) {\n        variables._id = itemToEdit._id;\n      }\n\n      // Run mutation\n      const { data } = await upsertItem({ variables });\n\n      // Get the relevant fields from the upserted document and make sure form fields are the same\n      const { __typename, _id, ...upsertedItem } = data[`upsert${capitalisedInventoryType}`];\n      setFields(prev => ({ ...prev, upsertedItem }));\n\n      // Do some extra formatting for the table row\n      const formattedRow = getFormattedRow(upsertedItem, inventoryType);\n\n      // Replace the old table row with the updated one or add a new row\n      const clonedTableRows = JSON.parse(JSON.stringify(tableRows));\n\n      if (!shouldCreateNewItem) {\n        const indexOfUpdatedRow = clonedTableRows.findIndex(row => row.id === itemToEdit[inventoryTypeId]);\n        clonedTableRows[indexOfUpdatedRow] = formattedRow;\n      } else {\n        clonedTableRows.push(formattedRow);\n      }\n      setTableRows(clonedTableRows);\n\n      // Show a success message\n      setMessage({\n        type: 'success',\n        text: shouldCreateNewItem ? `${capitalisedInventoryType} added!` : `${capitalisedInventoryType} updated!`\n      });\n    } catch {\n      setMessage({\n        type: 'error',\n        text: shouldCreateNewItem ? `Failed to create new ${inventoryType}` : `Failed to update ${inventoryType}`\n      });\n    } finally {\n      setLoading({ type: '', state: false });\n    }\n  };\n\n  const handleDeleteItemRequest = () => {\n    // Make sure an item is selected to delete\n    if (!itemToEdit || isObjectEmpty(itemToEdit)) {\n      setMessage({\n        type: 'error',\n        text: `Must select a ${inventoryType} to delete`\n      });\n      return;\n    }\n    // If item is category or subCategory - make sure they have no children (must delete/move children first)\n    const relatedDocuments = {\n      category: 'subCategories',\n      subCategory: 'products'\n    };\n    const relatedDocumentArray = itemToEdit[relatedDocuments[inventoryType]];\n    if (relatedDocumentArray && relatedDocumentArray.length) {\n      setMessage({\n        type: 'error',\n        text: `Must move or delete all related ${relatedDocuments[inventoryType]} before deleting a ${_.kebabCase(inventoryType)}`\n      });\n      return;\n    }\n    setDeleteRequested(true);\n  };\n\n  const handleDeleteItem = async () => {\n    try {\n      setLoading({ type: 'delete', state: true });\n      const { data } = await deleteItem({\n        variables: { [inventoryTypeId]: itemToEdit[inventoryTypeId] }\n      });\n\n      const deletedItem = data[`delete${capitalisedInventoryType}`];\n\n      if (deletedItem && deletedItem.isDeleted) {\n        const updatedRows = tableRows.filter(row => row.id !== itemToEdit[inventoryTypeId]);\n        setTableRows(updatedRows);\n        setFields(initialFields.current);\n      }\n    } catch {\n      setMessage({\n        type: 'error',\n        text: 'Failed to delete item'\n      });\n    } finally {\n      setLoading({ type: '', state: false });\n      setDeleteRequested(false);\n    }\n  };\n\n  // Insert data into edit form on row selection / reset form on 'create new' selection\n  const populateFormFields = useCallback(() => {\n    const formKeys = Object.keys(initialFields.current);\n    const itemFields = {};\n\n    for (const key of formKeys) {\n      itemFields[key] = key === 'name' ? _.startCase(itemToEdit[key]) : itemToEdit[key];\n    }\n    itemFields !== fields && setFields(itemFields);\n  }, [itemToEdit, fields]);\n\n  useEffect(() => {\n    if (!itemToEdit || ((itemToEdit && isObjectEmpty(itemToEdit)) && selectedRowId.current)) {\n      setFields(initialFields);\n      message && setMessage(null);\n      deleteRequested && setDeleteRequested(false);\n      selectedRowId.current = null;\n    } else if (itemToEdit && itemToEdit[inventoryTypeId] && itemToEdit[inventoryTypeId] !== selectedRowId.current) {\n      populateFormFields();\n      message && setMessage(null);\n      deleteRequested && setDeleteRequested(false);\n      selectedRowId.current = itemToEdit[inventoryTypeId];\n    }\n  }, [itemToEdit, populateFormFields, message, deleteRequested, inventoryTypeId]);\n\n  // Make sure initial fields stays updated with selected inventory type\n  useEffect(() => {\n    const updatedInitialFields = getInitialFormFields(inventoryType);\n    if (updatedInitialFields !== initialFields.current) {\n      initialFields.current = updatedInitialFields;\n    }\n  }, [inventoryType]);\n\n  return (\n    <Dialog\n      open={open}\n      fullScreen\n      sx={{\n        '.MuiDialog-paper': {\n          backgroundColor: 'rgba(63, 81, 181, 1)'\n        }\n      }}\n    >\n      <LinkedHeading\n        text={inventoryType ? `Manage ${_.startCase(inventoryType)}` : 'Manage Inventory'}\n        onClick={handleCloseAndReset}\n        buttonText='Back to dashboard'\n        color='white'\n        margin='0 1rem'\n      />\n      <DialogContentWrapper>\n        <TableComponent\n          rows={tableRows}\n          updateRows={setTableRows}\n          selectedRow={itemToEdit}\n          reset={!open}\n          handleItemSelected={handleItemSelected}\n          lastSelectedItem={lastSelectedItem}\n        />\n        <EditComponent\n          fields={fields}\n          updateFields={setFields}\n          handleUpsertItem={handleUpsertItem}\n          handleDeleteItemRequest={handleDeleteItemRequest}\n          handleDeleteItem={handleDeleteItem}\n          handleResetForm={handleResetEditForm}\n          loading={loading}\n          message={message}\n          deleteRequested={deleteRequested}\n          shouldCreateNewItem={shouldCreateNewItem}\n        />\n      </DialogContentWrapper>\n    </Dialog>\n  );\n};\n\nInventoryDetails.propTypes = {\n  tableSection: PropTypes.elementType.isRequired,\n  editSection: PropTypes.elementType.isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  inventoryType: PropTypes.string\n};\n\nexport default InventoryDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, IconButton } from '@mui/material';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\n\nconst PaginationActions = ({ count, page, rowsPerPage, onPageChange }) => {\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        <FirstPageIcon />\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        <KeyboardArrowLeft />\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        <KeyboardArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        <LastPageIcon />\n      </IconButton>\n    </Box>\n  );\n};\n\nPaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nexport default PaginationActions;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableFooter,\n  TablePagination,\n  TableRow\n} from '@mui/material';\nimport uniqueString from 'unique-string';\n\nimport PaginationActions from './PaginationActions.js';\nimport ProgressSpinner from '../ProgressSpinner.js';\n\nconst PaginatedTable = ({ name, rows, columns, selectedRow, size, handleRowClick, rowsNum, selectionLoading }) => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(rowsNum || 10);\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (_, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (e) => {\n    setRowsPerPage(parseInt(e.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <Table aria-label={name} size={size || 'medium'}>\n      <TableBody>\n        <TableRow>\n          {\n            columns.map(c =>\n              <TableCell key={uniqueString()}>{c.label}</TableCell>\n            )\n          }\n        </TableRow>\n        {\n          rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row) => (\n              selectionLoading && selectionLoading.state === true && selectionLoading.id === row.id ? (\n                <TableRow key={uniqueString()} style={{ height: 53 }}>\n                  <TableCell colSpan={6}>\n                    <ProgressSpinner size='1.5rem' />\n                  </TableCell>\n                </TableRow>\n              ) : (\n                <TableRow\n                  key={uniqueString()}\n                  component='tr'\n                  sx={{\n                    '&:last-child td, &:last-child th': { border: 0 },\n                    ':hover': {\n                      cursor: handleRowClick ? 'pointer' : 'cursor'\n                    },\n                    height: '53px'\n                  }}\n                  hover={!!handleRowClick}\n                  onClick={handleRowClick ? () => handleRowClick(row.id) : null}\n                  selected={selectedRow && row.id === selectedRow[`${row.id.split('-')[0]}_id`]}\n                >\n                  {\n                    columns.map(col => (\n                      <TableCell key={uniqueString()} component='td'>\n                        {row[col.name]}\n                      </TableCell>\n                    ))\n                  }\n                </TableRow>\n              )\n            ))\n        }\n        {\n          emptyRows > 0 &&\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n        }\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TablePagination\n            rowsPerPageOptions={[8, 16, 24]}\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            SelectProps={{\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            }}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            ActionsComponent={PaginationActions}\n            sx={{\n              '.MuiTablePagination-toolbar': {\n                justifyContent: 'flex-start'\n              },\n              '.MuiTablePagination-selectLabel': {\n                margin: 0\n              },\n              '.MuiTablePagination-select': {\n                padding: 0\n              },\n              '.MuiTablePagination-displayedRows': {\n                margin: '0 1rem 0 0'\n              }\n            }}\n          />\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n};\n\nPaginatedTable.propTypes = {\n  name: PropTypes.string.isRequired,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  selectionLoading: PropTypes.object,\n  selectedRow: PropTypes.object,\n  size: PropTypes.string,\n  handleRowClick: PropTypes.func\n};\n\nexport default PaginatedTable;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 1rem;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Item = styled.div`\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n`;\n\nexport const SearchWrapper = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n`;\n\nexport const InventorySection = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fff;\n  padding: 1rem;\n  min-height: 90vh;\n  flex: 0.5;\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  border-radius: 10px;\n  position: relative;\n`;\n\nexport const EditInventorySection = styled(InventorySection)`\n  height: 90vh;\n`;\n\nexport const EditFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  margin-top: 1rem;\n`;\n\nexport const SubmitButtons = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-start;\n  gap: 0.25rem;\n  margin-top: 1.5rem;\n`;\n\nexport const Spacer = styled.div`\n  flex: 1;\n`;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLazyQuery } from '@apollo/client';\nimport _ from 'lodash';\nimport { TextField } from '@mui/material';\n\nimport { CATEGORY_SEARCH, SINGLE_CATEGORY } from '../../../../../graphql/queries';\nimport PaginatedTable from '../../../../../Components/Table/PaginatedTable.js';\nimport ActionButton from '../../../../../Components/ActionButton.js';\nimport UserMessage from '../../../../../Components/UserMessage.js';\nimport ProgressSpinner from '../../../../../Components/ProgressSpinner.js';\n\nimport { SearchWrapper, InventorySection } from '../styledComponents.js';\nimport { DataLoading } from '../../../styledComponents.js';\n\nconst CategoryTable = ({ rows, updateRows, selectedRow, reset, handleItemSelected, lastSelectedItem }) => {\n  const [error, setError] = useState('');\n  const [categoryLoading, setCategoryLoading] = useState({\n    id: null,\n    state: false\n  });\n\n  const searchTerm = useRef('');\n\n  const buildRows = (id, name) => ({\n    id,\n    name: _.startCase(name)\n  });\n\n  const [searchFunc] = useLazyQuery(CATEGORY_SEARCH, {\n    onCompleted: ({ categorySearch }) => {\n      if (categorySearch.length) {\n        const mappedRows = categorySearch.map(category => buildRows(\n          category.category_id,\n          category.name\n        ));\n        if (rows !== mappedRows) {\n          updateRows(mappedRows);\n        }\n      }\n    },\n    onError: setError\n  });\n\n  const searchCategories = useCallback(searchFunc, [searchTerm.current, searchFunc]);\n\n  useEffect(() => {\n    if (!rows || !rows.length || reset) {\n      searchCategories();\n    }\n  }, [rows, reset, searchCategories]);\n\n  const [getSelectedCategory] = useLazyQuery(SINGLE_CATEGORY, {\n    onCompleted: ({ category }) => {\n      handleItemSelected(category);\n      setCategoryLoading({\n        id: null,\n        state: false\n      });\n    },\n    onError: (err) => {\n      setError(err);\n      setCategoryLoading({\n        id: null,\n        state: false\n      });\n    }\n  });\n  const handleCategorySelection = (categoryId) => {\n    setCategoryLoading({\n      id: categoryId,\n      state: true\n    });\n    if (lastSelectedItem.current.category_id === categoryId) {\n      handleItemSelected(lastSelectedItem.current);\n      setCategoryLoading({\n        id: null,\n        state: false\n      });\n    } else {\n      getSelectedCategory({ variables: { categoryId } });\n    }\n  };\n\n  const columns = [\n    { name: 'name', label: 'Name' }\n  ];\n\n  return (\n    <InventorySection>\n      <SearchWrapper>\n        <TextField\n          label='Search a category by name'\n          variant='outlined'\n          onChange={(e) => { searchTerm.current = e.target.value; }}\n          fullWidth\n        />\n        <ActionButton\n          text='search'\n          onClick={() => searchCategories({ variables: { name: searchTerm.current } })}\n        />\n      </SearchWrapper>\n      {\n        rows && rows.length ? (\n          <PaginatedTable\n            name='products table'\n            rows={rows}\n            columns={columns}\n            selectedRow={selectedRow}\n            handleRowClick={handleCategorySelection}\n            size='small'\n            rowsNum={8}\n            selectionLoading={categoryLoading}\n          />\n        ) : (\n          <DataLoading>\n            <ProgressSpinner size='3rem' colour='blue' />\n          </DataLoading>\n        )\n      }\n      {error && <UserMessage text={error} type='error' />}\n    </InventorySection>\n  );\n};\n\nCategoryTable.propTypes = {\n  rows: PropTypes.array.isRequired,\n  updateRows: PropTypes.func.isRequired,\n  selectedRow: PropTypes.object,\n  reset: PropTypes.bool.isRequired,\n  handleItemSelected: PropTypes.func.isRequired,\n  lastSelectedItem: PropTypes.object.isRequired\n};\n\nexport default CategoryTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport colours from '../styles/colours.js';\n\nconst Label = styled.label`\n  width: 6rem;\n  height: 2.5rem;\n  color: ${colours.dark};\n  border: 1px solid rgba(0, 0, 0, 0.23);\n  border-radius: 4px;\n  padding: 5px 15px;\n  font-size: 0.875rem;\n  letter-spacing: 0.02857em;\n  line-height: 1.75px;\n  font-weight: 500;\n  display: inline-flex;\n  margin: 0;\n  align-items: center;\n  justify-content: center;\n  \n  :hover {\n    background-color: rgba(0, 0, 0, 0.04);\n    cursor: pointer;\n  };\n`;\n\nconst FileBrowseButton = ({ onChange }) => {\n  return (\n    <div>\n      <Label htmlFor='file-upload'>\n        BROWSE\n      </Label>\n      <input\n        id='file-upload'\n        type='file'\n        style={{ display: 'none' }}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nFileBrowseButton.propTypes = {\n  onChange: PropTypes.func.isRequired\n};\n\nexport default FileBrowseButton;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { uploadFile } from 'react-s3';\nimport styled from 'styled-components';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport uniqueString from 'unique-string';\n\nimport ActionButton from './ActionButton.js';\nimport FileBrowseButton from './FileBrowseButton.js';\nimport UserMessage from './UserMessage.js';\nimport Heading from './Headings/Heading.js';\nimport { RealmAppContext } from '../realmApolloClient.js';\n\n// Styled components\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  gap: 0.25rem;\n`;\nconst UploadWrapper = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  gap: 0.25rem;\n`;\nconst MessageWrapper = styled.div`\n  align-self: flex-end;\n`;\nconst SelectedFile = styled.p`\n  margin: 0;\n  text-align: left;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 1.5rem;\n  height: 1.5rem;\n  width: 18rem;\n  white-space: nowrap;\n  align-self: flex-end;\n`;\n\n// All images\nconst ThumbnailsWrapper = styled.div`\n  display: flex;\n  gap: 0.5rem;\n  margin-top: 0.25rem;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\n// One image\nconst ThumbnailWrapper = styled.div`\n  position: relative;\n`;\nconst ThumbnailImage = styled.img`\n  border-radius: 4px;\n  height: 50px;\n  width: auto;\n`;\nconst ThumbnailDeleteIcon = styled(TiDeleteOutline)`\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  color: grey;\n  :hover {\n    color: black;\n    cursor: pointer;\n  }\n`;\nconst ImagePlaceholder = styled.div`\n  height: 50px;\n`;\n\nconst ImageUploader = ({ onUpload, onDelete, images, placeholderText, reset }) => {\n  const app = useContext(RealmAppContext);\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  const handleFileInput = (e) => {\n    setMessage(null);\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = async (e, file) => {\n    e.preventDefault();\n    setLoading(true);\n\n    try {\n      const imageUpload = await uploadFile(\n        file,\n        await app.currentUser.functions.helper_getS3Config()\n      );\n      onUpload(imageUpload.location);\n      setMessage({\n        type: 'success',\n        text: 'Image upload successful!'\n      });\n      setSelectedFile(null);\n    } catch (err) {\n      setMessage({\n        type: 'error',\n        text: 'Upload failed. Please try again or contact support if the problem persists'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = (e, imageUrl) => {\n    e.preventDefault();\n    setMessage(null);\n    onDelete(imageUrl);\n  };\n\n  useEffect(() => {\n    if (reset) {\n      message && message.type && setMessage(null);\n    }\n  }, [reset, message]);\n\n  return (\n    <Wrapper>\n      <Heading text='Upload an image' size='x-small' />\n      <UploadWrapper>\n        <FileBrowseButton\n          onChange={handleFileInput}\n        />\n        <ActionButton\n          text='Upload'\n          onClick={(e) => handleUpload(e, selectedFile)}\n          disabled={!selectedFile}\n          loading={loading}\n          customStyles={{\n            width: '6rem',\n            height: '2.5rem'\n          }}\n        />\n        {selectedFile && <SelectedFile>{selectedFile.name}</SelectedFile>}\n        {\n          message && (\n            <MessageWrapper>\n              <UserMessage type={message.type} text={message.text} />\n            </MessageWrapper>\n          )\n        }\n      </UploadWrapper>\n      <ThumbnailsWrapper>\n        {\n          images && images.length\n            ? images.map((imageUrl, index) => (\n              <ThumbnailWrapper key={uniqueString()}>\n                <ThumbnailDeleteIcon size='1.5rem' onClick={(e) => handleDelete(e, imageUrl)} />\n                <ThumbnailImage src={imageUrl} />\n              </ThumbnailWrapper>\n            ))\n            : <ImagePlaceholder>{placeholderText || 'No images yet!'}</ImagePlaceholder>\n        }\n      </ThumbnailsWrapper>\n    </Wrapper>\n  );\n};\n\nImageUploader.propTypes = {\n  onUpload: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  images: PropTypes.array,\n  placeholderText: PropTypes.string,\n  reset: PropTypes.bool\n};\n\nexport default ImageUploader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@mui/material';\n\nimport ActionButton from '../../../../../Components/ActionButton.js';\nimport Heading from '../../../../../Components/Headings/Heading.js';\nimport ImageUploader from '../../../../../Components/ImageUploader.js';\nimport UserMessage from '../../../../../Components/UserMessage.js';\nimport { HeadingWrapper } from '../../../../../Components/Headings/LinkedHeading.js';\n\nimport {\n  EditInventorySection,\n  EditFormContainer,\n  SubmitButtons,\n  Spacer\n} from '../styledComponents.js';\n\nconst CategoryEdit = ({\n  fields,\n  updateFields,\n  handleUpsertItem,\n  handleDeleteItemRequest,\n  handleDeleteItem,\n  handleResetForm,\n  loading,\n  message,\n  deleteRequested,\n  shouldCreateNewItem\n}) => {\n  const handleFormChange = (e) => {\n    updateFields(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleImageChange = (imageUrl, action) => {\n    if (!imageUrl || typeof imageUrl !== 'string') return;\n\n    let updatedImage;\n    if (action === 'upload') {\n      updatedImage = imageUrl;\n    } else if (action === 'delete') {\n      updatedImage = '';\n    }\n    updateFields(prev => ({ ...prev, image: updatedImage }));\n  };\n\n  return (\n    <EditInventorySection>\n      <HeadingWrapper subHeading>\n        <div style={{ flex: 1 }}>\n          <Heading\n            text={shouldCreateNewItem ? 'Create new category' : 'Edit category'}\n            noSpace\n            size='small'\n          />\n        </div>\n        {\n          !shouldCreateNewItem &&\n            <ActionButton\n              text='create new'\n              onClick={handleResetForm}\n            />\n        }\n      </HeadingWrapper>\n      <EditFormContainer>\n        <TextField\n          name='name'\n          label='Name'\n          value={fields.name}\n          variant='outlined'\n          onChange={handleFormChange}\n          fullWidth\n          required\n        />\n        <TextField\n          name='description'\n          label='Description'\n          value={fields.description}\n          variant='outlined'\n          onChange={handleFormChange}\n          fullWidth\n          multiline\n          rows={5}\n          required\n        />\n        <ImageUploader\n          onUpload={(imageUrl) => handleImageChange(imageUrl, 'upload')}\n          onDelete={(imageUrl) => handleImageChange(imageUrl, 'delete')}\n          images={fields.image ? [fields.image] : null}\n          placeholderText='No images yet! You must upload an image for each category'\n          reset={message && message.type === 'success'}\n        />\n      </EditFormContainer>\n      <Spacer />\n      <SubmitButtons>\n        <ActionButton\n          text='save'\n          onClick={handleUpsertItem}\n          loading={loading.state === true && loading.type === 'upsert'}\n          customStyles={{\n            backgroundColor: 'rgba(63, 81, 181, 1)',\n            borderColor: '#fff',\n            color: '#fff',\n            width: '6rem',\n            height: '2.5rem'\n          }}\n        />\n        {\n          !shouldCreateNewItem && (\n            <ActionButton\n              text={deleteRequested ? 'confirm deletion' : 'delete category'}\n              onClick={\n                deleteRequested\n                  ? handleDeleteItem\n                  : handleDeleteItemRequest\n              }\n              loading={loading.state === true && loading.type === 'delete'}\n              customStyles={{\n                backgroundColor: '#fff',\n                borderColor: 'red',\n                color: 'red',\n                height: '2.5rem'\n              }}\n            />\n          )\n        }\n        {message && message.type && <UserMessage text={message.text} type={message.type} />}\n      </SubmitButtons>\n    </EditInventorySection>\n  );\n};\n\nCategoryEdit.propTypes = {\n  fields: PropTypes.object.isRequired,\n  updateFields: PropTypes.func.isRequired,\n  handleUpsertItem: PropTypes.func.isRequired,\n  handleDeleteItemRequest: PropTypes.func.isRequired,\n  handleDeleteItem: PropTypes.func.isRequired,\n  handleResetForm: PropTypes.func.isRequired,\n  loading: PropTypes.object.isRequired,\n  message: PropTypes.object,\n  deleteRequested: PropTypes.bool.isRequired,\n  shouldCreateNewItem: PropTypes.bool.isRequired\n};\n\nexport default CategoryEdit;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLazyQuery } from '@apollo/client';\nimport _ from 'lodash';\nimport { TextField } from '@mui/material';\n\nimport { SUBCATEGORY_SEARCH, SINGLE_SUBCATEGORY } from '../../../../../graphql/queries';\nimport PaginatedTable from '../../../../../Components/Table/PaginatedTable.js';\nimport ActionButton from '../../../../../Components/ActionButton.js';\nimport UserMessage from '../../../../../Components/UserMessage.js';\nimport ProgressSpinner from '../../../../../Components/ProgressSpinner.js';\n\nimport { SearchWrapper, InventorySection } from '../styledComponents.js';\nimport { DataLoading } from '../../../styledComponents.js';\n\nconst SubCategoryTable = ({ rows, updateRows, selectedRow, reset, handleItemSelected, lastSelectedItem }) => {\n  const [error, setError] = useState('');\n  const [subCategoryLoading, setSubCategoryLoading] = useState({\n    id: null,\n    state: false\n  });\n\n  const searchTerm = useRef('');\n\n  const buildRows = (id, name, category) => ({\n    id,\n    name: _.startCase(name),\n    category: _.startCase(category)\n  });\n\n  const [searchFunc] = useLazyQuery(SUBCATEGORY_SEARCH, {\n    onCompleted: ({ subCategorySearch }) => {\n      if (subCategorySearch.length) {\n        const mappedRows = subCategorySearch.map(subCategory => buildRows(\n          subCategory.subCategory_id,\n          subCategory.name,\n          subCategory.category\n        ));\n        if (rows !== mappedRows) {\n          updateRows(mappedRows);\n        }\n      }\n    },\n    onError: setError\n  });\n\n  const searchSubCategories = useCallback(searchFunc, [searchTerm.current, searchFunc]);\n\n  useEffect(() => {\n    if (!rows || !rows.length || reset) {\n      searchSubCategories();\n    }\n  }, [rows, reset, searchSubCategories]);\n\n  const [getSelectedSubCategory] = useLazyQuery(SINGLE_SUBCATEGORY, {\n    onCompleted: ({ subCategory }) => {\n      handleItemSelected(subCategory);\n      setSubCategoryLoading({\n        id: null,\n        state: false\n      });\n    },\n    onError: (err) => {\n      setError(err);\n      setSubCategoryLoading({\n        id: null,\n        state: false\n      });\n    }\n  });\n  const handleSubCategorySelection = (subCategoryId) => {\n    setSubCategoryLoading({\n      id: subCategoryId,\n      state: true\n    });\n    if (lastSelectedItem.current.subCategory_id === subCategoryId) {\n      handleItemSelected(lastSelectedItem.current);\n      setSubCategoryLoading({\n        id: null,\n        state: false\n      });\n    } else {\n      getSelectedSubCategory({ variables: { subCategoryId } });\n    }\n  };\n\n  const columns = [\n    { name: 'name', label: 'Name' },\n    { name: 'category', label: 'Category' }\n  ];\n\n  return (\n    <InventorySection>\n      <SearchWrapper>\n        <TextField\n          label='Search a sub-category by name'\n          variant='outlined'\n          onChange={(e) => { searchTerm.current = e.target.value; }}\n          fullWidth\n        />\n        <ActionButton\n          text='search'\n          onClick={() => searchSubCategories({ variables: { name: searchTerm.current } })}\n        />\n      </SearchWrapper>\n      {\n        rows && rows.length ? (\n          <PaginatedTable\n            name='products table'\n            rows={rows}\n            columns={columns}\n            selectedRow={selectedRow}\n            handleRowClick={handleSubCategorySelection}\n            size='small'\n            rowsNum={8}\n            selectionLoading={subCategoryLoading}\n          />\n        ) : (\n          <DataLoading>\n            <ProgressSpinner size='3rem' colour='blue' />\n          </DataLoading>\n        )\n      }\n      {error && <UserMessage text={error} type='error' />}\n    </InventorySection>\n  );\n};\n\nSubCategoryTable.propTypes = {\n  rows: PropTypes.array.isRequired,\n  updateRows: PropTypes.func.isRequired,\n  selectedRow: PropTypes.object,\n  reset: PropTypes.bool.isRequired,\n  handleItemSelected: PropTypes.func.isRequired,\n  lastSelectedItem: PropTypes.object.isRequired\n};\n\nexport default SubCategoryTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useBreakpoints from '../../hooks/useBreakpoints.js';\n\nconst RowGroup = ({ children }) => {\n  const { isXs } = useBreakpoints();\n  /*\n    Can't use styled components as MUI TextField loses focus on each letter typed\n    when wrapped in a styled component...\n  */\n  const asRow = {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    gap: '0.25rem'\n  };\n\n  const asColumn = {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%'\n  };\n\n  return (\n    isXs\n      ? <div style={asColumn}>{children}</div>\n      : <div style={asRow}>{children}</div>\n  );\n};\n\nRowGroup.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default RowGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport { TextField } from '@mui/material';\nimport _ from 'lodash';\n\nimport ActionButton from '../../../../../Components/ActionButton.js';\nimport ProgressSpinner from '../../../../../Components/ProgressSpinner.js';\nimport Heading from '../../../../../Components/Headings/Heading.js';\nimport ImageUploader from '../../../../../Components/ImageUploader.js';\nimport RowGroup from '../../../../../Components/Forms/RowGroup.js';\nimport SelectInput from '../../../../../Components/Forms/SelectInput.js';\nimport UserMessage from '../../../../../Components/UserMessage.js';\nimport { ALL_CATEGORIES } from '../../../../../graphql/queries.js';\nimport { HeadingWrapper } from '../../../../../Components/Headings/LinkedHeading.js';\n\nimport {\n  EditInventorySection,\n  EditFormContainer,\n  SubmitButtons,\n  Spacer\n} from '../styledComponents.js';\nimport { DataLoading } from '../../../styledComponents.js';\n\nconst SubCategoryEdit = ({\n  fields,\n  updateFields,\n  handleUpsertItem,\n  handleDeleteItemRequest,\n  handleDeleteItem,\n  handleResetForm,\n  loading,\n  message,\n  deleteRequested,\n  shouldCreateNewItem\n}) => {\n  const { data } = useQuery(ALL_CATEGORIES);\n\n  const handleFormChange = (e) => {\n    updateFields(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleImageChange = (imageUrl, action) => {\n    if (!imageUrl || typeof imageUrl !== 'string') return;\n\n    let updatedImage;\n    if (action === 'upload') {\n      updatedImage = imageUrl;\n    } else if (action === 'delete') {\n      updatedImage = '';\n    }\n    updateFields(prev => ({ ...prev, image: updatedImage }));\n  };\n\n  return (\n    <EditInventorySection>\n      <HeadingWrapper subHeading>\n        <div style={{ flex: 1 }}>\n          <Heading\n            text={shouldCreateNewItem ? 'Create new sub category' : 'Edit sub category'}\n            noSpace\n            size='small'\n          />\n        </div>\n        {\n          !shouldCreateNewItem &&\n            <ActionButton\n              text='create new'\n              onClick={handleResetForm}\n            />\n        }\n      </HeadingWrapper>\n      {\n        data && data.categories ? (\n          <>\n            <EditFormContainer>\n              <TextField\n                name='name'\n                label='Name'\n                value={fields.name}\n                variant='outlined'\n                onChange={handleFormChange}\n                fullWidth\n                required\n              />\n              <TextField\n                name='description'\n                label='Description'\n                value={fields.description}\n                variant='outlined'\n                onChange={handleFormChange}\n                fullWidth\n                multiline\n                rows={5}\n                required\n              />\n              <RowGroup>\n                <SelectInput\n                  name='category'\n                  label='Category*'\n                  value={fields.category}\n                  variant='outlined'\n                  handleChange={handleFormChange}\n                  required\n                  options={\n                    data.categories.map(category => ({\n                      name: _.startCase(category.name),\n                      value: category.name\n                    }))\n                  }\n                />\n              </RowGroup>\n              <ImageUploader\n                onUpload={(imageUrl) => handleImageChange(imageUrl, 'upload')}\n                onDelete={(imageUrl) => handleImageChange(imageUrl, 'delete')}\n                images={fields.image ? [fields.image] : null}\n                placeholderText='No images yet! You must upload an image for each sub-category'\n                reset={message && message.type === 'success'}\n              />\n            </EditFormContainer>\n            <Spacer />\n            <SubmitButtons>\n              <ActionButton\n                text='save'\n                onClick={handleUpsertItem}\n                loading={loading.state === true && loading.type === 'upsert'}\n                customStyles={{\n                  backgroundColor: 'rgba(63, 81, 181, 1)',\n                  borderColor: '#fff',\n                  color: '#fff',\n                  width: '6rem',\n                  height: '2.5rem'\n                }}\n              />\n              {\n                !shouldCreateNewItem && (\n                  <ActionButton\n                    text={deleteRequested ? 'confirm deletion' : 'delete subcategory'}\n                    onClick={\n                      deleteRequested\n                        ? handleDeleteItem\n                        : handleDeleteItemRequest\n                    }\n                    loading={loading.state === true && loading.type === 'delete'}\n                    customStyles={{\n                      backgroundColor: '#fff',\n                      borderColor: 'red',\n                      color: 'red',\n                      height: '2.5rem'\n                    }}\n                  />\n                )\n              }\n              {message && message.type && <UserMessage text={message.text} type={message.type} />}\n            </SubmitButtons>\n          </>\n        ) : (\n          <DataLoading>\n            <ProgressSpinner size='3rem' colour='blue' />\n          </DataLoading>\n        )\n      }\n    </EditInventorySection>\n  );\n};\n\nSubCategoryEdit.propTypes = {\n  fields: PropTypes.object.isRequired,\n  updateFields: PropTypes.func.isRequired,\n  handleUpsertItem: PropTypes.func.isRequired,\n  handleDeleteItemRequest: PropTypes.func.isRequired,\n  handleDeleteItem: PropTypes.func.isRequired,\n  handleResetForm: PropTypes.func.isRequired,\n  loading: PropTypes.object.isRequired,\n  message: PropTypes.object,\n  deleteRequested: PropTypes.bool.isRequired,\n  shouldCreateNewItem: PropTypes.bool.isRequired\n};\n\nexport default SubCategoryEdit;\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLazyQuery } from '@apollo/client';\nimport _ from 'lodash';\nimport { TextField } from '@mui/material';\n\nimport { PRODUCTS_SEARCH, SINGLE_PRODUCT } from '../../../../../graphql/queries';\nimport PaginatedTable from '../../../../../Components/Table/PaginatedTable.js';\nimport ActionButton from '../../../../../Components/ActionButton.js';\nimport UserMessage from '../../../../../Components/UserMessage.js';\nimport ProgressSpinner from '../../../../../Components/ProgressSpinner.js';\n\nimport { SearchWrapper, InventorySection } from '../styledComponents.js';\nimport { DataLoading } from '../../../styledComponents.js';\n\nconst ProductTable = ({ rows, updateRows, selectedRow, reset, handleItemSelected, lastSelectedItem }) => {\n  const [error, setError] = useState('');\n  const [productLoading, setProductLoading] = useState({\n    id: null,\n    state: false\n  });\n\n  const searchTerm = useRef('');\n\n  const buildRows = (id, name, category, subcategory, numInStock, price) => ({\n    id,\n    name,\n    category: _.startCase(category),\n    subcategory: _.startCase(subcategory),\n    numInStock,\n    price\n  });\n\n  const [searchFunc] = useLazyQuery(PRODUCTS_SEARCH, {\n    onCompleted: (data) => {\n      if (data && data.productSearch && data.productSearch.length) {\n        const mappedRows = data.productSearch.map(product => buildRows(\n          product.product_id,\n          product.name,\n          product.category,\n          product.subCategory,\n          product.numInStock,\n          product.priceGBP\n        ));\n        if (rows !== mappedRows) {\n          updateRows(mappedRows);\n        }\n      }\n    },\n    onError: setError\n  });\n\n  const searchProducts = useCallback(searchFunc, [searchTerm.current, searchFunc]);\n\n  useEffect(() => {\n    if (!rows || !rows.length || reset) {\n      searchProducts();\n    }\n  }, [rows, reset, searchProducts]);\n\n  const [getSelectedProduct] = useLazyQuery(SINGLE_PRODUCT, {\n    onCompleted: ({ product }) => {\n      handleItemSelected(product);\n      setProductLoading({\n        id: null,\n        state: false\n      });\n    },\n    onError: (err) => {\n      setError(err);\n      setProductLoading({\n        id: null,\n        state: false\n      });\n    }\n  });\n  const handleProductSelection = (productId) => {\n    setProductLoading({\n      id: productId,\n      state: true\n    });\n\n    if (lastSelectedItem.current.product_id === productId) {\n      handleItemSelected(lastSelectedItem.current);\n      setProductLoading({\n        id: null,\n        state: false\n      });\n    } else {\n      getSelectedProduct({ variables: { productId } });\n    }\n  };\n\n  const columns = [\n    { name: 'name', label: 'Name' },\n    { name: 'category', label: 'Category' },\n    { name: 'subcategory', label: 'Sub-Category' },\n    { name: 'numInStock', label: 'Stock Quantity' },\n    { name: 'price', label: 'Price (GBP)' }\n  ];\n\n  return (\n    <InventorySection>\n      <SearchWrapper>\n        <TextField\n          label='Search a product by name'\n          variant='outlined'\n          onChange={(e) => { searchTerm.current = e.target.value; }}\n          fullWidth\n        />\n        <ActionButton\n          text='search'\n          onClick={() => searchProducts({ variables: { name: searchTerm.current } })}\n        />\n      </SearchWrapper>\n      {\n        rows && rows.length ? (\n          <PaginatedTable\n            name='products table'\n            rows={rows}\n            columns={columns}\n            selectedRow={selectedRow}\n            handleRowClick={handleProductSelection}\n            size='small'\n            rowsNum={8}\n            selectionLoading={productLoading}\n          />\n        ) : (\n          <DataLoading>\n            <ProgressSpinner size='3rem' colour='blue' />\n          </DataLoading>\n        )\n      }\n      {error && <UserMessage text={error} type='error' />}\n    </InventorySection>\n  );\n};\n\nProductTable.propTypes = {\n  rows: PropTypes.array.isRequired,\n  updateRows: PropTypes.func.isRequired,\n  selectedRow: PropTypes.object,\n  reset: PropTypes.bool.isRequired,\n  handleItemSelected: PropTypes.func.isRequired,\n  lastSelectedItem: PropTypes.object.isRequired\n};\n\nexport default ProductTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport { TextField, InputAdornment } from '@mui/material';\nimport _ from 'lodash';\n\nimport ActionButton from '../../../../../Components/ActionButton.js';\nimport ProgressSpinner from '../../../../../Components/ProgressSpinner.js';\nimport Heading from '../../../../../Components/Headings/Heading.js';\nimport ImageUploader from '../../../../../Components/ImageUploader.js';\nimport RowGroup from '../../../../../Components/Forms/RowGroup.js';\nimport SelectInput from '../../../../../Components/Forms/SelectInput.js';\nimport UserMessage from '../../../../../Components/UserMessage.js';\nimport { ALL_CATEGORIES_AND_SUBCATEGORIES } from '../../../../../graphql/queries.js';\nimport { HeadingWrapper } from '../../../../../Components/Headings/LinkedHeading.js';\n\nimport {\n  EditInventorySection,\n  EditFormContainer,\n  SubmitButtons,\n  Spacer\n} from '../styledComponents.js';\nimport { DataLoading } from '../../../styledComponents.js';\n\nconst ProductEdit = ({\n  fields,\n  updateFields,\n  handleUpsertItem,\n  handleDeleteItemRequest,\n  handleDeleteItem,\n  handleResetForm,\n  loading,\n  message,\n  deleteRequested,\n  shouldCreateNewItem\n}) => {\n  const { data } = useQuery(ALL_CATEGORIES_AND_SUBCATEGORIES);\n\n  const hasSelectedCategory = fields.category && fields.category !== '';\n\n  const handleFormChange = (e) => {\n    updateFields(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleImageChange = (imageUrl, action) => {\n    if (!imageUrl || typeof imageUrl !== 'string') return;\n\n    let updatedImages = [];\n    if (action === 'upload') {\n      updatedImages = [...fields.images, imageUrl];\n    } else if (action === 'delete') {\n      updatedImages = fields.images.filter(image => image !== imageUrl);\n    } else {\n      throw new Error(`Unknown action of '${action}' supplied to handleImageChange`);\n    }\n    updateFields(prev => ({ ...prev, images: updatedImages }));\n  };\n\n  const getSubCategoryDetails = (selectedCategory, allCategories) => {\n    if (!selectedCategory || selectedCategory === '' || !allCategories || !allCategories.length) {\n      return undefined;\n    }\n    const selected = allCategories.find(category => category.name === selectedCategory);\n\n    return selected.subCategories.map(subCat => ({\n      id: subCat.subCategory_id,\n      name: _.startCase(subCat.name),\n      value: subCat.name\n    }));\n  };\n\n  return (\n    <EditInventorySection>\n      <HeadingWrapper subHeading>\n        <div style={{ flex: 1 }}>\n          <Heading\n            text={shouldCreateNewItem ? 'Create new product' : 'Edit product'}\n            noSpace\n            size='small'\n          />\n        </div>\n        {\n          !shouldCreateNewItem &&\n            <ActionButton\n              text='create new'\n              onClick={handleResetForm}\n            />\n        }\n      </HeadingWrapper>\n      {\n        data && data.categories ? (\n          <>\n            <EditFormContainer>\n              <TextField\n                name='name'\n                label='Name'\n                value={fields.name}\n                variant='outlined'\n                onChange={handleFormChange}\n                fullWidth\n                required\n              />\n              <TextField\n                name='description'\n                label='Description'\n                value={fields.description}\n                variant='outlined'\n                onChange={handleFormChange}\n                fullWidth\n                multiline\n                rows={5}\n                required\n              />\n              <RowGroup>\n                <SelectInput\n                  name='category'\n                  label='Category*'\n                  value={fields.category}\n                  variant='outlined'\n                  handleChange={handleFormChange}\n                  required\n                  options={\n                    data.categories.map(category => ({\n                      name: _.startCase(category.name),\n                      value: category.name\n                    }))\n                  }\n                />\n                <SelectInput\n                  name='subCategory'\n                  label='Sub Category*'\n                  value={fields.subCategory}\n                  variant='outlined'\n                  handleChange={handleFormChange}\n                  required\n                  disabled={!hasSelectedCategory}\n                  options={\n                    hasSelectedCategory\n                      ? getSubCategoryDetails(fields.category, data.categories)\n                      : []\n                  }\n                />\n                <TextField\n                  name='weightInGrams'\n                  label='Est. Weight (g)'\n                  value={fields.weightInGrams}\n                  variant='outlined'\n                  onChange={handleFormChange}\n                  required\n                  fullWidth\n                />\n              </RowGroup>\n              <RowGroup>\n                <TextField\n                  name='numInStock'\n                  label='Quantity'\n                  value={fields.numInStock}\n                  variant='outlined'\n                  onChange={handleFormChange}\n                  required\n                  fullWidth\n                />\n                <TextField\n                  name='priceGBP'\n                  label='Price GBP'\n                  value={fields.priceGBP}\n                  variant='outlined'\n                  onChange={handleFormChange}\n                  required\n                  fullWidth\n                  InputProps={{\n                    startAdornment: <InputAdornment position='start'>£</InputAdornment>\n                  }}\n                />\n                <TextField\n                  name='priceUSD'\n                  label='Price USD'\n                  value={fields.priceUSD}\n                  variant='outlined'\n                  onChange={handleFormChange}\n                  required\n                  fullWidth\n                  InputProps={{\n                    startAdornment: <InputAdornment position='start'>$</InputAdornment>\n                  }}\n                />\n                <TextField\n                  name='priceEUR'\n                  label='Price EUR'\n                  value={fields.priceEUR}\n                  variant='outlined'\n                  onChange={handleFormChange}\n                  required\n                  fullWidth\n                  InputProps={{\n                    startAdornment: <InputAdornment position='start'>€</InputAdornment>\n                  }}\n                />\n              </RowGroup>\n              <ImageUploader\n                onUpload={(imageUrl) => handleImageChange(imageUrl, 'upload')}\n                onDelete={(imageUrl) => handleImageChange(imageUrl, 'delete')}\n                images={fields.images}\n                placeholderText='No images yet! You must upload at least one image per product'\n                reset={message && message.type === 'success'}\n              />\n            </EditFormContainer>\n            <Spacer />\n            <SubmitButtons>\n              <ActionButton\n                text='save'\n                onClick={handleUpsertItem}\n                loading={loading.state === true && loading.type === 'upsert'}\n                customStyles={{\n                  backgroundColor: 'rgba(63, 81, 181, 1)',\n                  borderColor: '#fff',\n                  color: '#fff',\n                  width: '6rem',\n                  height: '2.5rem'\n                }}\n              />\n              {\n                !shouldCreateNewItem && (\n                  <ActionButton\n                    text={deleteRequested ? 'confirm deletion' : 'delete product'}\n                    onClick={\n                      deleteRequested\n                        ? handleDeleteItem\n                        : handleDeleteItemRequest\n                    }\n                    loading={loading.state === true && loading.type === 'delete'}\n                    customStyles={{\n                      backgroundColor: '#fff',\n                      borderColor: 'red',\n                      color: 'red',\n                      height: '2.5rem'\n                    }}\n                  />\n                )\n              }\n              {message && message.type && <UserMessage text={message.text} type={message.type} />}\n            </SubmitButtons>\n          </>\n        ) : (\n          <DataLoading>\n            <ProgressSpinner size='3rem' colour='blue' />\n          </DataLoading>\n        )\n      }\n    </EditInventorySection>\n  );\n};\n\nProductEdit.propTypes = {\n  fields: PropTypes.object.isRequired,\n  updateFields: PropTypes.func.isRequired,\n  handleUpsertItem: PropTypes.func.isRequired,\n  handleDeleteItemRequest: PropTypes.func.isRequired,\n  handleDeleteItem: PropTypes.func.isRequired,\n  handleResetForm: PropTypes.func.isRequired,\n  loading: PropTypes.object.isRequired,\n  message: PropTypes.object,\n  deleteRequested: PropTypes.bool.isRequired,\n  shouldCreateNewItem: PropTypes.bool.isRequired\n};\n\nexport default ProductEdit;\n","import React, { useState } from 'react';\n\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport BigButton from './BigButton.js';\nimport InventoryDetails from './InventoryDetails.js';\nimport CategoryTable from './Categories/CategoryTable.js';\nimport CategoryEdit from './Categories/CategoryEdit.js';\nimport SubCategoryTable from './SubCategories/SubCategoryTable.js';\nimport SubCategoryEdit from './SubCategories/SubCategoryEdit.js';\nimport ProductTable from './Products/ProductTable.js';\nimport ProductEdit from './Products/ProductEdit.js';\n\n// Styled components\nimport { InventoryWrapper, InventoryButtonWrapper } from '../../styledComponents.js';\n\nconst Inventory = () => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [selectedType, setSelectedType] = useState('product');\n\n  const handleSelection = (type) => {\n    setSelectedType(type);\n    setDialogOpen(true);\n  };\n\n  const components = {\n    category: { edit: CategoryEdit, table: CategoryTable },\n    subCategory: { edit: SubCategoryEdit, table: SubCategoryTable },\n    product: { edit: ProductEdit, table: ProductTable }\n  };\n\n  return (\n    <InventoryWrapper>\n      <Heading text='Inventory' size='small' color='white' />\n      <InventoryDetails\n        open={dialogOpen}\n        handleClose={() => setDialogOpen(false)}\n        inventoryType={selectedType}\n        tableSection={selectedType ? components[selectedType].table : ProductTable}\n        editSection={selectedType ? components[selectedType].edit : ProductEdit}\n      />\n      <InventoryButtonWrapper>\n        <BigButton\n          type='products'\n          handleSelection={() => handleSelection('product')}\n        />\n        <BigButton\n          type='subcategories'\n          handleSelection={() => handleSelection('subCategory')}\n        />\n        <BigButton\n          type='categories'\n          handleSelection={() => handleSelection('category')}\n        />\n      </InventoryButtonWrapper>\n    </InventoryWrapper>\n  );\n};\n\nexport default Inventory;\n","import React from 'react';\n\nimport Navbar from './Components/Navbar/Navbar.js';\nimport Orders from './Components/Orders/Orders.js';\nimport Inventory from './Components/Inventory/Inventory.js';\n\n// Styled components\nimport { AdminWrapper } from './styledComponents.js';\n\nconst Admin = () => {\n  return (\n    <>\n      <Navbar />\n      <AdminWrapper>\n        <Orders />\n        <Inventory />\n      </AdminWrapper>\n    </>\n  );\n};\n\nexport default Admin;\n","// External imports\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport ResponsiveTileWrapper from './ResponsiveTileWrapper.js';\n\n// Colours\nimport colours from '../../styles/colours.js';\nconst { light, lightFade, dark } = colours;\n\n// Custom styled components\nexport const Wrapper = styled(ResponsiveTileWrapper)`\n  display: flex;\n  justify-content: center;\n  position: relative;\n`;\n\nconst Image = styled.img`\n  border-radius: 6px;\n  max-width: 100%;\n  height: auto;\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2); \n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n`;\n\nexport const CategoryCaption = styled.h1`\n  background-color: ${lightFade};\n  border-radius: 30px;\n  color: ${dark};\n  font-size: 2rem;\n  padding: 0.5rem 1.5rem;\n  position: absolute;\n  top: 43%;\n  left: 12.5%;\n  text-align: center;\n  transition: background-color 0.2s ease-in-out;\n  width: 75%;\n  :active,\n  :focus,\n  :hover {\n    background-color: ${light};\n  }\n`;\n\n// Link to a specific category\nconst CategoryTile = ({ title, image, linkTo }) => {\n  return (\n    <Link to={linkTo}>\n      <Wrapper>\n        <Image src={image} alt={title} />\n        <CategoryCaption>{title}</CategoryCaption>\n      </Wrapper>\n    </Link>\n  );\n};\n\nCategoryTile.propTypes = {\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  linkTo: PropTypes.string.isRequired\n};\n\nexport default CategoryTile;\n","// External imports\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n// Custom styled components\nconst FlexContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 2rem;\n`;\n\n// Display multiple tiles\nconst TileList = ({ children }) => {\n  return (\n    <FlexContainer>\n      {children}\n    </FlexContainer>\n  );\n};\n\nTileList.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array\n  ]).isRequired\n};\n\nexport default TileList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ProgressSpinner from './ProgressSpinner.js';\n\nexport const Skeleton = styled.div`\n  height: 50vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 3rem;\n`;\n\nconst LoadingView = ({ message }) => {\n  return (\n    <Skeleton>\n      {message && message}\n      <ProgressSpinner size='4rem' />\n    </Skeleton>\n  );\n};\n\nLoadingView.propTypes = {\n  message: PropTypes.string\n};\n\nexport default LoadingView;\n","import styled from 'styled-components';\n\nexport const ShopBrowseWrapper = styled.div`\n  @media (min-width: 414px) {\n    margin: 0 1rem;\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 1.15rem;\n`;\n\nexport const HeadingWrapper = styled.div`\n  margin-bottom: 1rem;\n`;\n","import React from 'react';\nimport _ from 'lodash';\nimport { useQuery } from '@apollo/client';\n\nimport Heading from '../../../Components/Headings/Heading.js';\nimport CategoryTile from '../../../Components/Tiles/CategoryTile.js';\nimport TileList from '../../../Components/Tiles/TileList.js';\nimport { ALL_CATEGORIES } from '../../../graphql/queries.js';\nimport LoadingView from '../../../Components/LoadingView.js';\n\nimport { ShopBrowseWrapper, HeadingWrapper } from './styledComponents.js';\n\n// Return a selection of all categories.\nconst Categories = () => {\n  const { data } = useQuery(ALL_CATEGORIES);\n  return (\n    <ShopBrowseWrapper>\n      <HeadingWrapper>\n        <Heading text='Browse Categories' size='large' />\n      </HeadingWrapper>\n      {\n        data && data.categories ? (\n          <TileList>\n            {data.categories.map((category, index) => {\n              const { name } = category;\n              return (\n                <CategoryTile\n                  key={index}\n                  title={_.startCase(name)}\n                  image={`/images/${name}-landing-page.jpg`}\n                  linkTo={`/shop/browse/${name}`}\n                  dataReady\n                />\n              );\n            })}\n          </TileList>\n        ) : <LoadingView />\n      }\n    </ShopBrowseWrapper>\n  );\n};\n\nexport default Categories;\n","// External imports\nimport React from 'react';\nimport { useRouteMatch, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport _ from 'lodash';\n\n// Components\nimport LinkedHeading from '../../../Components/Headings/LinkedHeading.js';\nimport SubCategoryTile from '../../../Components/Tiles/CategoryTile.js';\nimport TileList from '../../../Components/Tiles/TileList.js';\nimport LoadingView from '../../../Components/LoadingView.js';\nimport { SINGLE_CATEGORY_BY_NAME } from '../../../graphql/queries.js';\n\nimport { ShopBrowseWrapper, HeadingWrapper, Description } from './styledComponents.js';\n\n// Return a selection of sub-categories within the named category.\nconst SubCategories = () => {\n  const { url } = useRouteMatch();\n  const { category } = useParams();\n\n  const { data } = useQuery(SINGLE_CATEGORY_BY_NAME, {\n    variables: { name: category }\n  });\n\n  return (\n    <ShopBrowseWrapper>\n      <HeadingWrapper>\n        <LinkedHeading\n          text={_.startCase(category)}\n          headingSize='large'\n          linkTo='/shop'\n          buttonText='Back to categories'\n        />\n      </HeadingWrapper>\n      {\n        data && data.category ? (\n          <>\n            <Description>{data.category.description}</Description>\n            <TileList>\n              {\n                data.category.subCategories.map((subCategory, index) => {\n                  const { name, image } = subCategory;\n                  return (\n                    <SubCategoryTile\n                      key={index}\n                      title={_.startCase(name)}\n                      image={image}\n                      linkTo={`${url}/${name}`}\n                    />\n                  );\n                })\n              }\n            </TileList>\n          </>\n        ) : <LoadingView />\n      }\n    </ShopBrowseWrapper>\n  );\n};\n\nexport default SubCategories;\n","// External imports\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n// Custom styled components\nconst Img = styled.img`\n  height: auto;\n  max-width: 100%;\n`;\n\n//\nconst Image = ({ src, alt }) => {\n  return <Img src={src} alt={alt} />;\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired\n};\n\nexport default Image;\n","import React, { useState, useEffect, useCallback, createContext } from 'react';\n\nexport const CurrencyContext = createContext();\n\nexport const CurrencyContextProvider = ({ children }) => {\n  const [currency, setCurrency] = useState('GBP');\n\n  const url = 'https://ipapi.co/json/';\n\n  const getLocale = useCallback(async () => {\n    const response = await window.fetch(url);\n    return await response.json();\n  }, [url]);\n\n  const getLocaleCurrency = useCallback(async () => {\n    const locale = await getLocale();\n\n    switch (locale.continent_code) {\n      case 'EU':\n        setCurrency(locale.country_code === 'GB' ? 'GBP' : 'EUR');\n        break;\n      case 'NA':\n        setCurrency('USD');\n        break;\n      default:\n    }\n  }, [getLocale]);\n\n  useEffect(() => getLocaleCurrency(), [getLocaleCurrency]);\n\n  return (\n    <CurrencyContext.Provider\n      value={{\n        currency,\n        setCurrency\n      }}\n    >\n      {children}\n    </CurrencyContext.Provider>\n  );\n};\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useCallback,\n  createContext,\n  useContext\n} from 'react';\n\nimport { RealmAppContext } from '../realmApolloClient.js';\nimport { CurrencyContext } from './CurrencyContext.js';\nimport { getCartSubTotal } from '../helpers/cart.js';\n\nexport const OrderContext = createContext();\n\nexport const OrderContextProvider = ({ children }) => {\n  const { currentUser } = useContext(RealmAppContext);\n  const { currency } = useContext(CurrencyContext);\n\n  const [activeOrder, setActiveOrder] = useState({});\n  const [subtotal, setSubtotal] = useState(0);\n  const [deliveryCountry, setDeliveryCountry] = useState('');\n  const [deliveryPrice, setDeliveryPrice] = useState(0);\n\n  const deliveryZone = useRef();\n\n  const getActiveOrder = useCallback(async () => {\n    if (!activeOrder || !Object.keys(activeOrder).length) {\n      if (currentUser && currentUser.dbUser) {\n        const userActiveOrder = await currentUser.functions.db_getActiveOrder(currentUser.dbUser.user_id);\n        if (userActiveOrder !== activeOrder) {\n          setActiveOrder(userActiveOrder);\n        }\n      }\n    }\n  }, [currentUser, activeOrder]);\n\n  // Set the active order to the pending order if there is one or just refetch the db user\n  // to make sure it stays consistent with active order changes\n  useEffect(() => getActiveOrder(), [getActiveOrder]);\n\n  // Set the subtotal whenever the order is updated\n  useEffect(() => {\n    if (activeOrder && activeOrder.orderItems && activeOrder.orderItems.length) {\n      setSubtotal(getCartSubTotal(activeOrder, currency));\n    } else {\n      setSubtotal(0);\n    }\n  }, [activeOrder, currency]);\n\n  // If a delivery address is added to order, get the delivery price\n  const getDeliveryPrice = useCallback(async () => {\n    const response = await window.fetch('/PostalCountries/countries.json');\n    const countries = await response.json();\n\n    const requestedCountry = await countries.find(item => item.country === deliveryCountry);\n\n    if (requestedCountry) {\n      const price = await currentUser.functions.helper_getDeliveryPrice(\n        activeOrder.orderItems,\n        requestedCountry.deliveryZone,\n        currency\n      );\n      setDeliveryPrice(price);\n      deliveryZone.current = requestedCountry.deliveryZone;\n    }\n  }, [deliveryCountry, deliveryZone, activeOrder, currentUser, currency]);\n\n  useEffect(() => getDeliveryPrice(), [getDeliveryPrice, deliveryCountry]);\n\n  return (\n    <OrderContext.Provider\n      value={{\n        activeOrder,\n        setActiveOrder,\n        subtotal,\n        deliveryCountry,\n        setDeliveryCountry,\n        deliveryPrice,\n        deliveryZone\n      }}\n    >\n      {children}\n    </OrderContext.Provider>\n  );\n};\n","export const getCartSubTotal = (order, currency) => {\n  let subTotal;\n  const productTotals = order.orderItems.map(item => item.quantity * item.product[`price${currency}`]);\n  const reducer = (prevValue, currentValue) => prevValue + currentValue;\n\n  if (productTotals) {\n    subTotal = productTotals.reduce(reducer);\n  }\n\n  return subTotal;\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { IoCartOutline, IoMailOutline } from 'react-icons/io5';\nimport { useHistory } from 'react-router-dom';\nimport uniqueString from 'unique-string';\n\nimport ActionButton from './ActionButton.js';\nimport ProgressSpinner from './ProgressSpinner.js';\nimport mutations from '../graphql/mutations.js';\nimport useDDMutation from '../hooks/useDDMutation.js';\nimport fonts from '../styles/fonts.js';\nimport colours from '../styles/colours.js';\nimport { OrderContext } from '../context/OrderContext.js';\nimport { RealmAppContext } from '../realmApolloClient.js';\n\nconst { standard } = fonts;\nconst { dark, light } = colours;\n\nconst AddToCart = ({ product, addingToCart, updateAddingToCart }) => {\n  const { activeOrder, setActiveOrder } = useContext(OrderContext);\n  const { currentUser, setCurrentUser } = useContext(RealmAppContext);\n\n  const [productInCart, setProductInCart] = useState(false);\n  const [buttonText, setButtonText] = useState('');\n  const history = useHistory();\n  const isLoading = addingToCart.isLoading && addingToCart.productId === product.product_id;\n\n  const updateCurrentUser = async (user) => {\n    await setCurrentUser(prev => ({ ...prev, dbUser: user }));\n  };\n\n  useEffect(() => {\n    if (activeOrder && activeOrder.orderItems && activeOrder.orderItems.length) {\n      const found = activeOrder.orderItems.find(item => item.product._id === product._id);\n      if (found) setProductInCart(true);\n    }\n  }, [activeOrder, setProductInCart, product]);\n\n  // Custom styles for button\n  const styles = {\n    fontFamily: standard,\n    background: dark,\n    color: light,\n    width: '100%'\n  };\n  //\n\n  useEffect(() => {\n    if (productInCart) {\n      setButtonText('Added - View in Cart');\n    } else if (product.numInStock > 0) {\n      setButtonText(\n        <>\n          Add To Cart\n          &nbsp;<IoCartOutline />\n        </>);\n    } else {\n      setButtonText(\n        <>\n        Request this product\n          &nbsp;<IoMailOutline />\n        </>);\n    }\n  }, [setButtonText, productInCart, product, activeOrder]);\n\n  // Order mutations\n  const [createGuestOrder] = useDDMutation(mutations.CreateGuestOrder);\n  const [createOrderForExistingCustomer] = useDDMutation(mutations.CreateOrderForExistingCustomer);\n  const [createNewOrderItem] = useDDMutation(mutations.CreateNewOrderItem);\n  const [updateOrderItemsInOrder] = useDDMutation(mutations.UpdateOrderItemsInOrder);\n  const [updateUserOrders] = useDDMutation(mutations.UpdateUserOrders);\n\n  const handleAddToCart = async (event) => {\n    const { dbUser } = currentUser;\n    const productId = event.currentTarget.value;\n    // -- Logged in user with an active order -- //\n    if (dbUser && dbUser.user_id && activeOrder && activeOrder.order_id) {\n      try {\n        updateAddingToCart(true, productId);\n        const newOrderItemId = `orderItem-${await uniqueString()}`;\n        await createNewOrderItem({\n          variables: {\n            orderItem_id: newOrderItemId,\n            order_id: activeOrder.order_id,\n            product_id: productId\n          }\n        });\n        const orderItemIds = activeOrder.orderItems.map(item => item.orderItem_id);\n        orderItemIds.push(newOrderItemId);\n        const { data } = await updateOrderItemsInOrder({\n          variables: {\n            order_id: activeOrder.order_id,\n            orderItems: orderItemIds\n          }\n        });\n        setActiveOrder(data.updateOneOrder);\n        updateAddingToCart(false);\n      } catch (err) {\n        throw new Error(`Failed to add item to existing order. Error: ${err}`);\n      }\n    }\n\n    // -- Logged in user with no active order -- //\n    if (dbUser && dbUser.user_id && (!activeOrder || (activeOrder && !activeOrder.order_id))) {\n      try {\n        updateAddingToCart(true, productId);\n        const newOrderId = await currentUser.functions.helper_createOrderId();\n        const newOrderItemId = `orderItem-${await uniqueString()}`;\n        const { data } = await createOrderForExistingCustomer({\n          variables: {\n            order_id: newOrderId,\n            user_id: dbUser.user_id,\n            orderItem_id: newOrderItemId,\n            product_id: productId,\n            dateCreated: new Date(Date.now())\n          }\n        });\n        const existingOrderIds =\n          data.insertOneOrder.customer.orders.map(order => order.order_id);\n        await updateUserOrders({\n          variables: {\n            user_id: dbUser.user_id,\n            orders: [...existingOrderIds, newOrderId]\n          }\n        });\n        setActiveOrder(data.insertOneOrder);\n        updateAddingToCart(false);\n      } catch (err) {\n        throw new Error(`Failed to add new order for existing customer. Error: ${err}`);\n      }\n    }\n\n    // -- Only an anonymous Realm user -- //\n    if (currentUser && (!dbUser || (dbUser && !dbUser.user_id))) {\n      try {\n        updateAddingToCart(true, productId);\n        const newOrderId = await currentUser.functions.helper_createOrderId();\n        const newOrderItemId = `orderItem-${await uniqueString()}`;\n        const newUserId = `user-${await uniqueString()}`;\n        const { data } = await createGuestOrder({\n          variables: {\n            order_id: newOrderId,\n            user_ObjectId: currentUser.id,\n            user_id: newUserId,\n            orderItem_id: newOrderItemId,\n            product_id: productId,\n            dateCreated: new Date(Date.now())\n          }\n        });\n        setActiveOrder(data.insertOneOrder.customer.orders[0]);\n        updateAddingToCart(false);\n        await updateCurrentUser(data.insertOneOrder.customer);\n      } catch (err) {\n        throw new Error(`Failed to create guest order. Error: ${err}`);\n      }\n    }\n  };\n\n  return (\n    product.numInStock > 0 ? (\n      <ActionButton\n        text={isLoading ? <ProgressSpinner colour='light' size='1.5rem' /> : buttonText}\n        onClick={productInCart ? () => history.push('/shop/cart') : handleAddToCart}\n        name='addToCart'\n        value={product.product_id}\n        variant='contained'\n        customStyles={styles}\n        disabled={isLoading}\n      />\n    ) : (\n      <ActionButton\n        text={buttonText}\n        customStyles={styles}\n        onClick={() => history.push('/contact-us')}\n      />\n    )\n  );\n};\n\nAddToCart.propTypes = {\n  product: PropTypes.object.isRequired,\n  addingToCart: PropTypes.object.isRequired,\n  updateAddingToCart: PropTypes.func.isRequired\n};\n\nexport default AddToCart;\n","import styled from 'styled-components';\n\nimport ResponsiveTileWrapper from '../ResponsiveTileWrapper.js';\n\nexport const OuterContainer = styled(ResponsiveTileWrapper)`\n  gap: 0.5rem;\n  margin: 1rem 0;\n  justify-content: center;\n`;\n\nexport const Text = styled.h2`\n  font-size: 1rem;\n  margin: 0;\n  @media (min-width: 320px) {\n    font-size: 1.25rem;\n  }\n`;\n\nexport const ProductContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nexport const ProductTextContent = styled.div`\n  display: none;\n  @media (min-width: 360px) {\n    display: flex;\n    justify-content: space-between;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-left: 4px;\n`;\n\nexport const InStockInfo = styled(Text)`\n  align-self: flex-end;\n  margin-right: 4px;\n  text-align: right;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 0.25rem;\n  margin: 0.25rem;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Image from '../../Image.js';\nimport ActionButton from '../../ActionButton.js';\nimport AddToCart from '../../AddToCart.js';\nimport { getPriceInCurrency } from '../../../helpers/price.js';\n\nimport {\n  OuterContainer,\n  ProductContent,\n  ProductTextContent,\n  TextContainer,\n  Text,\n  InStockInfo,\n  ButtonContainer\n} from './styledComponents.js';\n\n// Show a single product.  Can be used 'stripped down' when showing many products\n// or with all details when showing just one product\nconst ProductTile = ({ product, linkTo, currency, ...other }) => {\n  const { name, images, numInStock } = product;\n\n  return (\n    <OuterContainer>\n      <ProductContent>\n        <Image src={images[0]} alt={name} />\n        <ProductTextContent>\n          <TextContainer>\n            <Text>{name}</Text>\n            <Text>{getPriceInCurrency(product, currency)}</Text>\n          </TextContainer>\n          <InStockInfo>{numInStock > 0 ? 'In Stock' : 'Out of Stock'}</InStockInfo>\n        </ProductTextContent>\n      </ProductContent>\n      <ButtonContainer>\n        <ActionButton\n          text='Item Description'\n          linkTo={linkTo}\n          customStyles={{ width: '100%' }}\n        />\n        <div style={{ marginBottom: '0.5rem' }}>\n          <AddToCart\n            product={product}\n            {...other}\n          />\n        </div>\n      </ButtonContainer>\n    </OuterContainer>\n  );\n};\n\nProductTile.propTypes = {\n  product: PropTypes.object.isRequired,\n  linkTo: PropTypes.string,\n  addingToCart: PropTypes.object.isRequired,\n  updateAddingToCart: PropTypes.func.isRequired,\n  currency: PropTypes.string.isRequired\n};\n\nexport default ProductTile;\n","import { useEffect } from 'react';\n\nconst useScrollToTop = () => {\n  useEffect(() => {\n    window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'auto'\n    });\n  }, []);\n};\n\nexport default useScrollToTop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams, useRouteMatch } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport _ from 'lodash';\n\nimport ProductTile from '../../../Components/Tiles/ProductTile/ProductTile.js';\nimport LinkedHeading from '../../../Components/Headings/LinkedHeading.js';\nimport TileList from '../../../Components/Tiles/TileList.js';\nimport LoadingView from '../../../Components/LoadingView.js';\nimport { SINGLE_SUBCATEGORY_BY_NAME } from '../../../graphql/queries.js';\nimport useScrollToTop from '../../../hooks/useScrollToTop.js';\n\nimport { ShopBrowseWrapper, HeadingWrapper, Description } from './styledComponents.js';\n\n// Return a selection of products in a specific sub-category\nconst Products = (props) => {\n  useScrollToTop();\n  const { url } = useRouteMatch();\n  const { category, subCategory } = useParams();\n\n  const { data } = useQuery(SINGLE_SUBCATEGORY_BY_NAME, {\n    variables: { name: subCategory, category }\n  });\n\n  return (\n    <ShopBrowseWrapper>\n      <HeadingWrapper>\n        <LinkedHeading\n          text={_.startCase(subCategory)}\n          headingSize='large'\n          buttonText={`back to ${_.startCase(category)}`}\n          linkTo={`/shop/browse/${category}`}\n        />\n      </HeadingWrapper>\n      {\n        data && data.subCategory ? (\n          <>\n            <Description>{data.subCategory.description}</Description>\n            <TileList>\n              {\n                [...data.subCategory.products]\n                  .sort((a, b) => b.numInStock - a.numInStock)\n                  .map((product, index) => (\n                    <ProductTile\n                      key={index}\n                      product={product}\n                      linkTo={`${url}/${product._id}`}\n                      {...props}\n                    />\n                  ))\n              }\n            </TileList>\n          </>\n        ) : <LoadingView />\n      }\n    </ShopBrowseWrapper>\n  );\n};\n\nProducts.propTypes = {\n  addingToCart: PropTypes.object.isRequired,\n  updateAddingToCart: PropTypes.func.isRequired,\n  itemsInCart: PropTypes.array,\n  currency: PropTypes.string.isRequired\n};\n\nexport default Products;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport colours from '../../../../styles/colours.js';\n\nconst { dark } = colours;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 398px;\n`;\nconst MainImage = styled.img`\n  border: 0.2px solid ${dark};\n  border-radius: 10px;\n  width: 100%;\n  height: auto;\n`;\nconst AllImages = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 0.45rem;\n  @media (max-width: 414px) {\n    gap: 0.35rem;\n  }\n`;\nconst MiniImage = styled.img`\n  border: 0.2px solid ${dark};\n  border-radius: 10px;\n  width: 32%;\n  height: auto;\n  margin-top: 0.5rem;\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst SelectedImage = styled(MiniImage)`\n  border-width: 2.5px;\n`;\n\nconst ImageViewer = ({ images }) => {\n  const [currentImage, setCurrentImage] = useState(images[0]);\n  return (\n    <Container>\n      <MainImage src={currentImage} />\n      <AllImages>\n        {\n          images.map((img, index) => (\n            img === currentImage\n              ? <SelectedImage key={index} src={img} onClick={() => setCurrentImage(img)} />\n              : <MiniImage key={index} src={img} onClick={() => setCurrentImage(img)} />\n          ))\n        }\n      </AllImages>\n    </Container>\n  );\n};\n\nImageViewer.propTypes = {\n  images: PropTypes.array.isRequired\n};\n\nexport default ImageViewer;\n","import styled from 'styled-components';\n\nexport const ProductWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 2rem;\n  width: 95%;\n  margin: auto;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  };\n`;\n\nexport const MainContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 1024px) {\n    height: 398px\n  };\n`;\n\nexport const ProductInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nexport const AddToCartWrapper = styled.div`\n  width: 100%;\n  @media (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const Spacer = styled.div`\n  flex: 1;\n`;\n\nexport const ContactUsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport _ from 'lodash';\n\nimport AddToCart from '../../../../Components/AddToCart.js';\nimport LinkedHeading from '../../../../Components/Headings/LinkedHeading.js';\nimport TextSection from '../../../../Components/TextSection.js';\nimport SectionSpacer from '../../../../Components/SectionSpacer.js';\nimport ActionButton from '../../../../Components/ActionButton.js';\nimport LoadingView from '../../../../Components/LoadingView.js';\nimport ImageViewer from './ImageViewer.js';\nimport colours from '../../../../styles/colours.js';\nimport useScrollToTop from '../../../../hooks/useScrollToTop.js';\nimport { SINGLE_PRODUCT } from '../../../../graphql/queries.js';\nimport { getPriceInCurrency } from '../../../../helpers/price.js';\n\nimport {\n  ProductWrapper,\n  MainContent,\n  ProductInfo,\n  AddToCartWrapper,\n  ContactUsWrapper,\n  Spacer\n} from './styledComponents.js';\nimport { HeadingWrapper } from '../styledComponents.js';\n\nconst { dark, light } = colours;\n\n// Return a single product\nconst Product = ({ currency, ...other }) => {\n  useScrollToTop();\n  const { category, subCategory, productId } = useParams();\n\n  const { data } = useQuery(SINGLE_PRODUCT, {\n    variables: { id: productId }\n  });\n\n  return (\n    data && data.product ? (\n      <>\n        <ProductWrapper>\n          <ImageViewer images={data.product.images} />\n          <MainContent>\n            <ProductInfo>\n              <div>\n                <HeadingWrapper>\n                  <LinkedHeading\n                    text={data.product.name}\n                    headingSize='large'\n                    buttonText={`back to ${_.startCase(subCategory)}`}\n                    linkTo={`/shop/browse/${category}/${subCategory}`}\n                  />\n                </HeadingWrapper>\n                <p>{data.product.description}</p>\n              </div>\n              <div>\n                <h5>{data.product.numInStock ? 'In stock ready for delivery!' : 'Please contact us to request this item'}</h5>\n                <h5>{getPriceInCurrency(data.product, currency)}</h5>\n              </div>\n            </ProductInfo>\n            <Spacer />\n            <AddToCartWrapper>\n              <AddToCart product={data.product} {...other} />\n            </AddToCartWrapper>\n          </MainContent>\n        </ProductWrapper>\n        <SectionSpacer dark spaceAbove spaceBelow />\n        <ContactUsWrapper>\n          <TextSection\n            heading=\"Not quite what you're looking for?\"\n            text=\"We pride ourselves on our bespoke service, if there's something specific you would like then please get in touch - we can almost certainly do it!\"\n          />\n          <ActionButton\n            text='Get in touch'\n            linkTo='/contact-us'\n            customStyles={{\n              background: dark,\n              color: light,\n              width: '100%',\n              maxWidth: '300px',\n              height: '50px',\n              borderRadius: '6px',\n              fontSize: '1.15rem'\n            }}\n          />\n        </ContactUsWrapper>\n      </>\n    ) : <LoadingView />\n  );\n};\n\nProduct.propTypes = {\n  addingToCart: PropTypes.object.isRequired,\n  updateAddingToCart: PropTypes.func.isRequired,\n  currency: PropTypes.string.isRequired\n};\n\nexport default Product;\n","import styled from 'styled-components';\nimport { IoAddCircleOutline, IoRemoveCircleSharp, IoTrashOutline } from 'react-icons/io5';\nimport { Link } from 'react-router-dom';\n\n// Colours\nimport colours from '../../../../styles/colours.js';\nconst { darkFade, dark } = colours;\n\n// General\nexport const CartLine = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid ${darkFade};\n  width: 100%;\n`;\n\nexport const CartWrapper = styled.div`\n  ${props => props.isMinimised ? ({\n      borderRadius: '5px',\n      boxShadow: '-3px -1px 10px 2px rgba(0,0,0,0.2)',\n      padding: '0.5rem',\n      marginBottom: '1rem',\n      '-webkit-box-shadow': '-3px -1px 10px 2px rgba(0,0,0,0.2)'\n    }) : ({\n      margin: '0 0.5rem'\n    })\n  }\n`;\n\n// Cart Product\nexport const DetailsWrapper = styled.div`\n  display: flex;\n`;\n\nexport const ProductDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0.25rem;\n`;\n\nexport const CartDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-width: 5rem;\n  padding: 0.25rem 0.25rem 0.25rem 0.75rem;\n`;\n\nexport const Divider = styled.div`\n  border-right: 0.05rem solid black;\n  flex: 1;\n`;\n\nexport const EditButtonsWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  padding: 0.5rem;\n  align-self: center;\n  align-items: center;\n`;\n\nexport const IncreaseQuantityButton = styled(IoAddCircleOutline)`\n  font-size: 1.75rem;\n  :hover,\n  :active {\n    cursor: pointer;\n  }\n`;\nexport const DecreaseQuantityButton = styled(IoRemoveCircleSharp)`\n  font-size: 1.75rem;\n  :hover,\n  :active {\n    cursor: pointer;\n  }\n`;\nexport const RemoveItemButton = styled(IoTrashOutline)`\n  font-size: 1.75rem;\n  :hover,\n  :active {\n    cursor: pointer;\n  }\n`;\n\nexport const ProductLink = styled(Link)`\n  color: ${dark};\n  :hover {\n    color: ${dark};\n  }\n`;\n\n// Cart Product List\nexport const TotalsWrapper = styled.div`\n  display: flex;\n  padding-top: 0.5rem;\n  padding-right: 2rem;\n`;\n\nexport const TotalsLine = styled(CartLine)`\n  flex-direction: row;\n  border-bottom: none;\n  text-align: left;\n  width: 150px;\n`;\n\nexport const TotalsRows = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nexport const Spacer = styled.div`\n  flex: 1;\n`;\n\nexport const ProductListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 768px;\n  margin: auto;\n`;\n\nexport const DeliveryPrice = styled.h6`\n  ${({ showLineThrough }) => showLineThrough && ({\n    color: darkFade,\n    textDecoration: 'line-through',\n    marginRight: '0.5rem'\n  })}\n`;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ActionButton from '../../../../Components/ActionButton.js';\nimport SectionSpacer from '../../../../Components/SectionSpacer.js';\nimport useDDMutation from '../../../../hooks/useDDMutation.js';\nimport mutations from '../../../../graphql/mutations.js';\nimport { getPriceInCurrency, getCurrencySymbol } from '../../../../helpers/price.js';\nimport { CurrencyContext } from '../../../../context/CurrencyContext.js';\nimport { OrderContext } from '../../../../context/OrderContext.js';\n\nimport {\n  CartLine,\n  DetailsWrapper,\n  ProductDetailsWrapper,\n  CartDetailsWrapper,\n  Divider,\n  EditButtonsWrapper,\n  IncreaseQuantityButton,\n  DecreaseQuantityButton,\n  RemoveItemButton,\n  ProductLink\n} from './StyledComponents.js';\n\n// A single product item inside the cart\nconst CartProduct = ({ orderItem, isMinimised }) => {\n  const { activeOrder, setActiveOrder } = useContext(OrderContext);\n  const { currency } = useContext(CurrencyContext);\n\n  const [isSaveDisabled, setIsSaveDisabled] = useState(true);\n  const [quantity, setQuantity] = useState();\n  const [productTotal, setProductTotal] = useState();\n\n  useEffect(() => {\n    if (orderItem && orderItem.quantity) {\n      setQuantity(orderItem.quantity);\n      setProductTotal(() => orderItem.quantity * orderItem.product[`price${currency}`]);\n    }\n  }, [orderItem, setQuantity, currency]);\n\n  useEffect(() => {\n    setProductTotal(quantity * orderItem.product[`price${currency}`]);\n  }, [quantity, orderItem, setProductTotal, currency]);\n\n  // Handlers\n  const handleIncreaseQuantityClick = () => {\n    setIsSaveDisabled(false);\n    setQuantity(quantity + 1);\n  };\n  const handleDecreaseQuantityClick = () => {\n    setIsSaveDisabled(false);\n    if (quantity !== 0) {\n      setQuantity(quantity - 1);\n    }\n  };\n\n  const [deleteOrderItem] = useDDMutation(mutations.DeleteOrderItem);\n  const [updateOrderItemsInOrder] = useDDMutation(mutations.UpdateOrderItemsInOrder);\n  const [updateItemInOrder] = useDDMutation(mutations.UpdateItemInOrder);\n\n  const handleRemoveItem = async () => {\n    const updatedOrderItems = activeOrder.orderItems.filter(item => item.orderItem_id !== orderItem.orderItem_id);\n    const orderItemIds = updatedOrderItems.map(item => item.orderItem_id);\n\n    try {\n      await deleteOrderItem({\n        variables: {\n          orderItem_id: orderItem.orderItem_id\n        }\n      });\n      const { data } = await updateOrderItemsInOrder({\n        variables: {\n          order_id: activeOrder.order_id,\n          orderItems: orderItemIds\n        }\n      });\n      setActiveOrder(data.updateOneOrder);\n    } catch (err) {\n      throw new Error('Failed to delete item from order');\n    }\n  };\n\n  const handleSave = async (e) => {\n    try {\n      e.preventDefault();\n      if (quantity !== 0) {\n        const { data } = await updateItemInOrder({\n          variables: {\n            id: orderItem._id,\n            quantity\n          }\n        });\n        setActiveOrder(data.updateOneOrderItem.order);\n      } else {\n        handleRemoveItem();\n      }\n      setIsSaveDisabled(true);\n    } catch (err) {\n      throw new Error('Failed to update item in order');\n    }\n  };\n\n  const { product } = orderItem;\n  return (\n    product ? (\n      <CartLine>\n        <SectionSpacer light />\n        <DetailsWrapper>\n          <ProductDetailsWrapper>\n            <ProductLink to={`/shop/browse/${product.category}/${product.subCategory}/${product._id}`}>\n              <h6>{product.name}</h6>\n            </ProductLink>\n            <h6 style={{ fontSize: '0.75rem' }}>Unit Price: {getPriceInCurrency(product, currency)}</h6>\n          </ProductDetailsWrapper>\n          <Divider />\n          <CartDetailsWrapper>\n            <h6>x {quantity}</h6>\n            <h6>{`${getCurrencySymbol(currency)}${productTotal}`}</h6>\n          </CartDetailsWrapper>\n        </DetailsWrapper>\n        {\n          !isMinimised &&\n            <CartLine>\n              <EditButtonsWrapper>\n                <IncreaseQuantityButton onClick={handleIncreaseQuantityClick} />\n                <DecreaseQuantityButton onClick={handleDecreaseQuantityClick} />\n                <RemoveItemButton onClick={handleRemoveItem} />\n                <ActionButton text='Save' onClick={handleSave} disabled={isSaveDisabled} />\n              </EditButtonsWrapper>\n            </CartLine>\n        }\n      </CartLine>\n    ) : null\n  );\n};\n\nCartProduct.propTypes = {\n  orderItem: PropTypes.object.isRequired,\n  isMinimised: PropTypes.bool\n};\n\nexport default CartProduct;\n","import React, { useContext } from 'react';\n\nimport CartProduct from './CartProduct.js';\nimport SectionSpacer from '../../../../Components/SectionSpacer.js';\nimport ActionButton from '../../../../Components/ActionButton.js';\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport useBreakpoints from '../../../../hooks/useBreakpoints.js';\nimport useScrollToTop from '../../../../hooks/useScrollToTop.js';\nimport { getCurrencySymbol } from '../../../../helpers/price.js';\nimport { CurrencyContext } from '../../../../context/CurrencyContext.js';\nimport { OrderContext } from '../../../../context/OrderContext.js';\n\n// Styled Components\nimport {\n  CartWrapper,\n  TotalsWrapper,\n  TotalsRows,\n  TotalsLine,\n  Spacer,\n  ProductListWrapper\n} from './StyledComponents.js';\n\n// A view of all products that have been added to basket\nconst Cart = () => {\n  useScrollToTop();\n\n  const { currency } = useContext(CurrencyContext);\n  const { activeOrder, subtotal } = useContext(OrderContext);\n\n  const { isXs } = useBreakpoints();\n\n  return (\n    <CartWrapper>\n      <ProductListWrapper>\n        <Heading text='Cart' />\n        <SectionSpacer />\n        {\n          activeOrder && activeOrder.orderItems && activeOrder.orderItems.length ? (\n            <>\n              {activeOrder.orderItems.map((item, index) => (\n                <CartProduct\n                  key={index}\n                  orderItem={item}\n                />\n              )\n              )}\n              <TotalsWrapper>\n                <Spacer />\n                <TotalsRows>\n                  <TotalsLine>\n                    <h6>Subtotal</h6>\n                    <Spacer />\n                    <h6>{`${getCurrencySymbol(currency)}${subtotal}`}</h6>\n                  </TotalsLine>\n                </TotalsRows>\n              </TotalsWrapper>\n              <ActionButton\n                text='Go to checkout'\n                linkTo='/shop/checkout'\n                fullWidth={isXs}\n                customStyles={{ margin: !isXs && '1rem 0.25rem 0' }}\n              />\n            </>\n          ) : (\n            <>\n              <SectionSpacer />\n              <h6>Your cart is empty!</h6>\n              <SectionSpacer />\n            </>\n          )\n        }\n      </ProductListWrapper>\n      <SectionSpacer spaceBelow />\n    </CartWrapper>\n  );\n};\n\nexport default Cart;\n","import { MongoDBRealmError } from 'realm-web';\n\n//\nexport const registerEmailPassword = async (app, email, password) => {\n  const unknownErrorMessage = 'Something went wrong, please refresh and try again';\n\n  const handleRegistrationError = (err) => {\n    let message;\n\n    if (err instanceof MongoDBRealmError) {\n      const { error, statusCode } = err;\n      const errorType = error || statusCode;\n      switch (errorType) {\n        case 'invalid username':\n          message = 'Email address is invalid';\n          break;\n        case 'invalid username/password':\n        case 'invalid password':\n        case 401:\n          message = 'Password is invalid';\n          break;\n        case 'name already in use':\n        case 409:\n          message = 'Email address is already registered';\n          break;\n        case 'password must be between 6 and 128 characters':\n        case 400:\n          message = 'Invalid password - must be between 6 and 128 characters';\n          break;\n        default: message = unknownErrorMessage;\n          break;\n      }\n    } else {\n      message = unknownErrorMessage;\n    }\n    return message;\n  };\n\n  let errorMessage;\n  try {\n    await app.emailPasswordAuth.registerUser(email, password);\n  } catch (err) {\n    errorMessage = handleRegistrationError(err);\n  }\n  return { error: errorMessage };\n};\n\n//\nexport const getLoginError = (err) => {\n  let message;\n\n  if (err instanceof MongoDBRealmError) {\n    const { error, statusCode } = err;\n    const errorType = error || statusCode;\n\n    switch (errorType) {\n      case 'invalid username/password':\n      case 'invalid username':\n      case 401:\n        message = 'Email address or password is invalid';\n        break;\n      default: message = 'Login failed, please try again.';\n    }\n\n    return message;\n  }\n};\n\n//\nexport const isAuthenticated = (user) => {\n  if (!user) return false;\n\n  if (\n    user.providerType === 'local-userpass' &&\n    user.dbUser &&\n    (user.dbUser.type === 'customer' || user.dbUser.type === 'admin')\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const isAdmin = (user) => {\n  return !!(isAuthenticated(user) && user.dbUser.type === 'admin');\n};\n","import _ from 'lodash';\nimport axios from 'axios';\n\nexport const validateInputFields = (inputFields, requiredFields) => {\n  // no address provided -->\n  if (!inputFields) {\n    return { isValid: false, message: 'Must provide delivery details' };\n  }\n\n  const fields = { ...inputFields };\n  // Check to make sure at least some value has been passed for the required fields -->\n  let tests = [];\n  let failedTests = [];\n\n  if (requiredFields) {\n    requiredFields.forEach(key => {\n      if (fields[key]) {\n        tests.push({ key, result: true });\n      } else {\n        tests.push({ key, result: false });\n      }\n    });\n\n    // Check for failed fields and provide a relevant message to show user -->\n    failedTests = tests.filter(t => t.result === false);\n    if (failedTests.length) {\n      console.log('failedTests[0]', failedTests[0]);\n      let message;\n      switch (failedTests.length) {\n        case 1:\n          message = `'${_.startCase(failedTests[0].key)}' is missing`;\n          break;\n        case 2:\n          message = `'${_.startCase(failedTests[0].key)}' and '${_.startCase(failedTests[1].key)}' are missing`;\n          break;\n        default: message = 'Required fields missing';\n      }\n      return { isValid: false, message, failedTests };\n    }\n  }\n\n  // Check format of personal details fields\n  const personalDetails = ['firstName', 'lastName', 'email', 'phone'];\n  tests = [];\n  failedTests = [];\n\n  const regexCheck = (key, value) => {\n    let regex;\n    if (key === 'firstName' || key === 'lastName') {\n      regex = /^[a-zA-Z]+$/;\n    } else if (key === 'email') {\n      regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    } else if (key === 'phone') {\n      regex = /^(?:[0-9] ?){6,14}[0-9]$/;\n    }\n    tests.push({ key, value, result: regex.test(value) });\n  };\n\n  personalDetails.forEach(key => {\n    if (fields[key]) {\n      let value = fields[key];\n      if (typeof value !== 'string') {\n        value = value.toString();\n      }\n      value = value.trim();\n      regexCheck(key, value);\n    }\n  });\n  failedTests = tests.filter(t => t.result === false);\n\n  if (failedTests.length) {\n    return { isValid: false, message: 'Errors in form details, please check and re-submit', failedTests };\n  } else {\n    return { isValid: true };\n  }\n};\n\nexport const getAddressesFromPostcode = async (postcode) => {\n  try {\n    // Get address ID from postcode -->\n    const apiKey = 'FU89-WW97-YH46-EG62';\n    const url = 'https://api.addressy.com/Capture/Interactive';\n    const findEndpoint = `${url}/Find/v1.10/json3.ws?Key=${apiKey}&Text=${postcode}&Limit=2`;\n\n    let addressOptions;\n\n    // Attempt to fetch address ID, this may pass back a postcode ID, in which case run the function again until\n    // an address ID is returned -->\n    const { data, error } = await axios.get(findEndpoint);\n    const originalData = data;\n\n    if (error) throw new Error('Failed to find any address for postcode.', error);\n    if (data && data.Items) {\n      // If items are of address Type then pass addresses back to component for user to select between\n      if (data.Items[0].Type === 'Postcode' && data.Items.length === 1) {\n        addressOptions = (async function retry () {\n          const { data } = await axios.get(`${findEndpoint}&Container=${originalData.Items[0].Id}`);\n          if (data.Items[0].Type === 'Address') {\n            return data.Items;\n          } else {\n            retry();\n          }\n        })();\n      } else {\n        return { message: 'Postcode not specific enough' };\n      }\n    }\n    const fulfilledOptions = await Promise.resolve(addressOptions);\n\n    // Return addresses for use in dropdown selector\n    return fulfilledOptions.map(option => `${option.Text}, ${option.Description}`);\n  } catch (err) {\n    console.log('Error getting address from postcode', err);\n  }\n};\n\nexport const getDefaultAddress = (addresses) => {\n  if (addresses && addresses.length) {\n    const defaultAddress = addresses.find(addr => addr.isDefault === true);\n\n    if (defaultAddress) {\n      return defaultAddress;\n    }\n  }\n};\n","import styled from 'styled-components';\n\nexport const CheckoutFormsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0.5rem auto;\n  width: 96%;\n  @media (min-width: 1024px) {\n    width: 40%;\n  }\n`;\n\nexport const CheckoutItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  border-radius: 5px;\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n`;\n\nexport const PaymentFormItems = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  margin-top: 1rem;\n`;\n\nexport const SummaryWrapper = styled.div`\n  min-height: 600px;\n  margin: 0.5rem auto;\n  width: 96%;\n  @media (min-width: 1024px) {\n    width: 40%;\n  }\n`;\n\nexport const SummaryItem = styled(CheckoutItem)`\n  flex-direction: column\n`;\n\nexport const SummaryRow = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0.5rem 0;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 0.5rem;\n`;\n","import React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { PaymentElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport uniqueString from 'unique-string';\n\nimport ActionButton from '../../../../Components/ActionButton.js';\nimport ProgressSpinner from '../../../../Components/ProgressSpinner.js';\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport UserMessage from '../../../../Components/UserMessage.js';\nimport SelectInput from '../../../../Components/Forms/SelectInput.js';\nimport useDDMutation from '../../../../hooks/useDDMutation.js';\nimport mutations from '../../../../graphql/mutations.js';\nimport { OrderContext } from '../../../../context/OrderContext.js';\nimport { CurrencyContext } from '../../../../context/CurrencyContext.js';\nimport { RealmAppContext } from '../../../../realmApolloClient.js';\nimport { getFreeDeliveryConstraints } from '../../../../helpers/offers.js';\nimport { isAuthenticated } from '../../../../helpers/auth.js';\nimport { getUpdatedObjectFields } from '../../../../helpers/global.js';\nimport { getDefaultAddress } from '../../../../helpers/address.js';\n\n// Styled components\nimport { CheckoutItem, PaymentFormItems } from './StyledComponents.js';\n\nconst PaymentForm = ({\n  deliveryDetails,\n  additionalInfo,\n  checkoutFormsComplete,\n  updateCheckoutCompletion,\n  updateOrder,\n  paymentIntent,\n  willCustomerPickUpInStore\n}) => {\n  const app = useContext(RealmAppContext);\n  const { currency, setCurrency } = useContext(CurrencyContext);\n  const { activeOrder, deliveryZone } = useContext(OrderContext);\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [createAddress] = useDDMutation(mutations.CreateAddress);\n  const [updateAddress] = useDDMutation(mutations.UpdateAddress);\n  const [updateUserAddresses] = useDDMutation(mutations.UpdateUserAddresses);\n  const [addDeliveryDetailsToOrder] = useDDMutation(mutations.AddDeliveryDetailsToOrder);\n  const [addPickUpDetailsToOrder] = useDDMutation(mutations.AddPickUpDetailsToOrder);\n\n  const handleSubmitPayment = async (e) => {\n    try {\n      e.preventDefault();\n\n      if (deliveryDetails && deliveryDetails.address === '') {\n        setErrorMessage('Please complete and confirm delivery details before submitting payment');\n        return;\n      }\n      if (!stripe || !elements) return;\n\n      setIsLoading(true);\n\n      // Seperate address and delivery fields\n      const addressFields = {\n        line1: deliveryDetails.line1,\n        line2: deliveryDetails.line2,\n        city: deliveryDetails.city,\n        county: deliveryDetails.county,\n        postcode: deliveryDetails.postcode,\n        country: deliveryDetails.country,\n        isDefault: isAuthenticated(app.currentUser)\n      };\n      const deliveryFields = {\n        firstName: deliveryDetails.firstName,\n        lastName: deliveryDetails.lastName,\n        email: deliveryDetails.email,\n        phone: deliveryDetails.phone,\n        price: deliveryDetails.price\n      };\n\n      // If delivering or currency has changed after payment intent was created then make sure\n      // payment intent is updated with currency & correct amount (including delivery price)\n      const toBeDelivered = !willCustomerPickUpInStore.current;\n\n      // make sure payment intent is up-to-date with any changes\n      const updatedTotals = await app.currentUser.functions.stripe_updatePaymentTotals(\n        paymentIntent.id,\n        activeOrder.orderItems,\n        deliveryZone.current,\n        currency,\n        getFreeDeliveryConstraints()\n      );\n      deliveryFields.price = updatedTotals ? updatedTotals.deliveryTotal : 0;\n\n      // Update additional order info\n      const variables = { id: activeOrder._id, currency };\n\n      if (additionalInfo && additionalInfo.length) {\n        variables.extraInfo = additionalInfo;\n      }\n      await updateOrder({ variables });\n\n      // Add delivery address details and update user if necessary\n      let addressId = deliveryDetails.address_id || null;\n\n      if (toBeDelivered) {\n        if (!addressId || addressId === '') {\n          // No address stored -> add a new address and assign to user if they're logged in\n          const { data } = await createAddress({\n            variables: {\n              address_id: `address-${await uniqueString()}`,\n              ...addressFields\n            }\n          });\n          addressId = data.insertOneAddress.address_id;\n\n          if (isAuthenticated(app.currentUser)) {\n            const { dbUser } = app.currentUser;\n            const { data } = await updateUserAddresses({\n              variables: {\n                id: dbUser._id,\n                addresses: [addressId]\n              }\n            });\n            await app.setCurrentUser(user => ({\n              ...user,\n              dbUser: data.updateOneUser\n            }));\n          }\n        } else {\n          // Address is stored -> update it if it's been changed during checkout\n          const defaultAddress = getDefaultAddress(app.currentUser.dbUser.addresses);\n          const { updatedFields, hasUpdatedFields } = getUpdatedObjectFields(defaultAddress, addressFields);\n\n          if (hasUpdatedFields) {\n            await updateAddress({\n              variables: {\n                address_id: addressId,\n                ...updatedFields\n              }\n            });\n          }\n        }\n\n        // Create a delivery with a link to the address and assign to the order\n        await addDeliveryDetailsToOrder({\n          variables: {\n            order_id: deliveryDetails.order_id,\n            delivery_id: deliveryDetails.delivery_id,\n            address_id: addressId,\n            ...deliveryFields\n          }\n        });\n      } else {\n        // Order will be collected -> still create the delivery but don't attach an address\n        await addPickUpDetailsToOrder({\n          variables: {\n            order_id: deliveryDetails.order_id,\n            delivery_id: deliveryDetails.delivery_id,\n            firstName: deliveryDetails.firstName,\n            lastName: deliveryDetails.lastName,\n            email: deliveryDetails.email,\n            phone: deliveryDetails.phone\n          }\n        });\n      }\n\n      // Confirm payment with Stripe\n      const { error: stripeError } = await stripe.confirmPayment({\n        elements,\n        confirmParams: {\n          return_url: 'http://localhost:3000/shop/checkout/summary'\n        }\n      });\n\n      // This will only be reached if an error has occurred.  Show the error\n      // in a message for the customer. Otherwise, customer is redirected to 'return_url'\n      if (stripeError.type === 'card_error' || stripeError.type === 'validation_error') {\n        setErrorMessage(stripeError.message);\n      } else {\n        setErrorMessage('An unexpected error occured.');\n      }\n    } catch (err) {\n      setErrorMessage('An unexpected error occured. Please contact Doves and Dandys');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCurrencySelection = (e) => {\n    setCurrency(e.target.value);\n  };\n\n  const currencyOptions = [\n    { name: 'British Pounds (£)', value: 'GBP' },\n    { name: 'US Dollars ($)', value: 'USD' },\n    { name: 'Euros (€)', value: 'EUR' }\n  ];\n\n  useEffect(() => {\n    if (elements) {\n      const paymentElement = elements.getElement('payment');\n      paymentElement.on('change', (e) => {\n        if (e.complete !== checkoutFormsComplete.paymentFormComplete) {\n          updateCheckoutCompletion({\n            paymentFormComplete: e.complete\n          });\n        }\n      });\n    }\n  }, [elements, checkoutFormsComplete, updateCheckoutCompletion]);\n\n  return (\n    <CheckoutItem>\n      <form>\n        <Heading text='Payment Details' size='small' />\n        <PaymentFormItems>\n          <SelectInput\n            name='currency-selection'\n            value={currency}\n            label='Select currency'\n            handleChange={handleCurrencySelection}\n            options={currencyOptions}\n            variant='outlined'\n          />\n          <PaymentElement />\n          {errorMessage && <UserMessage type='error' text={errorMessage} />}\n        </PaymentFormItems>\n        <div>\n          <UserMessage\n            type='warning'\n            text='Clicking pay now will submit your payment'\n          />\n          <ActionButton\n            text={isLoading ? <ProgressSpinner size='1.5rem' /> : 'pay now'}\n            onClick={handleSubmitPayment}\n            disabled={!stripe || !elements || !checkoutFormsComplete}\n            fullWidth\n            customStyles={!checkoutFormsComplete ? { opacity: 0.5 } : null}\n          />\n        </div>\n      </form>\n    </CheckoutItem>\n  );\n};\n\nPaymentForm.propTypes = {\n  deliveryDetails: PropTypes.object.isRequired,\n  additionalInfo: PropTypes.string.isRequired,\n  checkoutFormsComplete: PropTypes.bool.isRequired,\n  updateCheckoutCompletion: PropTypes.func.isRequired,\n  updateOrder: PropTypes.func.isRequired,\n  paymentIntent: PropTypes.object.isRequired,\n  willCustomerPickUpInStore: PropTypes.object.isRequired\n};\n\nexport default PaymentForm;\n","export const getFreeDeliveryConstraints = () => {\n  return {\n    GBP: 100,\n    USD: 150,\n    EUR: 150\n  };\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  -webkit-box-shadow: ${props => !props.useFormOnly && '-3px -1px 10px 2px rgba(0,0,0,0.2)'};\n  box-shadow: ${props => !props.useFormOnly && '-3px -1px 10px 2px rgba(0,0,0,0.2)'};\n  border-radius: 5px;\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n`;\n\nexport const SelectAddress = styled.div`\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  marginTop: 5.5rem;\n`;\n\nexport const SpacedRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const CheckboxWrapper = styled.div`\n  margin-top: 1rem;\n  margin-left: 0.75rem;\n`;\n\nexport const MessageWrapper = styled.span`\n  margin-right: 0.25rem\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ActionButton from '../ActionButton.js';\nimport RowGroup from '../Forms/RowGroup.js';\nimport ProgressSpinner from '../ProgressSpinner.js';\nimport UserMessage from '../UserMessage.js';\n\n// Styled components\nimport { MessageWrapper } from './StyledComponents.js';\n\nconst FormSubmit = ({\n  formDisabled,\n  buttonDisabled,\n  message,\n  buttonText,\n  loading,\n  handleSubmit,\n  handleBackToEdit,\n  pickUpInStore\n}) => {\n  const buttonProps = {};\n  if (!formDisabled || pickUpInStore) {\n    buttonProps.onClick = handleSubmit;\n    buttonProps.text = loading ? <ProgressSpinner size='1.5rem' /> : buttonText || 'save details';\n  } else {\n    buttonProps.onClick = handleBackToEdit;\n    buttonProps.text = 'Edit details';\n  }\n\n  return (\n    <RowGroup>\n      <ActionButton {...buttonProps} customStyles={{ width: '50%', height: '2.5rem' }} disabled={buttonDisabled} />\n      {\n        message && message.type &&\n          <MessageWrapper>\n            <UserMessage type={message.type} text={message.text} />\n          </MessageWrapper>\n      }\n    </RowGroup>\n  );\n};\n\nFormSubmit.propTypes = {\n  formDisabled: PropTypes.bool.isRequired,\n  buttonDisabled: PropTypes.bool,\n  message: PropTypes.object.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleBackToEdit: PropTypes.func.isRequired\n};\n\nexport default FormSubmit;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@mui/material';\nimport colours from '../../styles/colours.js';\n\nconst TextInput = ({\n  name,\n  value,\n  label,\n  helperText,\n  required,\n  handleChange,\n  autoFocus,\n  type,\n  disabled,\n  variant,\n  margin,\n  multiline\n}) => {\n  return (\n    <TextField\n      id={name}\n      name={name}\n      value={value}\n      aria-describedby={name}\n      required={required !== false}\n      helperText={helperText}\n      label={label}\n      margin={margin || 'dense'}\n      variant={variant || 'filled'}\n      onChange={handleChange}\n      fullWidth\n      autoFocus={autoFocus}\n      disabled={disabled}\n      type={type}\n      multiline={multiline}\n      sx={{\n        backgroundColor: 'transparent',\n        background: 'transparent',\n        borderRadius: '10px',\n        '.Mui-focused': {\n          color: colours.dark\n        }\n      }}\n    />\n  );\n};\n\nTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  helperText: PropTypes.string,\n  required: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  type: PropTypes.string, // html input type\n  disabled: PropTypes.bool,\n  variant: PropTypes.string,\n  margin: PropTypes.string,\n  multiline: PropTypes.bool\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormControlLabel, Checkbox as MuiCheckbox } from '@mui/material';\n\n// Colours\nimport colours from '../../styles/colours.js';\nconst { dark } = colours;\n\nconst Checkbox = ({ value, label, handleChange, size, disabled }) => {\n  return (\n    <FormControlLabel\n      control={\n        <MuiCheckbox\n          size={size}\n          onChange={handleChange}\n          sx={{\n            color: dark,\n            '&.Mui-checked': {\n              color: dark\n            }\n          }}\n          value={value}\n          disabled={disabled}\n        />\n      }\n      sx={{\n        color: dark,\n        '.MuiFormControlLabel-label': {\n          marginLeft: '0.75rem'\n        }\n      }}\n      label={label}\n    />\n  );\n};\n\nCheckbox.propTypes = {\n  value: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  size: PropTypes.string,\n  disabled: PropTypes.bool\n};\n\nexport default Checkbox;\n","import _ from 'lodash';\n\nexport const formatUserDetails = (details) => {\n  const formattedFields = {};\n  for (const key in details) {\n    const value = details[key];\n    switch (key) {\n      case 'firstName':\n      case 'lastName':\n      case 'line1':\n      case 'line2':\n      case 'city':\n      case 'county':\n      case 'country':\n        formattedFields[key] = _.startCase(value.trim());\n        break;\n      case 'postcode':\n        formattedFields[key] = value.trim();\n        break;\n      case 'email':\n        formattedFields.email = value.trim().toLowerCase();\n        break;\n      case 'phone':\n        formattedFields.phone = value.toString().trim();\n        break;\n      default:\n        break;\n    }\n  }\n  return formattedFields;\n};\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSubmit from './FormSubmit.js';\nimport RowGroup from '../Forms/RowGroup.js';\nimport TextInput from '../Forms/TextInput.js';\nimport SelectInput from '../Forms/SelectInput.js';\nimport Checkbox from '../Forms/Checkbox.js';\nimport { formatUserDetails } from '../../helpers/user.js';\n\nimport { CheckboxWrapper } from './StyledComponents.js';\n\nconst AddressFormBasic = ({\n  onAddressValid,\n  onEditting,\n  onPickUpInStore,\n  buttonText,\n  successMessage,\n  disableOnComplete,\n  defaultAddress,\n  isCheckoutForm\n}) => {\n  const [addressFields, setAddressFields] = useState({\n    address_id: defaultAddress ? defaultAddress.address_id : '',\n    line1: defaultAddress ? defaultAddress.line1 : '',\n    line2: defaultAddress ? defaultAddress.line2 : '',\n    city: defaultAddress ? defaultAddress.city : '',\n    county: defaultAddress ? defaultAddress.county : '',\n    postcode: defaultAddress ? defaultAddress.postcode : '',\n    country: defaultAddress ? defaultAddress.country : ''\n  });\n\n  const [deliveryCountries, setDeliveryCountries] = useState([]);\n  const [message, setMessage] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [formDisabled, setFormDisabled] = useState(false);\n\n  const pickUpInStore = useRef(false);\n\n  const handleFormComplete = useCallback(async (fields) => {\n    setMessage({\n      type: 'success',\n      text: successMessage || 'Saved address details'\n    });\n\n    const { address_id: addressId, ...fieldsToFormat } = fields;\n    const formattedFields = formatUserDetails(fieldsToFormat);\n\n    await onAddressValid({ ...formattedFields, address_id: addressId }, 'delivery');\n\n    if (disableOnComplete) {\n      setFormDisabled(true);\n    }\n  }, [successMessage, disableOnComplete, onAddressValid]);\n\n  const handleInputChange = (e) => {\n    setAddressFields(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    try {\n      e.preventDefault();\n      setLoading(true);\n\n      // check required fields exist\n      const failedTests = [];\n      const requiredFields = ['line1', 'city', 'county', 'postcode', 'country'];\n      for (const field of requiredFields) {\n        if (!addressFields[field] || addressFields[field] === '') {\n          failedTests.push(field);\n        }\n      }\n      if (failedTests.length) {\n        setMessage({\n          type: 'error',\n          text: 'Address must include all fields marked as required (*)'\n        });\n      } else {\n        handleFormComplete(addressFields);\n      }\n    } catch (err) {\n      throw new Error('Failed to save address. Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStorePickUpChange = () => {\n    pickUpInStore.current = !pickUpInStore.current;\n    setFormDisabled(pickUpInStore.current);\n    onPickUpInStore(pickUpInStore.current);\n  };\n\n  const handleBackToEdit = () => {\n    setFormDisabled(false);\n    setMessage({});\n    if (onEditting) {\n      onEditting('delivery');\n    }\n  };\n\n  //\n  const url = '/PostalCountries/countries.json';\n\n  const getCountries = useCallback(async () => {\n    const response = await window.fetch(url);\n    const jsonResponse = await response.json();\n\n    const deliveryCountries = jsonResponse\n      .sort((a, b) => {\n        if (a.country < b.country) return -1;\n        if (a.country > b.country) return 1;\n        return 0;\n      })\n      .map(({ country }) => ({\n        name: country,\n        value: country\n      }));\n\n    setDeliveryCountries(deliveryCountries);\n  }, [url]);\n\n  useEffect(() => getCountries(), [getCountries]);\n\n  //\n  useEffect(() => {\n    if (defaultAddress && disableOnComplete) {\n      handleFormComplete(defaultAddress);\n    }\n  }, [defaultAddress, disableOnComplete, handleFormComplete]);\n\n  return (\n    deliveryCountries ? (\n      <form>\n        <TextInput\n          name='line1'\n          value={addressFields.line1}\n          label='Address Line 1'\n          handleChange={handleInputChange}\n          variant='outlined'\n          margin='normal'\n          type='text'\n          disabled={formDisabled}\n        />\n        <TextInput\n          name='line2'\n          value={addressFields.line2}\n          label='Address Line 2'\n          handleChange={handleInputChange}\n          required={false}\n          variant='outlined'\n          margin='normal'\n          type='text'\n          disabled={formDisabled}\n        />\n        <RowGroup>\n          <TextInput\n            name='city'\n            value={addressFields.city}\n            label='City'\n            handleChange={handleInputChange}\n            variant='outlined'\n            margin='normal'\n            type='text'\n            disabled={formDisabled}\n          />\n          <TextInput\n            name='county'\n            value={addressFields.county}\n            label='County / State'\n            handleChange={handleInputChange}\n            variant='outlined'\n            margin='normal'\n            type='text'\n            disabled={formDisabled}\n          />\n        </RowGroup>\n        <RowGroup>\n          <TextInput\n            name='postcode'\n            value={addressFields.postcode}\n            label='Postcode'\n            handleChange={handleInputChange}\n            variant='outlined'\n            margin='normal'\n            type='text'\n            disabled={formDisabled}\n          />\n          <SelectInput\n            name='country'\n            value={addressFields.country}\n            label='Country *'\n            handleChange={handleInputChange}\n            options={deliveryCountries}\n            required\n            variant='outlined'\n            disabled={formDisabled}\n            style={{ marginTop: '8px' }}\n          />\n        </RowGroup>\n        <FormSubmit\n          formDisabled={formDisabled}\n          buttonDisabled={pickUpInStore.current}\n          message={message}\n          buttonText={buttonText}\n          loading={loading}\n          handleSubmit={handleSubmit}\n          handleBackToEdit={handleBackToEdit}\n          pickUpInStore={pickUpInStore.current}\n        />\n        {\n          isCheckoutForm && (\n            <CheckboxWrapper>\n              <Checkbox\n                label='Pick up in-store'\n                handleChange={handleStorePickUpChange}\n                value={pickUpInStore.current}\n              />\n            </CheckboxWrapper>\n          )\n        }\n      </form>\n    ) : null\n  );\n};\n\nAddressFormBasic.propTypes = {\n  onAddressValid: PropTypes.func.isRequired,\n  onEditting: PropTypes.func,\n  onPickUpInStore: PropTypes.func,\n  buttonText: PropTypes.string,\n  successMessage: PropTypes.string,\n  disableOnComplete: PropTypes.bool,\n  defaultAddress: PropTypes.object,\n  isCheckoutForm: PropTypes.bool\n};\n\nexport default AddressFormBasic;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormSubmit from './FormSubmit.js';\nimport RowGroup from '../Forms/RowGroup.js';\nimport TextInput from '../Forms/TextInput.js';\nimport { formatUserDetails } from '../../helpers/user.js';\nimport { validateInputFields } from '../../helpers/address.js';\n\nconst PersonalDetailsForm = ({\n  dbUser,\n  onValidDetails,\n  onEditting,\n  buttonText,\n  successMessage,\n  disableOnComplete,\n  requiredFields,\n  isCheckoutForm\n}) => {\n  const [personalDetailsFields, setPersonalDetailsFields] = useState({\n    firstName: dbUser.firstName || '',\n    lastName: dbUser.lastName || '',\n    email: dbUser.email || '',\n    phone: dbUser.phone || ''\n  });\n  const [message, setMessage] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [formDisabled, setFormDisabled] = useState(false);\n\n  const handleFormComplete = useCallback(async (fields) => {\n    setMessage({\n      type: 'success',\n      text: successMessage || 'Saved address details'\n    });\n    const formattedFields = formatUserDetails(fields);\n    await onValidDetails(formattedFields, 'personal');\n\n    if (disableOnComplete) {\n      setFormDisabled(true);\n    }\n  }, [successMessage, disableOnComplete, onValidDetails]);\n\n  const handleInputChange = (e) => {\n    setPersonalDetailsFields(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const { isValid, message } = validateInputFields(personalDetailsFields, requiredFields);\n\n    if (isValid) {\n      try {\n        await handleFormComplete(personalDetailsFields);\n      } catch (err) {\n        console.error('Save personal details failed. Error:', err);\n        setMessage({\n          type: 'error',\n          text: 'Failed to save details, please refresh and try again or contact Doves and Dandys if the problem persists'\n        });\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      setMessage({ type: 'error', text: message });\n      setLoading(false);\n    }\n  };\n  const handleBackToEdit = () => {\n    setFormDisabled(false);\n    setMessage({});\n    if (onEditting) {\n      onEditting('personal');\n    }\n  };\n\n  // Check initial values, if all required fields are filled then mark form as complete\n  const initialValuesChecked = useRef(false);\n  useEffect(() => {\n    if (initialValuesChecked.current === false && isCheckoutForm) {\n      const { isValid } = validateInputFields(personalDetailsFields, requiredFields);\n      if (isValid) {\n        handleFormComplete(personalDetailsFields);\n      }\n      initialValuesChecked.current = true;\n    }\n  }, [dbUser, disableOnComplete, handleFormComplete, personalDetailsFields, requiredFields, initialValuesChecked, isCheckoutForm]);\n\n  return (\n    <form>\n      <RowGroup>\n        <TextInput\n          name='firstName'\n          value={personalDetailsFields.firstName}\n          label='First name'\n          handleChange={handleInputChange}\n          required={requiredFields.includes('firstName')}\n          variant='outlined'\n          margin='normal'\n          type='text'\n          disabled={formDisabled}\n        />\n        <TextInput\n          name='lastName'\n          value={personalDetailsFields.lastName}\n          label='Last name'\n          handleChange={handleInputChange}\n          required={requiredFields.includes('lastName')}\n          variant='outlined'\n          margin='normal'\n          type='text'\n          disabled={formDisabled}\n        />\n      </RowGroup>\n      <TextInput\n        name='email'\n        value={personalDetailsFields.email}\n        label='Email'\n        handleChange={handleInputChange}\n        variant='outlined'\n        margin='normal'\n        type='email'\n        disabled={formDisabled}\n        required={requiredFields.includes('email')}\n      />\n      <TextInput\n        name='phone'\n        value={personalDetailsFields.phone}\n        label='Phone'\n        handleChange={handleInputChange}\n        variant='outlined'\n        margin='normal'\n        type='text'\n        disabled={formDisabled}\n        required={requiredFields.includes('phone')}\n      />\n      <FormSubmit\n        formDisabled={formDisabled}\n        message={message}\n        buttonText={buttonText}\n        loading={loading}\n        handleSubmit={handleSubmit}\n        handleBackToEdit={handleBackToEdit}\n      />\n    </form>\n  );\n};\n\nPersonalDetailsForm.defaultProps = {\n  requiredFields: ['email']\n};\n\nPersonalDetailsForm.propTypes = {\n  dbUser: PropTypes.object.isRequired,\n  onValidDetails: PropTypes.func.isRequired,\n  requiredFields: PropTypes.array.isRequired,\n  onEditting: PropTypes.func,\n  buttonText: PropTypes.string,\n  successMessage: PropTypes.string,\n  disableOnComplete: PropTypes.bool,\n  isCheckoutForm: PropTypes.bool\n};\n\nexport default PersonalDetailsForm;\n","import React, { useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AddressFormBasic from '../../../../Components/AddressForms/AddressFormBasic.js';\nimport PersonalDetailsForm from '../../../../Components/AddressForms/PersonalDetailsForm.js';\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport { getDefaultAddress } from '../../../../helpers/address.js';\nimport { isAuthenticated } from '../../../../helpers/auth.js';\nimport { getUpdatedObjectFields } from '../../../../helpers/global.js';\nimport { RealmAppContext } from '../../../../realmApolloClient.js';\nimport mutations from '../../../../graphql/mutations.js';\nimport useDDMutation from '../../../../hooks/useDDMutation.js';\n\n// Styled components\nimport { CheckoutItem } from './StyledComponents.js';\n\nconst DeliveryForm = ({\n  updateDeliveryDetails,\n  updateCheckoutCompletion,\n  willCustomerPickUpInStore\n}) => {\n  const { currentUser, setCurrentUser } = useContext(RealmAppContext);\n\n  const [updateUser] = useDDMutation(mutations.UpdateUser);\n\n  const personalRequiredFields = ['firstName', 'lastName', 'email'];\n  const defaultAddress = getDefaultAddress(currentUser.dbUser.addresses);\n\n  const handleValidDetails = useCallback(async (fields, formType) => {\n    updateDeliveryDetails(fields);\n    if (formType) {\n      updateCheckoutCompletion({ [`${formType}FormComplete`]: true });\n    }\n\n    // if logged in user then update details if any have changed\n    if (isAuthenticated(currentUser)) {\n      const { updatedFields, hasUpdatedFields } = getUpdatedObjectFields(currentUser.dbUser, fields);\n\n      if (formType === 'personal' && hasUpdatedFields) {\n        const { data } = await updateUser({\n          variables: {\n            id: currentUser.dbUser._id,\n            ...updatedFields\n          }\n        });\n        await setCurrentUser(user => ({\n          ...user,\n          dbUser: data.updateOneUser\n        }));\n      }\n    }\n  }, [updateDeliveryDetails, updateCheckoutCompletion, currentUser, updateUser, setCurrentUser]);\n\n  const handleEditDetails = useCallback((formType) => {\n    updateCheckoutCompletion({ [`${formType}FormComplete`]: false });\n  }, [updateCheckoutCompletion]);\n\n  const handlePickUpInStore = (willPickUp) => {\n    willCustomerPickUpInStore.current = willPickUp;\n    updateCheckoutCompletion({ deliveryFormComplete: !!willPickUp });\n  };\n\n  return (\n    <div>\n      <CheckoutItem>\n        <Heading text='Your details' size='small' />\n        <PersonalDetailsForm\n          dbUser={currentUser.dbUser}\n          onValidDetails={handleValidDetails}\n          onEditting={handleEditDetails}\n          buttonText='confirm details'\n          successMessage='Personal details confirmed'\n          disableOnComplete\n          requiredFields={personalRequiredFields}\n          isCheckoutForm\n        />\n      </CheckoutItem>\n      <CheckoutItem>\n        <Heading text='Delivery details' size='small' />\n        <AddressFormBasic\n          onAddressValid={handleValidDetails}\n          onEditting={handleEditDetails}\n          onPickUpInStore={handlePickUpInStore}\n          buttonText='confirm address'\n          successMessage='Address confirmed'\n          disableOnComplete\n          defaultAddress={defaultAddress}\n          isCheckoutForm\n        />\n      </CheckoutItem>\n    </div>\n  );\n};\n\nDeliveryForm.propTypes = {\n  updateDeliveryDetails: PropTypes.func.isRequired,\n  updateCheckoutCompletion: PropTypes.func.isRequired,\n  willCustomerPickUpInStore: PropTypes.object.isRequired\n};\n\nexport default DeliveryForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextField } from '@mui/material';\n\n// Styled components\nimport { CheckoutItem } from './StyledComponents.js';\n\nconst AdditionalInfo = ({ additionalInfo, updateAdditionalInfo }) => {\n  const handleInput = (e) => {\n    updateAdditionalInfo(e.target.value);\n  };\n\n  return (\n    <div>\n      <CheckoutItem>\n        <TextField\n          multiline\n          minRows={8}\n          maxRows={8}\n          label='Additional info'\n          helperText='Please add any additional info to do with your order here'\n          sx={{ marginTop: '1rem' }}\n          onChange={handleInput}\n          value={additionalInfo}\n        />\n      </CheckoutItem>\n    </div>\n  );\n};\n\nAdditionalInfo.propTypes = {\n  additionalInfo: PropTypes.string.isRequired,\n  updateAdditionalInfo: PropTypes.func.isRequired\n};\n\nexport default AdditionalInfo;\n","import React, { useEffect, useState, useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CartProduct from '../Cart/CartProduct.js';\nimport SectionSpacer from '../../../../Components/SectionSpacer.js';\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport LoadingView from '../../../../Components/LoadingView.js';\nimport useScrollToTop from '../../../../hooks/useScrollToTop.js';\nimport { getCurrencySymbol } from '../../../../helpers/price.js';\nimport { getFreeDeliveryConstraints } from '../../../../helpers/offers.js';\nimport { CurrencyContext } from '../../../../context/CurrencyContext.js';\nimport { OrderContext } from '../../../../context/OrderContext.js';\n\n// Styled Components\nimport {\n  CartWrapper,\n  TotalsWrapper,\n  TotalsRows,\n  TotalsLine,\n  Spacer,\n  ProductListWrapper,\n  DeliveryPrice\n} from '../Cart/StyledComponents.js';\n\n// A view of all products that have been added to basket\nconst CartSummary = ({ willCustomerPickUpInStore, deliveryFormComplete, successfulOrder }) => {\n  useScrollToTop();\n\n  const { currency } = useContext(CurrencyContext);\n  const {\n    activeOrder,\n    subtotal,\n    deliveryPrice\n  } = useContext(OrderContext);\n\n  const [completedOrderTotals, setCompletedOrderTotals] = useState({});\n\n  const successfulPayment =\n    successfulOrder &&\n    successfulOrder.paymentStatus === 'successful' &&\n    successfulOrder.orderItems;\n  const failedPayment =\n    activeOrder &&\n    activeOrder.paymentStatus === 'failed';\n  const orderInCheckout =\n    activeOrder &&\n    activeOrder.orderItems &&\n    activeOrder.orderItems.length &&\n    activeOrder.paymentStatus === 'notAttempted';\n\n  let freeDelivery;\n  if (orderInCheckout || failedPayment) {\n    const freeDeliveryConstraints = getFreeDeliveryConstraints();\n    freeDelivery = !!(subtotal >= freeDeliveryConstraints[currency] || willCustomerPickUpInStore.current);\n  }\n\n  // Get the actual paid totals if an order is completed and in final Summary stage\n  const getCompletedOrderTotals = useCallback(() => {\n    if (successfulPayment) {\n      const { delivery } = successfulOrder;\n      const amountPaid = successfulOrder.stripeAmountPaid / 100;\n\n      setCompletedOrderTotals({\n        completedTotal: amountPaid,\n        completedSubtotal: amountPaid - delivery.price,\n        completedDeliveryPrice: delivery.price\n      });\n    }\n  }, [successfulOrder, successfulPayment]);\n\n  useEffect(() => getCompletedOrderTotals(), [getCompletedOrderTotals]);\n\n  //\n  const { completedTotal, completedSubtotal, completedDeliveryPrice } = completedOrderTotals;\n\n  // Get the delivery price to display\n  const getDeliveryPriceToDisplay = () => {\n    if ((deliveryFormComplete && orderInCheckout) || failedPayment) {\n      if (!deliveryPrice) {\n        return 'FREE';\n      } else {\n        return `${getCurrencySymbol(currency)}${deliveryPrice}`;\n      }\n    } else if (successfulPayment) {\n      if (!completedDeliveryPrice) {\n        return `${getCurrencySymbol(currency)}0`;\n      } else {\n        return `${getCurrencySymbol(currency)}${completedDeliveryPrice}`;\n      }\n    } else {\n      return '-';\n    }\n  };\n\n  const orderToDiplay = successfulOrder || activeOrder;\n\n  return (\n    <CartWrapper isMinimised>\n      <ProductListWrapper>\n        <Heading text='Order Summary' size='small' />\n        <SectionSpacer />\n        {\n          orderToDiplay && orderToDiplay.orderItems ? (\n            <>\n              {orderToDiplay.orderItems.map((item, index) => (\n                <CartProduct\n                  key={index}\n                  orderItem={item}\n                  isMinimised\n                />\n              )\n              )}\n              <TotalsWrapper>\n                <Spacer />\n                <TotalsRows>\n                  <TotalsLine>\n                    <h6>Subtotal</h6>\n                    <Spacer />\n                    <h6>{`${getCurrencySymbol(currency)}${completedSubtotal || subtotal}`}</h6>\n                  </TotalsLine>\n                  <TotalsLine>\n                    <h6>Delivery</h6>\n                    <Spacer />\n                    <DeliveryPrice showLineThrough={freeDelivery && deliveryPrice > 0}>\n                      {getDeliveryPriceToDisplay()}\n                    </DeliveryPrice>\n                  </TotalsLine>\n                  <TotalsLine>\n                    <h6><strong>Total</strong></h6>\n                    <Spacer />\n                    <h6>\n                      <strong>\n                        {getCurrencySymbol(currency)}\n                      </strong>\n                      {\n                        completedTotal\n                          ? <strong>{completedTotal}</strong>\n                          : freeDelivery\n                            ? <strong>{subtotal}</strong>\n                            : <strong>{subtotal + deliveryPrice}</strong>\n                      }\n                    </h6>\n                  </TotalsLine>\n                </TotalsRows>\n              </TotalsWrapper>\n            </>\n          ) : <LoadingView />\n        }\n      </ProductListWrapper>\n    </CartWrapper>\n  );\n};\n\nCartSummary.propTypes = {\n  willCustomerPickUpInStore: PropTypes.object,\n  deliveryFormComplete: PropTypes.bool,\n  successfulOrder: PropTypes.object\n};\n\nexport default CartSummary;\n","import React, { useState, useEffect, useContext, useCallback, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Elements } from '@stripe/react-stripe-js';\nimport uniqueString from 'unique-string';\n\nimport PaymentForm from './PaymentForm.js';\nimport DeliveryForm from './DeliveryForm.js';\nimport AdditionalInfo from './AdditionalInfo.js';\nimport CartSummary from './CartSummary.js';\nimport LoadingView from '../../../../Components/LoadingView.js';\nimport useDDMutation from '../../../../hooks/useDDMutation.js';\nimport mutations from '../../../../graphql/mutations.js';\nimport { RealmAppContext } from '../../../../realmApolloClient.js';\nimport { CurrencyContext } from '../../../../context/CurrencyContext.js';\nimport { OrderContext } from '../../../../context/OrderContext.js';\n\nimport { CheckoutFormsWrapper } from './StyledComponents.js';\n\nconst Checkout = ({ stripePromise }) => {\n  const app = useContext(RealmAppContext);\n  const { currency } = useContext(CurrencyContext);\n  const { activeOrder, setActiveOrder, setDeliveryCountry } = useContext(OrderContext);\n\n  const [paymentIntent, setPaymentIntent] = useState(null);\n  const [additionalInfo, setAdditionalInfo] = useState('');\n  const [deliveryDetails, setDeliveryDetails] = useState({\n    order_id: '',\n    delivery_id: `delivery-${uniqueString()}`,\n    address_id: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: null,\n    country: ''\n  });\n  const [checkoutCompletion, setCheckoutCompletion] = useState({\n    personalFormComplete: false,\n    deliveryFormComplete: false,\n    paymentFormComplete: false\n  });\n\n  const willCustomerPickUpInStore = useRef(false);\n  const history = useHistory();\n\n  const [updateOrder] = useDDMutation(mutations.UpdateOrder);\n\n  const { personalFormComplete, deliveryFormComplete, paymentFormComplete } = checkoutCompletion;\n  const checkoutFormsComplete = !!(personalFormComplete && deliveryFormComplete && paymentFormComplete);\n\n  //\n  const updateCheckoutCompletion = useCallback((update) => {\n    setCheckoutCompletion(prev => ({ ...prev, ...update }));\n  }, [setCheckoutCompletion]);\n\n  const updateDeliveryDetails = useCallback((update) => {\n    setDeliveryDetails(prev => ({ ...prev, ...update }));\n  }, [setDeliveryDetails]);\n\n  // Set the order ID or redirectback to cart if there is no available order\n  useEffect(() => {\n    if (activeOrder && Object.keys(activeOrder).length) {\n      updateDeliveryDetails({ order_id: activeOrder.order_id });\n    } else {\n      history.replace('/shop/cart');\n    }\n  }, [activeOrder, updateDeliveryDetails, history]);\n\n  useEffect(() => {\n    if (deliveryFormComplete && deliveryDetails.country && deliveryDetails.country !== '') {\n      setDeliveryCountry(deliveryDetails.country);\n    }\n  }, [deliveryFormComplete, deliveryDetails.country, setDeliveryCountry]);\n\n  // Payment Element styling\n  const paymentElementStyles = {\n    theme: 'flat',\n    variables: {\n      fontFamily: ' \"Gill Sans\", sans-serif',\n      fontLineHeight: '1.5',\n      borderRadius: '5px',\n      colorBackground: '#F6F8FA',\n      colorPrimaryText: '#262626'\n    },\n    rules: {\n      '.Block': {\n        backgroundColor: 'var(--colorBackground)',\n        boxShadow: 'none',\n        padding: '12px'\n      },\n      '.Input': {\n        padding: '12px'\n      },\n      '.Input:disabled, .Input--invalid:disabled': {\n        color: 'lightgray'\n      },\n      '.Tab': {\n        padding: '10px 12px 8px 12px',\n        border: 'none'\n      },\n      '.Tab:hover': {\n        border: 'none',\n        boxShadow: '0px 1px 1px rgba(0, 0, 0, 0.03), 0px 3px 7px rgba(18, 42, 66, 0.04)'\n      },\n      '.Tab--selected, .Tab--selected:focus, .Tab--selected:hover': {\n        border: 'none',\n        backgroundColor: '#fff',\n        boxShadow: '0 0 0 1.5px var(--colorPrimaryText), 0px 1px 1px rgba(0, 0, 0, 0.03), 0px 3px 7px rgba(18, 42, 66, 0.04)'\n      },\n      '.Label': {\n        fontWeight: '500'\n      }\n    }\n  };\n\n  // Get a new payment intent if one does not already exist, or retrieve the existing one if it does -->\n  useEffect(() => {\n    if (activeOrder && activeOrder.orderItems && !activeOrder.paymentIntentId) {\n      const createPaymentIntent = async () => {\n        const intent = await app.currentUser.functions.stripe_createPaymentIntent({ ...activeOrder, currency });\n        const { data } = await updateOrder({\n          variables: {\n            id: activeOrder._id,\n            paymentIntentId: intent.id\n          }\n        });\n        setPaymentIntent(intent);\n        setActiveOrder(data.updateOneOrder);\n      };\n      createPaymentIntent();\n    } else if (activeOrder && activeOrder.paymentIntentId) {\n      const retrievePaymentIntent = async () => {\n        const intent = await app.currentUser.functions.stripe_retrievePaymentIntent(activeOrder.paymentIntentId);\n        setPaymentIntent(intent);\n      };\n      retrievePaymentIntent();\n    }\n  }, [activeOrder, setActiveOrder, app.currentUser, updateOrder, currency]);\n\n  return (\n    paymentIntent ? (\n      <Elements\n        stripe={stripePromise}\n        options={{\n          clientSecret: paymentIntent.client_secret,\n          appearance: paymentElementStyles\n        }}\n      >\n        <CheckoutFormsWrapper>\n          <DeliveryForm\n            deliveryDetails={deliveryDetails}\n            updateDeliveryDetails={updateDeliveryDetails}\n            updateCheckoutCompletion={updateCheckoutCompletion}\n            willCustomerPickUpInStore={willCustomerPickUpInStore}\n          />\n          <AdditionalInfo\n            additionalInfo={additionalInfo}\n            updateAdditionalInfo={setAdditionalInfo}\n          />\n          <CartSummary\n            willCustomerPickUpInStore={willCustomerPickUpInStore}\n            deliveryFormComplete={deliveryFormComplete}\n          />\n          <PaymentForm\n            deliveryDetails={deliveryDetails}\n            additionalInfo={additionalInfo}\n            checkoutFormsComplete={checkoutFormsComplete}\n            updateCheckoutCompletion={updateCheckoutCompletion}\n            updateOrder={updateOrder}\n            paymentIntent={paymentIntent}\n            willCustomerPickUpInStore={willCustomerPickUpInStore}\n          />\n        </CheckoutFormsWrapper>\n      </Elements>\n    ) : (\n      <LoadingView message='Preparing your order for checkout' />\n    )\n  );\n};\n\nCheckout.propTypes = {\n  stripePromise: PropTypes.object.isRequired\n};\n\nexport default Checkout;\n","import React, { useEffect, useState, useContext, useCallback } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\n\nimport CartSummary from './CartSummary.js';\nimport ActionButton from '../../../../Components/ActionButton.js';\nimport LoadingView from '../../../../Components/LoadingView.js';\nimport useDDMutation from '../../../../hooks/useDDMutation.js';\nimport mutations from '../../../../graphql/mutations.js';\nimport { ORDER_BY_PAYMENT_INTENT } from '../../../../graphql/queries.js';\nimport { isAuthenticated } from '../../../../helpers/auth.js';\nimport { RealmAppContext } from '../../../../realmApolloClient.js';\nimport { CurrencyContext } from '../../../../context/CurrencyContext.js';\n\n// Styled Components\nimport { SummaryWrapper, SummaryItem, SummaryRow, Text } from './StyledComponents.js';\n\nconst Summary = () => {\n  const app = useContext(RealmAppContext);\n  const { setCurrency } = useContext(CurrencyContext);\n\n  const [successfulOrder, setSuccessfulOrder] = useState({});\n  const [paymentIntent, setPaymentIntent] = useState(null);\n  const [message, setMessage] = useState('');\n\n  const history = useHistory();\n\n  const [getSuccessfulOrder] = useLazyQuery(ORDER_BY_PAYMENT_INTENT, {\n    onCompleted: (data) => {\n      setSuccessfulOrder(data.order);\n    }\n  });\n\n  const [updateUser] = useDDMutation(mutations.UpdateUser);\n  const [updateUserAddresses] = useDDMutation(mutations.UpdateUserAddresses);\n  const [updateAddress] = useDDMutation(mutations.UpdateAddress);\n\n  const handleRegister = async (e, delivery) => {\n    e.preventDefault();\n    const { dbUser } = app.currentUser;\n\n    try {\n      const { data } = await updateUser({\n        variables: {\n          id: dbUser._id,\n          firstName: delivery.firstName,\n          lastName: delivery.lastName,\n          email: delivery.email,\n          phone: delivery.phone\n        }\n      });\n      let updatedUser = data.updateOneUser;\n\n      if (delivery && delivery.address) {\n        await updateAddress({\n          variables: {\n            address_id: delivery.address.address_id,\n            isDefault: true\n          }\n        });\n        const { data } = await updateUserAddresses({\n          variables: {\n            id: dbUser._id,\n            addresses: [delivery.address.address_id]\n          }\n        });\n        updatedUser = data.updateOneUser;\n      }\n\n      await app.setCurrentUser(user => ({\n        ...user,\n        dbUser: updatedUser\n      }));\n\n      // forward to register page to provide password etc\n      history.push({ pathname: '/login', state: { form: 'register' } });\n    } catch (err) {\n      throw new Error('Failed to update user with order details. Error:', err.message);\n    }\n  };\n\n  // Retrieve the payment intent object using the payment intent id provided by stripe in the url params\n  const { stripe_retrievePaymentIntent: retrievePaymentIntent } = app.currentUser.functions;\n  const getPaymentIntent = useCallback(async () => {\n    try {\n      const paymentIntentId = new URLSearchParams(window.location.search).get(\n        'payment_intent'\n      );\n      if (paymentIntentId) {\n        const intent = await retrievePaymentIntent(paymentIntentId);\n        setPaymentIntent(intent);\n        setCurrency(intent.currency.toUpperCase());\n        history.replace('/shop/checkout/summary');\n      } else if (!paymentIntent) {\n        history.replace('/shop/cart');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [history, retrievePaymentIntent, setCurrency, paymentIntent]);\n\n  useEffect(() => getPaymentIntent(), [getPaymentIntent]);\n\n  // Show a message to the customer based on their order status\n  useEffect(() => {\n    if (paymentIntent) {\n      switch (paymentIntent.status) {\n        case 'succeeded':\n          getSuccessfulOrder({ variables: { paymentIntentId: paymentIntent.id } });\n          setMessage('Thank you! Your payment was successful!');\n          break;\n        case 'processing':\n          setMessage('Your payment is processing.');\n          break;\n        case 'requires_payment_method':\n          setMessage('Your payment was not successful, please try again.');\n          break;\n        default: setMessage('Something unusual happened. Please contact Doves and Dandys to check the status of your payment.');\n          break;\n      }\n    }\n  }, [paymentIntent, getSuccessfulOrder]);\n\n  return (\n    <SummaryWrapper>\n      <SummaryItem>\n        <h4 style={{ margin: '1rem 0' }}>{message}</h4>\n      </SummaryItem>\n      {\n        paymentIntent && successfulOrder ? (\n          <>\n            {\n              isAuthenticated(app.currentUser) ? (\n                <SummaryItem>\n                  <Text>Click below to view the order in your account, or access any time by logging in</Text>\n                  <ActionButton\n                    text='view in my account'\n                    linkTo={{ pathname: '/my-account', state: { form: 'orders' } }}\n                    fullWidth\n                  />\n                </SummaryItem>\n              ) : (\n                <SummaryItem>\n                  <Text>Register an account to track your order and save your delivery details for next time</Text>\n                  <ActionButton\n                    text='Click to register!'\n                    onClick={(e) => handleRegister(e, successfulOrder.delivery)}\n                    fullWidth\n                  />\n                </SummaryItem>\n              )\n            }\n            <CartSummary successfulOrder={successfulOrder} />\n            {\n              paymentIntent.status === 'succeeded' &&\n                <SummaryItem>\n                  <SummaryRow>\n                    <Text>Order Reference Number:</Text>\n                    <strong>{successfulOrder.order_id}</strong>\n                  </SummaryRow>\n                  <SummaryRow>\n                    <Text>You will receive a confirmation of your payment by email to:</Text>\n                    <strong>{successfulOrder.delivery && successfulOrder.delivery.email}</strong>\n                  </SummaryRow>\n                </SummaryItem>\n            }\n          </>\n        ) : <LoadingView />\n      }\n    </SummaryWrapper>\n  );\n};\n\nexport default Summary;\n","import React, { useState, useContext } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Categories from './Categories.js';\nimport SubCategories from './SubCategories.js';\nimport Products from './Products.js';\nimport Product from './Product/Product.js';\nimport Cart from './Cart/Cart.js';\nimport Checkout from './Checkout/Checkout.js';\nimport Summary from './Checkout/Summary.js';\nimport SectionSpacer from '../../../Components/SectionSpacer.js';\nimport { RealmAppContext } from '../../../realmApolloClient.js';\nimport { CurrencyContext } from '../../../context/CurrencyContext.js';\nimport useScrollToTop from '../../../hooks/useScrollToTop.js';\n\n// Setup stripe\nimport { loadStripe } from '@stripe/stripe-js';\nconst stripePromise = loadStripe('pk_test_51JssHLK4OzaV2zFUvwSBOreLFJyb8YuJT6rZheUc4MkBtGeMj9ZrqNd3mQebbi9nnLcGkLjqDaCMFwtT5KyjuBmN00M3I7Ekl1');\n\nconst Shop = () => {\n  useScrollToTop();\n\n  const app = useContext(RealmAppContext);\n  const { currency } = useContext(CurrencyContext);\n\n  const [addingToCart, setAddingToCart] = useState({\n    isLoading: false,\n    productId: ''\n  });\n\n  // Handlers\n  const updateCurrentUser = async (user) => {\n    await app.setCurrentUser(prev => ({ ...prev, dbUser: user }));\n  };\n  const updateAddingToCart = (isLoading, productId) => {\n    setAddingToCart({\n      isLoading,\n      productId\n    });\n  };\n\n  // Accumulate add to cart props into single object\n  const props = {\n    addingToCart,\n    updateAddingToCart,\n    updateCurrentUser,\n    currentUser: app.currentUser,\n    currency\n  };\n\n  return (\n    app.currentUser && app.currentUser.dbUser ? (\n      <>\n        <Switch>\n          <Route exact path='/shop' component={Categories} />\n          <Route\n            exact\n            path='/shop/browse'\n            component={Categories}\n          />\n          <Route\n            exact\n            path='/shop/browse/:category'\n            component={SubCategories}\n          />\n          <Route\n            exact\n            path='/shop/browse/:category/:subCategory'\n            render={() => <Products {...props} />}\n          />\n          <Route\n            exact\n            path='/shop/browse/:category/:subCategory/:productId'\n            render={() => <Product {...props} />}\n          />\n          <Route\n            exact\n            path='/shop/cart'\n            component={Cart}\n          />\n          <Route\n            exact\n            path='/shop/checkout'\n            render={() => <Checkout stripePromise={stripePromise} />}\n          />\n          <Route\n            exact\n            path='/shop/checkout/summary'\n            component={Summary}\n          />\n        </Switch>\n        <SectionSpacer spaceBelow />\n      </>\n    ) : null\n  );\n};\n\nexport default Shop;\n","import styled from 'styled-components';\n\nexport const OuterWrapper = styled.div`\n  margin: 0 1rem 1rem;\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 1rem;\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 6px;\n  display: inline-flex;\n  height: calc(this.width * 1.84);\n  margin: auto;\n  max-width: 300px;\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const ImageInsideText = styled(Image)`\n  display: none;\n  @media (min-width: 768px) {\n    display: inline-flex;\n    float: right;\n    margin-left: 1rem;\n  }\n`;\n\nexport const TextWrapper = styled.div``;\n\nexport const TextSection = styled.p``;\n","import React from 'react';\n\nimport Heading from '../../../Components/Headings/Heading.js';\nimport useScrollToTop from '../../../hooks/useScrollToTop.js';\n\nimport {\n  OuterWrapper,\n  ContentWrapper,\n  Image,\n  ImageInsideText,\n  TextWrapper,\n  TextSection\n} from './styledComponents.js';\n\nconst AboutUs = () => {\n  useScrollToTop();\n  return (\n    <>\n      <OuterWrapper>\n        <Heading text='About Us' />\n        <ContentWrapper>\n          <TextWrapper>\n            <TextSection>Howdy Folks!</TextSection>\n            <TextSection>\n            Because of our passion and interest for the Old West and also being lucky enough to do Re-enactment for many years, we have enjoyed developing a broad range of products that reflect careful research into the different periods, locations, and people of The Old West.\n            </TextSection>\n            <ImageInsideText\n              src='/images/steve-and-di-about-us.JPG'\n              alt='The shop owners, Di and Steve in full Old-Western dress'\n            />\n            <TextSection>\n            From our own experience over the years, we found it very difficult to find exactly what we want. You can spend a lot of money on something for which you make do,  or it doesn't quite fit how you want it to, or wrong it’s the colour or  worse still, it isn't period correct. We also found it hard to get quality that would stand up to the demands of Re-enactment.\n            </TextSection>\n            <TextSection>\n            On western weekends and festivals, we'd look at different stores, trying to find period clothes and quality western leather products.  We found that only a few stalls would carry things we liked.  It was this hole in the market that inspired us to create Doves and Dandy’s Westernwear. We offer quality at what we believe are good prices. My wife Diane has been making quality clothing for the last thirty years.  I have used my knowledge of the Old West and developed leather working skills to work alongside her, so that we can offer quality clothing and leather products to a high standard.\n            </TextSection>\n            <TextSection>\n            When we make an item for a new or returning customer, we can't say how much enjoyment we get from the happiness expressed, when they try on or wear their new item we have made for the first time. Many of our commissions come from word of mouth and that is the best recommendation we can get.\n            </TextSection>\n            <TextSection>\n            We take great care and pride in every crafted item we create, using only the Best Quality Materials from the U.K and the USA. So, if you decide you want us to make something for you, it would be our pleasure, as we enjoy our craft.\n            </TextSection>\n            <TextSection>\n            We hope you enjoy browsing our website, and look forward to hearing from you.\n            </TextSection>\n            <TextSection>Happy Trails</TextSection>\n            <TextSection>Steve & Diane</TextSection>\n          </TextWrapper>\n          <Image\n            src='/images/steve-and-di-about-us.JPG'\n            alt='The shop owners, Di and Steve in full Old-Western dress'\n          />\n        </ContentWrapper>\n      </OuterWrapper>\n    </>\n  );\n};\n\nexport default AboutUs;\n","import styled from 'styled-components';\nimport { IoMail } from 'react-icons/io5';\nimport { MdPhone } from 'react-icons/md';\nimport { FaMapSigns } from 'react-icons/fa';\n\nimport colours from '../../../styles/colours.js';\n\nexport const OuterWrapper = styled.div`\n  margin: 0 0.5rem;\n`;\nexport const ContactDetailsWrapper = styled.div`\n  border-radius: 6px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  padding: 1rem;\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  width: 100%;\n  max-width: 1024px;\n  @media (min-width: 1024px) {\n    flex-direction: row;\n    justify-content: space-evenly;\n    margin: 0 auto 2rem;\n  }\n`;\nexport const DetailsItem = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\nexport const DetailsText = styled.p`\n  padding-left: 1rem;\n  padding-bottom: 0.25rem;\n  justify-self: flex-start;\n  overflow: hidden;\n`;\nexport const Spacer = styled.div`\n  flex: 1;\n`;\n\nexport const MailIcon = styled(IoMail)`\n  color: ${colours.dark};\n  margin-top: 0.25rem;\n`;\nexport const PhoneIcon = styled(MdPhone)`\n  color: ${colours.dark};\n  margin-top: 0.25rem;\n`;\nexport const AddressIcon = styled(FaMapSigns)`\n  color: ${colours.dark};\n  margin-top: 0.25rem;\n`;\n","import React from 'react';\n\nimport Heading from '../../../Components/Headings/Heading.js';\nimport useScrollToTop from '../../../hooks/useScrollToTop.js';\n\nimport {\n  OuterWrapper,\n  ContactDetailsWrapper,\n  DetailsItem,\n  DetailsText,\n  MailIcon,\n  PhoneIcon,\n  AddressIcon\n} from './styledComponents.js';\n\nconst ContactUs = () => {\n  useScrollToTop();\n  return (\n    <>\n      <OuterWrapper>\n        <Heading text='Contact Us' />\n        <div>\n          <p>\n          If you would like contact us, we would love to hear from you. Our preferred method of contact is by email with your request or question. We will get back to you as soon as possible.\n          </p>\n          <p>No appointment necessary!</p>\n          <br />\n        </div>\n        <ContactDetailsWrapper>\n          <div>\n            <DetailsItem>\n              <MailIcon />\n              <DetailsText>dovesanddandys@outlook.com</DetailsText>\n            </DetailsItem>\n          </div>\n          <DetailsItem>\n            <PhoneIcon />\n            <DetailsText>+44 7869 375541</DetailsText>\n          </DetailsItem>\n          <DetailsItem>\n            <AddressIcon />\n            <div>\n              <DetailsText>Doves & Dandys Westernwear</DetailsText>\n              <DetailsText>Unit 1, Old Town Hall Workshops</DetailsText>\n              <DetailsText>Beaufort Road</DetailsText>\n              <DetailsText>Llandrindod Wells</DetailsText>\n              <DetailsText>Powys</DetailsText>\n              <DetailsText>LD1 5DL</DetailsText>\n            </div>\n          </DetailsItem>\n        </ContactDetailsWrapper>\n      </OuterWrapper>\n    </>\n  );\n};\n\nexport default ContactUs;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Heading from '../../../../Components/Headings/Heading.js';\nimport DDTable from '../../../../Components/Table/DDTable.js';\n\nimport mensSizes from '../Sizes/mens.json';\nimport womensSizes from '../Sizes/womens.json';\nimport dressesAndEnsembles from '../Sizes/dressesAndEnsembles.json';\n\nconst SizesTable = styled.div`\n  margin-top: 1rem;\n`;\n\nconst SizingInfo = () => {\n  return (\n    <>\n      <Heading text='How To Measure' size='small' />\n      <div>\n        <Heading text='Chest and Bust Measurement' size='x-small' />\n        <p>\n          Measure around the fullest part  of the chest or bust, taking care to keep the tape under\n          the arms and around the shoulder blades. Read the measurement with the tape snug, not\n          tight. The number of inches is your correct size.\n        </p>\n      </div>\n      <div>\n        <Heading text='Waist Measurement' size='x-small' />\n        <p>\n        Measure around your waist, over your shirt (not over trousers) at your natural waist line. The\n        number of inches is your correct size.\n        </p>\n        <p>\n          <strong>Note:</strong> if you wear your trousers below your stomach, we will also require your\n          stomach measurement at it's largest point.\n        </p>\n      </div>\n      <div>\n        <Heading text='Seat/Hips Measurement' size='x-small' />\n        <p>\n          Stand with your heels together and measure around the fullest part. The number of inches is\n          your correct size.\n        </p>\n      </div>\n      <div>\n        <Heading text='Sleeve Length Measurement' size='x-small' />\n        <p>\n          Measure with your arm raised level with shoulder. Start the tape level with the raised arm at the\n          exact middle of the back at the neck between the shoulder blades. From the middle of your back,\n          around the elbow to one inch past the wrist joint. The number of inches is your sleeve length.\n        </p>\n      </div>\n      <div>\n        <Heading text='Neck Size Measurement' size='x-small' />\n        <p>\n          Measure around your neck at the point your shirt collar button would be. The number of inches shown\n          is your correct size.\n        </p>\n      </div>\n      <div>\n        <Heading text='Size Charts' size='small' />\n        <p>\n          <strong>PLEASE NOTE: </strong>The charts below are intended as a guide only. Garments vary\n          from one pattern to another.  The style and cut may affect the fit of a garment. The comfort\n          factor should also be considered. Some people wear their clothes looser or tighter than others.\n          If you are uncertain about which size to choose, please call and we'll be happy to help you.\n        </p>\n        <SizesTable>\n          <Heading text='Mens (Shirts)' size='x-small' />\n          <DDTable\n            rows={mensSizes}\n            columns={[\n              { name: 'size', label: 'Size' },\n              { name: 'chest', label: 'Chest' },\n              { name: 'neck', label: 'Neck' },\n              { name: 'sleeve', label: 'Sleeve' }\n            ]}\n            size='small'\n          />\n        </SizesTable>\n        <SizesTable>\n          <Heading text='Womens' size='x-small' />\n          <DDTable\n            rows={womensSizes}\n            columns={[\n              { name: 'size', label: 'Size' },\n              { name: 'bust', label: 'Bust' },\n              { name: 'waist', label: 'Waist' },\n              { name: 'hips', label: 'Hips' }\n            ]}\n            size='small'\n          />\n        </SizesTable>\n        <SizesTable>\n          <Heading text='Dresses and Ensembles' size='x-small' />\n          <DDTable\n            rows={dressesAndEnsembles}\n            columns={[\n              { name: 'size', label: 'Size' },\n              { name: 'sizeNum', label: 'Size No.' },\n              { name: 'bust', label: 'Bust' },\n              { name: 'waist', label: 'Waist' }\n            ]}\n            size='small'\n          />\n        </SizesTable>\n      </div>\n    </>\n  );\n};\n\nexport default SizingInfo;\n","import React from 'react';\n\nimport Heading from '../../../../Components/Headings/Heading.js';\n\nconst DeliveryInfo = () => (\n  <>\n    <div>\n      <Heading text='General Information' size='x-small' />\n      <p>\n          We accept orders and ship worldwide.  For all overseas orders, please e-mail your\n          interest and we will be happy to advise on cost for postage & packing.\n      </p>\n      <p>\n          We endeavour to find the best value method of postage, but will always make sure\n          your order is covered by insurance. This is usually through Royal Mail. If you\n          require a fast shipping method, we can provide you with UPS or FedEx prices on request.\n      </p>\n      <p>\n          Should you have any questions about the merchandise, please do not hesitate to call or\n          e-mail us. Our goal is to provide you with a personal service so that you are completely\n          happy with your purchase.\n      </p>\n    </div>\n    <div>\n      <Heading text='Delivery Times' size='x-small' />\n      <p>\n          Under normal circumstances, delivery times for the UK are as stated for each item.\n          Overseas orders are generally 4-6 weeks extra which will allow for a longer shipping period.\n      </p>\n      <p>\n          None of the delivery times are set in stone. We will endeavour to get your\n          order out to you as quickly as possible without compromising the quality of\n          our workmanship. Each item is made to order and delivery times will depend on\n          the back-log of work at that time. If you have any questions regarding\n          delivery please do not hesitate to contact us.\n      </p>\n\n    </div>\n    <div>\n      <Heading text='Damaged Items' size='x-small' />\n      <p>\n        Damages from shipping must be reported to us within 24 hours of receipt of your goods. Please\n        save all packing material for inspection. Third party damage is not covered by our guarantee. We\n        do not accept damage caused by the customer.\n      </p>\n    </div>\n  </>\n);\n\nexport default DeliveryInfo;\n","import React from 'react';\n\nimport Heading from '../../../../Components/Headings/Heading.js';\n\nconst PaymentInfo = () => (\n  <>\n    <div>\n      <Heading text='Card Payments' size='x-small' />\n      <p>\n        We accept credit and debit card payments on our online store in either GBP,\n        USD or EUR currencies - just make sure to select the correct option during payment.\n        If you would like to pay in a different currency, please contact us for a custom quote.\n      </p>\n    </div>\n    <div>\n      <Heading text='Other Payment Methods' size='x-small' />\n      <p>\n        We also accept PayPal as well as personal and bank cashier's checks made payable to\n        <strong> Doves & Dandy's</strong>. Funds must be cleared prior to goods being dispatched.\n        With deposit checks, work will not be scheduled until funds are cleared.\n      </p>\n    </div>\n  </>\n);\n\nexport default PaymentInfo;\n","import React from 'react';\n\nconst ReturnsPolicy = () => {\n  return (\n    <>\n      <p>\n        As our leather and clothing products are made specifically to fit you, we ask\n        that you take accurate measurements.  If when you have placed an order and discover\n        you have made a mistake, please contact us immediately. Assuming we have not started\n        your order, this will allow us to make any corrections necessary. Any corrective work may\n        be charged. All of our custom and bespoke items are made to order and not before. We\n        do not issue refunds on custom made items (Made to Measure), once work has commenced\n        on the order.\n      </p>\n      <p>\n        We guarantee the quality and high standards of our workmanship. If our\n        product is not fit for purpose because of customer error, no refunds will be given.\n        If our product is faulty or we have made an error, a full refund will be given.\n      </p>\n    </>\n  );\n};\n\nexport default ReturnsPolicy;\n","import React from 'react';\n\nconst PrivacyPolicy = () => (\n  <>\n    <p>\n      Doves & Dandy's Westernwear privacy policy is very simple.\n    </p>\n    <p>\n      We will never send you e-mails and/or mailings other than in connection with your\n      order, unless you have requested otherwise. When you order from us, all of your information\n      is kept strictly confidential and is shared with no one. We will never sell your name or mailing address.\n    </p>\n    <p>\n      Our customers are very important to us and we treat them as we expect to be treated by others.\n      We will sometimes call you with a question on your order, if you do not want to be contacted\n      by this method, please let us know. However, we would like to emphasize that it is the easiest\n      way for us to confirm a question on your custom order so there is no delay in its construction or\n      delivery. Many of our items are truly unique to the customer so to talk to you personally can\n      make sure that everything is correctly measured.\n    </p>\n  </>\n);\n\nexport default PrivacyPolicy;\n","import React from 'react';\n\nconst Faq = () => (\n  <>\n    <div>\n      <p><strong>Is it safe to order on line?</strong></p>\n      <p>\n        Yes, Doves and Dandy's is an SSL secure site. We use Stripe to process our online\n        payments which is an industry standard and extremely secure.  We don't save your\n        card details anywhere.\n      </p>\n    </div>\n    {/*\n      <div>\n        <p><strong>How do I place an order?</strong></p>\n        <p>\n          If the item is in stock, simply add to your cart and complete the checkout process\n        </p>\n      </div>\n    */}\n    <div>\n      <p><strong>Can I give my preferences when ordering?</strong></p>\n      <p>\n        Yes, when you are going through the checkout procedure, there is an information box\n        for you to insert your request here. So you don't need to send a separate message.\n      </p>\n    </div>\n    <div>\n      <p><strong>How do I know what measurements are needed for the item I have purchased?</strong></p>\n      <p>\n        Once your order is placed, we will send you an easy measurement chart and a list of the measurements\n        required for your item.\n      </p>\n    </div>\n    <div>\n      <p><strong>Can I order if I don't live in the UK?</strong></p>\n      <p>\n        Yes you can. We have sent our products all over the world.  Just let us know where it is going as this\n        is a slightly different procedure. If you have found an item you would like to order, please contact us\n        by email.  We can work out a price including shipping and you can pay via Paypal.\n      </p>\n    </div>\n    <div>\n      <p><strong>Can I make a part payment?</strong></p>\n      <p>\n        You can make a part payment by arrangement prior to ordering. This is done by using a PayPal invoice.\n        The deposit amount is a minimum of 50%. The balance will to paid before dispatch.\n      </p>\n    </div>\n    <div>\n      <p><strong>What happens if my measurements are wrong?</strong></p>\n      <p>\n        Contact us immediately if you know you have made a mistake. We work with the information and measurements\n        provided by you, the customer. If the information is wrong, this is the customers responsibility and any\n        alterations may be charged.\n      </p>\n    </div>\n  </>\n);\n\nexport default Faq;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Typography\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\nimport SizingInfo from './Components/SizingInfo.js';\nimport DeliveryInfo from './Components/DeliveryInfo.js';\nimport PaymentInfo from './Components/PaymentInfo.js';\nimport ReturnsPolicy from './Components/ReturnsPolicy.js';\nimport PrivacyPolicy from './Components/PrivacyPolicy.js';\nimport Faq from './Components/Faq.js';\n\nconst AccordionWrapper = styled.div`\n  margin: 0 1rem;\n`;\n\nconst CustomerInfo = () => {\n  const [expanded, setExpanded] = useState(false);\n  const { state } = useLocation();\n\n  const handleChange = (panel) => (_, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  useEffect(() => {\n    if (state && state.type) {\n      setExpanded(state.type);\n\n      const { offsetTop } = document.getElementById(state.type);\n      window.scroll(0, (offsetTop - 8));\n    }\n  }, [state]);\n\n  const accordionItems = [\n    { id: 'sizing-info', title: 'Sizing Info', component: SizingInfo },\n    { id: 'payment-info', title: 'Payment Info', component: PaymentInfo },\n    { id: 'delivery-info', title: 'Delivery Info', component: DeliveryInfo },\n    { id: 'returns-policy', title: 'Returns Policy', component: ReturnsPolicy },\n    { id: 'privacy-policy', title: 'Privacy Policy', component: PrivacyPolicy },\n    { id: 'faq', title: 'FAQ\\'s', component: Faq }\n  ];\n\n  return (\n    <>\n      <AccordionWrapper>\n        {\n          accordionItems.map((item, index) => {\n            const Component = item.component;\n            return (\n              <div key={index} id={item.id}>\n                <Accordion\n                  expanded={expanded === item.id}\n                  onChange={handleChange(item.id)}\n                  sx={{\n                    backgroundColor: 'transparent',\n                    padding: '1rem',\n                    margin: '1rem'\n                  }}\n                >\n                  <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls={item.id}\n                    id={item.id}\n                  >\n                    <Typography\n                      sx={{\n                        width: '150px'\n                      }}\n                    >\n                      {item.title}\n                    </Typography>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Component />\n                  </AccordionDetails>\n                </Accordion>\n              </div>\n            );\n          })\n        }\n      </AccordionWrapper>\n    </>\n  );\n};\n\nexport default CustomerInfo;\n","import styled from 'styled-components';\nimport ResponsiveTileWrapper from '../../../Components/Tiles/ResponsiveTileWrapper.js';\n\nexport const Wrapper = styled(ResponsiveTileWrapper)`\n  height: auto;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n  width: ${props => props.width && props.width}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PersonalDetailsForm from '../../../Components/AddressForms/PersonalDetailsForm.js';\nimport mutations from '../../../graphql/mutations.js';\nimport useDDMutation from '../../../hooks/useDDMutation.js';\n\n// Styled components\nimport { Wrapper } from './StyledComponents.js';\n\nconst PersonalDetails = ({ dbUser, updateDbUser }) => {\n  const [updateUser] = useDDMutation(mutations.UpdateUser);\n\n  const handleValidDetails = async (fields) => {\n    const { data } = await updateUser({\n      variables: {\n        id: dbUser._id,\n        ...fields\n      }\n    });\n    await updateDbUser(data.updateOneUser);\n  };\n\n  return (\n    <Wrapper>\n      <PersonalDetailsForm\n        dbUser={dbUser}\n        onValidDetails={handleValidDetails}\n        buttonText='confirm details'\n        successMessage='Details saved'\n      />\n    </Wrapper>\n  );\n};\n\nPersonalDetails.propTypes = {\n  dbUser: PropTypes.object.isRequired,\n  updateDbUser: PropTypes.func.isRequired\n};\n\nexport default PersonalDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AddressFormBasic from '../../../Components/AddressForms/AddressFormBasic.js';\nimport mutations from '../../../graphql/mutations.js';\nimport useDDMutation from '../../../hooks/useDDMutation.js';\nimport { getDefaultAddress } from '../../../helpers/address.js';\n\n// Styled components\nimport { Wrapper } from './StyledComponents.js';\n\nconst DeliveryDetails = ({ dbUser, updateDbUser }) => {\n  const [createAddress] = useDDMutation(mutations.CreateAddress);\n  const [updateAddress] = useDDMutation(mutations.UpdateAddress);\n  const [updateUserAddresses] = useDDMutation(mutations.UpdateUserAddresses);\n\n  const onAddressValid = async (fields) => {\n    try {\n      if (!dbUser.addresses || !dbUser.addresses.length) {\n        const { data: addressData } = await createAddress({\n          variables: {\n            ...fields,\n            isDefault: !(dbUser.addresses && dbUser.addresses.length)\n          }\n        });\n        const { data: userData } = await updateUserAddresses({\n          variables: {\n            id: dbUser._id,\n            addresses: [addressData.insertOneAddress.address_id]\n          }\n        });\n\n        await updateDbUser(userData.updateOneUser);\n      } else {\n        const { data } = await updateAddress({\n          variables: fields\n        });\n        const update = data.updateOneAddress;\n        const addressListClone = [...dbUser.addresses];\n        const addressListLessUpdated = addressListClone.filter(address => address.address_id !== update.address_id);\n        const updatedAddressList = [...addressListLessUpdated, update];\n\n        await updateDbUser({\n          ...dbUser,\n          addresses: updatedAddressList\n        });\n      }\n    } catch (err) {\n      throw new Error('Failed to save address. Error:', err);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <AddressFormBasic\n        onAddressValid={onAddressValid}\n        buttonText='save address'\n        successMessage='Address saved'\n        defaultAddress={getDefaultAddress(dbUser.addresses)}\n      />\n    </Wrapper>\n  );\n};\n\nDeliveryDetails.propTypes = {\n  dbUser: PropTypes.object.isRequired\n};\n\nexport default DeliveryDetails;\n","import styled from 'styled-components';\nimport colours from '../../../styles/colours.js';\n\nexport const OuterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  border-radius: 6px;\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto 1rem;\n  overflow: hidden;\n`;\nexport const OrderItems = styled.div`\n  display: flex:\n  flex-direction: column;\n  gap: 1rem;\n`;\nexport const OrderItem = styled.div`\n  display: flex;\n  gap: 1rem;\n  justify-content: flex-start;\n  align-items: flex-start;\n  min-height: 100px;\n  padding: 0.5rem;\n  border-top: 0.1px solid ${colours.dark};\n`;\nexport const ItemInfo = styled.div`\n  overflow: hidden;\n`;\nexport const Info = styled.p`\n  margin: 0 0 0.5rem;\n`;\nexport const OrderStatus = styled(OrderItem)`\n  border: none;\n  justify-content: space-between;\n  height: auto;\n  @media (max-width: 768px) {\n    flex-direction: column-reverse;\n  }\n`;\nexport const CurrentStatusWrapper = styled.div`\n  display: flex;\n  gap: 1rem;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nexport const CurrentStatus = styled.div`\n  border-radius: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.75rem;\n  background-color: ${colours.green};\n  color: #fff;\n  padding: 1.5rem 0;\n  overflow: hidden;\n    width: 340px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nexport const Image = styled.img`\n  border-radius: 6px;\n  height: 100px;\n  width: auto;\n`;\nexport const DataLoading = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex: 1;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport ProgressSpinner from '../../ProgressSpinner.js';\nimport { getDateFromUTCString } from '../../../helpers/global.js';\nimport { convertStripeAmountToPrice, getCurrencySymbol } from '../../../helpers/price.js';\nimport useBreakpoints from '../../../hooks/useBreakpoints.js';\n\nimport {\n  OuterContainer,\n  OrderItems,\n  OrderItem,\n  OrderStatus,\n  ItemInfo,\n  Info,\n  CurrentStatus,\n  CurrentStatusWrapper,\n  Image,\n  DataLoading\n} from './styledComponents.js';\n\nconst OrderTile = ({ order }) => {\n  const { isMd, isLg } = useBreakpoints();\n  return (\n    <OuterContainer>\n      <OrderStatus>\n        <div>\n          <Info>Reference: <strong>{order.order_id}</strong></Info>\n          <Info>\n            Amount:\n            <strong>\n              {` ${getCurrencySymbol(order.currency)}${convertStripeAmountToPrice(order.stripeAmountPaid)}`}\n            </strong>\n          </Info>\n          <Info>Paid: <strong>{getDateFromUTCString(order.datePaid)}</strong></Info>\n          <Info>Order Accepted: <strong>{getDateFromUTCString(order.dateAccepted)}</strong></Info>\n          <Info>Dispatched: <strong>{getDateFromUTCString(order.dateDispatched)}</strong></Info>\n        </div>\n        <CurrentStatusWrapper>\n          {\n            (isMd || isLg) && <Info>Current Status:</Info>\n          }\n          <CurrentStatus>{_.startCase(order.orderStatus)}</CurrentStatus>\n        </CurrentStatusWrapper>\n      </OrderStatus>\n      <OrderItems>\n        {\n          order && order.orderItems ? (\n            order.orderItems.map((item) => (\n              <OrderItem key={item._id}>\n                <Image src={item.product.images[0]} alt={item.product.name} />\n                <ItemInfo>\n                  <Info>{item.product.name}</Info>\n                  <Info>Quantity: {item.quantity}</Info>\n                </ItemInfo>\n              </OrderItem>\n            ))\n          ) : (\n            <DataLoading>\n              <ProgressSpinner size='3rem' colour='blue' />\n            </DataLoading>\n          )\n        }\n      </OrderItems>\n    </OuterContainer>\n  );\n};\n\nOrderTile.propTypes = {\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderTile;\n","import React from 'react';\n\nimport OrderTile from '../../../Components/Tiles/OrderTile/OrderTile.js';\n\nimport { Wrapper } from './StyledComponents.js';\n\nconst MyOrders = ({ dbUser }) => {\n  const orders = dbUser.orders && dbUser.orders\n    .filter(order => (\n      order.paymentStatus === 'successful' || order.paymentStatus === 'refunded')\n    ).sort((a, b) => (\n      b.datePaid - a.datePaid)\n    );\n\n  return (\n    <Wrapper width='100%'>\n      {\n        orders\n          ? orders.map(order => <OrderTile key={order._id} order={order} />)\n          : 'no orders'\n      }\n    </Wrapper>\n  );\n};\n\nexport default MyOrders;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs, Tab, Box } from '@mui/material';\nimport uniqueString from 'unique-string';\n\nimport colours from '../styles/colours.js';\nimport fonts from '../styles/fonts.js';\nimport useBreakpoints from '../hooks/useBreakpoints.js';\n\nconst TabPanel = ({ children, value, index, ...other }) => {\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`tabpanel-${index}`}\n      aria-labelledby={`tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n};\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired\n};\n\nconst TabMenu = ({ items, initialItem }) => {\n  const values = {\n    personal: 0,\n    delivery: 1,\n    orders: 2\n  };\n  const [value, setValue] = useState(values[initialItem] || 0);\n  const { isXs, isSm } = useBreakpoints();\n\n  const handleChange = (_, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label='my account selection'\n          textColor='inherit'\n          variant={isXs || isSm ? 'fullWidth' : null}\n          centered={!!(!isXs && !isSm)}\n          sx={{\n            'MuiTabs-root': {\n              justifyContent: 'center',\n              fontFamily: fonts.standard\n            },\n            '.MuiTabs-indicator': {\n              backgroundColor: colours.dark\n            },\n            '.MuiTabs-centered': {\n              gap: '3rem'\n            }\n          }}\n        >\n          {\n            items.map(item => <Tab key={uniqueString()} label={item.label} />)\n          }\n        </Tabs>\n      </Box>\n      {\n        items.map((item, index) =>\n          <TabPanel key={uniqueString()} value={value} index={index}>\n            {item.component}\n          </TabPanel>\n        )\n      }\n    </Box>\n  );\n};\n\nTabMenu.propTypes = {\n  items: PropTypes.array.isRequired,\n  initialItem: PropTypes.string\n};\n\nexport default TabMenu;\n","import React, { useContext } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport PersonalDetails from './PersonalDetails.js';\nimport DeliveryDetails from './DeliveryDetails.js';\nimport MyOrders from './MyOrders.js';\nimport TabMenu from '../../../Components/TabMenu.js';\nimport { RealmAppContext } from '../../../realmApolloClient.js';\n\nconst MyAccount = () => {\n  const app = useContext(RealmAppContext);\n  const { dbUser } = app.currentUser;\n\n  const { state } = useLocation();\n\n  const updateDbUser = async (updatedUser) => {\n    await app.setCurrentUser(user => ({\n      ...user,\n      dbUser: updatedUser\n    }));\n  };\n\n  const sections = [\n    {\n      name: 'personal',\n      label: 'Personal Details',\n      component: <PersonalDetails dbUser={dbUser} updateDbUser={updateDbUser} />\n    },\n    {\n      name: 'delivery',\n      label: 'Delivery Details',\n      component: <DeliveryDetails dbUser={dbUser} updateDbUser={updateDbUser} />\n    },\n    {\n      name: 'orders',\n      label: 'My Orders',\n      component: <MyOrders dbUser={dbUser} />\n    }\n  ];\n\n  return (\n    <>\n      <div style={{ minHeight: '500px' }}>\n        <TabMenu items={sections} initialItem={state && (state.form || null)} />\n      </div>\n    </>\n  );\n};\n\nexport default MyAccount;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport uniqueString from 'unique-string';\nimport styled from 'styled-components';\n\nimport ActionButton from '../../../Components/ActionButton.js';\nimport TextInput from '../../../Components/Forms/TextInput.js';\nimport UserMessage from '../../../Components/UserMessage.js';\nimport { RealmAppContext } from '../../../realmApolloClient.js';\nimport { registerEmailPassword, getLoginError, isAuthenticated } from '../../../helpers/auth.js';\nimport mutations from '../../../graphql/mutations.js';\nimport useDDMutation from '../../../hooks/useDDMutation.js';\nimport colours from '../../../styles/colours.js';\n\n// Styled components\nconst LoginWrapper = styled.div`\n  border-radius: 5px;\n  box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  padding: 1rem;\n  margin: 1rem auto;\n  -webkit-box-shadow: -3px -1px 10px 2px rgba(0,0,0,0.2);\n  @media (min-width: 1024px) {\n    width: 40%;\n  }\n`;\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 1rem;\n`;\n\nconst Login = ({ form }) => {\n  const app = useContext(RealmAppContext);\n  const { dbUser } = app.currentUser;\n\n  const [formType, setFormType] = useState(form || 'login');\n  const [formFields, setFormFields] = useState({\n    email: dbUser && dbUser.email ? dbUser.email : '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [errorMessage, setErrorMessage] = useState();\n\n  const [addUser] = useDDMutation(mutations.AddUser);\n  const [addUserWithOrders] = useDDMutation(mutations.AddUserWithOrders);\n  const [updateUserAddresses] = useDDMutation(mutations.UpdateUserAddresses);\n  const [deleteUser] = useDDMutation(mutations.DeleteUser);\n\n  const history = useHistory();\n\n  // Event handlers\n  const handleFormChange = (e) => {\n    setFormFields(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    const { error } = await app.logIn(formFields.email, formFields.password);\n\n    if (!error) {\n      history.push('/my-account');\n    } else {\n      const message = getLoginError(error);\n      setErrorMessage(message);\n    }\n  };\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    const { email, password, confirmPassword } = formFields;\n\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords don\\'t match');\n      return;\n    }\n\n    try {\n      const { error: registerError } = await registerEmailPassword(app, email, password);\n\n      if (!registerError) {\n        // If app.currentUser has been created as a guest user, save relevant details\n        // to be duplicated into new user object\n        const guestUser =\n            dbUser.orders && dbUser.orders.length &&\n              {\n                _id: dbUser._id,\n                user_id: dbUser.user_id,\n                firstName: dbUser.firstName || '',\n                lastName: dbUser.lastName || '',\n                phone: dbUser.phone || '',\n                orders: dbUser.orders.map(order => order.order_id),\n                addresses: dbUser.addresses.map(address => address.address_id)\n              };\n        // log user in, this will complete registration and create a new permenant user ID\n        const { user, error: loginError } = await app.logIn(email, password);\n\n        if (loginError) {\n          const message = getLoginError(loginError);\n          setErrorMessage(message);\n          return;\n        }\n\n        // create new user, keep existing data if it exists\n        const standardVars = {\n          _id: user.id,\n          user_id: guestUser ? guestUser.user_id : `user-${await uniqueString()}`,\n          email: email,\n          type: 'customer'\n        };\n\n        let guestUserVars;\n        if (guestUser) {\n          console.log('is guest user');\n          guestUserVars = {\n            ...standardVars,\n            firstName: guestUser.firstName,\n            lastName: guestUser.lastName,\n            phone: guestUser.phone\n          };\n        }\n\n        let newUser;\n\n        if (guestUser) {\n          const { data: addUserWithOrdersData } = await addUserWithOrders({\n            variables: {\n              ...guestUserVars, orders: guestUser.orders\n            }\n          });\n\n          if (guestUser.addresses && guestUser.addresses.length) {\n            const { data: updateUserAddressesData } = await updateUserAddresses({\n              variables: {\n                id: user.id,\n                addresses: guestUser.addresses\n              }\n            });\n\n            newUser = updateUserAddressesData.updateOneUser;\n          } else {\n            newUser = addUserWithOrdersData.insertOneUser;\n          }\n\n          // delete the old guest user from db & anon user from realm\n          await deleteUser({ variables: { id: guestUser._id } });\n        } else {\n          const { data: addUserData } = await addUser({ variables: standardVars });\n          newUser = addUserData.insertOneUser;\n        }\n\n        await app.setCurrentUser(user => ({\n          ...user,\n          dbUser: newUser\n        }));\n        history.push('/my-account');\n      } else {\n        setErrorMessage(registerError);\n      }\n    } catch (err) {\n      throw new Error('Failed to register user. Error:', err.message);\n    }\n  };\n\n  const locationStateUsed = useRef(false);\n  useEffect(() => {\n    if (isAuthenticated(app.currentUser)) {\n      history.replace('/my-account');\n    }\n    if (form && formType !== form && locationStateUsed.current === false) {\n      setFormType(form);\n      locationStateUsed.current = true;\n    }\n  }, [formType, form, app.currentUser, history]);\n\n  return (\n    <LoginWrapper>\n      <div>{formType === 'login' ? 'Login to your account' : 'Register an account'}</div>\n      <div>\n        <TextInput\n          autoFocus\n          label='Email Address'\n          name='email'\n          type='email'\n          value={formFields.email}\n          handleChange={handleFormChange}\n        />\n        <TextInput\n          label='Password'\n          name='password'\n          type='password'\n          value={formFields.password}\n          handleChange={handleFormChange}\n        />\n        {\n          formType === 'register' &&\n            <TextInput\n              label='Confirm password'\n              name='confirmPassword'\n              type='password'\n              value={formFields.confirmPassword}\n              handleChange={handleFormChange}\n            />\n        }\n      </div>\n      {\n        formType === 'login' ? (\n          <ButtonsWrapper>\n            <ActionButton\n              text='register new account'\n              onClick={() => setFormType('register')}\n            />\n            <ActionButton\n              text='login'\n              onClick={handleLogin}\n              customStyles={{ borderWidth: '0.15rem', borderColor: colours.dark }}\n            />\n          </ButtonsWrapper>\n        ) : (\n          <ButtonsWrapper>\n            <ActionButton\n              text='login to your account'\n              onClick={() => setFormType('login')}\n            />\n            <ActionButton\n              text='register'\n              onClick={handleRegister}\n              customStyles={{ borderWidth: '0.15rem', borderColor: colours.dark }}\n            />\n          </ButtonsWrapper>\n        )\n      }\n      {errorMessage && <UserMessage text={errorMessage} type='error' />}\n    </LoginWrapper>\n  );\n};\n\nLogin.propTypes = {\n  form: PropTypes.string\n};\n\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error404 = ({ requestedURL }) => {\n  return (\n    <>\n      <h1>Sorry!</h1>\n      <p>{requestedURL ? `${requestedURL} doesn't exist.` : 'This page doesn\\'t exist.'}</p>\n    </>\n  );\n};\n\nError404.propTypes = {\n  requestedURL: PropTypes.string\n};\n\nexport default Error404;\n","import React, { useState, useContext } from 'react';\nimport { Button, Menu, MenuItem, MenuList } from '@mui/material';\nimport { AiOutlinePound, AiOutlineDollar, AiOutlineEuro, AiFillCaretDown, AiFillCaretUp } from 'react-icons/ai';\n\nimport colours from '../../styles/colours.js';\nimport { CurrencyContext } from '../../context/CurrencyContext.js';\n\nconst CurrencySelection = () => {\n  const { currency, setCurrency } = useContext(CurrencyContext);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const open = Boolean(anchorEl);\n\n  const handleOpenMenu = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n  const handleCurrencySelection = (e, selection) => {\n    e.preventDefault();\n    setCurrency(selection);\n    handleCloseMenu();\n  };\n\n  const menuStyles = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    gap: '0.5rem',\n    padding: '0.75rem'\n  };\n\n  const icons = {\n    GBP: <AiOutlinePound size={30} style={{ color: colours.dark }} />,\n    USD: <AiOutlineDollar size={30} style={{ color: colours.dark }} />,\n    EUR: <AiOutlineEuro size={30} style={{ color: colours.dark }} />\n  };\n\n  return (\n    <>\n      <Button\n        id='currency-selection'\n        aria-controls={open ? 'currency-selection' : undefined}\n        aria-haspopup='true'\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleOpenMenu}\n        endIcon={open\n          ? <AiFillCaretUp size={15} style={{ color: colours.dark }} />\n          : <AiFillCaretDown size={15} style={{ color: colours.dark }} />}\n      >\n        {icons[currency]}\n      </Button>\n      <Menu\n        id='currency-selection'\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleCloseMenu}\n        MenuListProps={{\n          'aria-labelledby': 'currency-selection-button'\n        }}\n        sx={{\n          '& .MuiPaper-root': {\n            backgroundColor: colours.light,\n            borderRadius: '8px'\n          }\n        }}\n      >\n        <MenuList sx={menuStyles}>\n          <MenuItem onClick={(e) => handleCurrencySelection(e, 'GBP')}>{icons.GBP}&nbsp;British Pounds</MenuItem>\n          <MenuItem onClick={(e) => handleCurrencySelection(e, 'USD')}>{icons.USD}&nbsp;US Dollars</MenuItem>\n          <MenuItem onClick={(e) => handleCurrencySelection(e, 'EUR')}>{icons.EUR}&nbsp;Euros</MenuItem>\n        </MenuList>\n      </Menu>\n    </>\n  );\n};\n\nexport default CurrencySelection;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FaBars } from 'react-icons/fa';\nimport { IoPersonCircleOutline } from 'react-icons/io5';\n\nimport colours from '../../styles/colours.js';\nimport fonts from '../../styles/fonts.js';\n\nconst { light, dark } = colours;\nconst { fancyHeading, normalHeading } = fonts;\n\nexport const NavbarContainer = styled.header`\n  background: ${light};\n  width: 100%;\n  height: 70px;\n`;\n\nexport const NavbarNavigation = styled.nav`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  padding: 0 0.5rem;\n`;\n\nexport const NavbarBrand = styled.h1`\n  font-family: ${fancyHeading};\n  font-size: 1.5rem;\n  margin-bottom: 0;\n  :hover {\n    color: ${dark};\n  }\n`;\n\nexport const NavbarHomeLink = styled(Link)`\n  color: ${dark};\n  :hover {\n    color: ${dark};\n  }\n`;\n\nexport const NavbarSpacer = styled.div`\n  flex: 1;\n`;\n\nexport const NavbarLinksContainer = styled.div`\n  display: none;\n\n  @media (min-width: 1180px) {\n    display: block;\n  }\n`;\n\nexport const NavbarLinkList = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  align-items: center;\n`;\n\nexport const NavbarLinkItem = styled.li`\n  color: ${dark};\n  font-size: 1.15rem;\n  padding: 0.5rem;\n`;\n\nexport const NavbarLink = styled(Link)`\n  color: ${dark};\n  font-family: ${normalHeading};\n  text-decoration: none;\n  :active,\n  :hover {\n    color: ${dark};\n  }\n`;\n\nexport const BrowseShop = styled(NavbarLinkItem)`\n  border: 0.2px solid ${dark};\n  border-radius: 6px;\n  -webkit-box-shadow: -3px -1px 5px 2px rgba(0,0,0,0.1);\n  box-shadow: -3px -1px 5px 2px rgba(0,0,0,0.1);\n  :active,\n  :hover {\n    border: 2px solid ${dark};\n    cursor: pointer;\n  }\n  transition: border 0.1s ease-in-out;\n  width: 140px;\n  text-align: center;\n`;\nexport const BrowseShopLink = styled(NavbarLink)`\n  :active,\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nexport const NavbarCart = styled.span`\n  font-size: 1.15rem;\n  padding-left: 4rem;\n`;\n\nexport const NavbarToggleIcon = styled(FaBars)`\n  color: ${dark};\n  display: block;\n  :hover,\n  :active {\n    cursor: pointer;\n  }\n`;\n\nexport const LoginIcon = styled(IoPersonCircleOutline)`\n  margin-left: 1.5rem;\n  color: ${dark};\n  :hover,\n  :active {\n    cursor: pointer;\n  }\n`;\n\nexport const SmallScreenOptions = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  margin-right: 0.5rem;\n  @media (min-width: 1180px) {\n    display: none;\n  }\n`;\n","import React, { useState, useContext } from 'react';\nimport { Button, Menu, MenuItem, MenuList } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport { AiFillCaretDown, AiFillCaretUp } from 'react-icons/ai';\n\nimport { LoginIcon } from './NavbarElements';\nimport { RealmAppContext } from '../../realmApolloClient.js';\nimport { isAuthenticated, isAdmin } from '../../helpers/auth.js';\nimport colours from '../../styles/colours.js';\n\nconst MyAccountMenu = () => {\n  const app = useContext(RealmAppContext);\n  const history = useHistory();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleOpenMenu = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n  const handleMenuSelection = async (e, selection) => {\n    e.preventDefault();\n    switch (selection) {\n      case 'logout':\n        await app.logOut();\n        handleCloseMenu();\n        history.push('/');\n        break;\n      case 'login':\n      case 'register':\n        handleCloseMenu();\n        history.push({\n          pathname: '/login',\n          state: { form: selection }\n        });\n        break;\n      default:\n        handleCloseMenu();\n        history.push(`/${selection}`);\n    }\n  };\n\n  const menuStyles = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    gap: '0.5rem'\n  };\n\n  return (\n    <div>\n      <Button\n        id='my-account-button'\n        aria-controls={open ? 'my-account-menu' : undefined}\n        aria-haspopup='true'\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleOpenMenu}\n        endIcon={open\n          ? <AiFillCaretUp size={15} style={{ color: colours.dark }} />\n          : <AiFillCaretDown size={15} style={{ color: colours.dark }} />}\n      >\n        <LoginIcon size={30} />\n      </Button>\n      <Menu\n        id='my-account-menu'\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleCloseMenu}\n        MenuListProps={{\n          'aria-labelledby': 'my-account-button'\n        }}\n        sx={{\n          '& .MuiPaper-root': {\n            backgroundColor: colours.light,\n            borderRadius: '8px',\n            padding: '0.5rem 1rem'\n          }\n        }}\n      >\n        {\n          app.currentUser && isAuthenticated(app.currentUser) ? (\n            <MenuList sx={menuStyles}>\n              <MenuItem>{app.currentUser.dbUser.email}</MenuItem>\n              <MenuItem divider />\n              {\n                isAdmin(app.currentUser) &&\n                  <MenuItem onClick={(e) => handleMenuSelection(e, 'admin')}>Admin Dashboard</MenuItem>\n              }\n              <MenuItem onClick={(e) => handleMenuSelection(e, 'my-account')}>My Account</MenuItem>\n              <MenuItem onClick={(e) => handleMenuSelection(e, 'logout')}>Logout</MenuItem>\n            </MenuList>\n          ) : (\n            <MenuList sx={menuStyles}>\n              <MenuItem onClick={(e) => handleMenuSelection(e, 'login')}>Login</MenuItem>\n              <MenuItem onClick={(e) => handleMenuSelection(e, 'register')}>Register</MenuItem>\n            </MenuList>\n          )\n        }\n      </Menu>\n    </div>\n  );\n};\n\nexport default MyAccountMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IoCartOutline } from 'react-icons/io5';\n\nimport CurrencySelection from './CurrencySelection.js';\nimport MyAccountMenu from './MyAccountMenu.js';\nimport useBreakpoints from '../../hooks/useBreakpoints.js';\n\nimport {\n  NavbarContainer,\n  NavbarNavigation,\n  NavbarBrand,\n  NavbarCart,\n  NavbarHomeLink,\n  NavbarSpacer,\n  NavbarLinksContainer,\n  NavbarLinkList,\n  NavbarLinkItem,\n  NavbarLink,\n  NavbarToggleIcon,\n  BrowseShop,\n  BrowseShopLink,\n  SmallScreenOptions\n} from './NavbarElements';\n\nconst Navbar = ({ handleToggle }) => {\n  const { isMd, isLg } = useBreakpoints();\n\n  return (\n    <NavbarContainer>\n      <NavbarNavigation>\n        <NavbarHomeLink to='/'>\n          <NavbarBrand>Doves and Dandys{(isMd || isLg) && ' Westernwear'}</NavbarBrand>\n        </NavbarHomeLink>\n        <NavbarSpacer />\n        <NavbarLinksContainer>\n          <NavbarLinkList>\n            <BrowseShop>\n              <BrowseShopLink to='/shop'>\n                Browse Shop\n              </BrowseShopLink>\n            </BrowseShop>\n            <NavbarLinkItem>\n              <NavbarLink className='link' to='/about-us'>\n                About Us\n              </NavbarLink>\n            </NavbarLinkItem>\n            <NavbarLinkItem>\n              <NavbarLink className='link' to='/contact-us'>\n                Contact Us\n              </NavbarLink>\n            </NavbarLinkItem>\n            <NavbarLinkItem>\n              <NavbarLink className='link' to='/customer-info'>\n                Customer Info\n              </NavbarLink>\n            </NavbarLinkItem>\n          </NavbarLinkList>\n        </NavbarLinksContainer>\n        <NavbarLinksContainer>\n          <NavbarLinkList>\n            <NavbarLinkItem>\n              <NavbarCart>\n                <NavbarLink className='link' to='/shop/cart'>\n                Cart <IoCartOutline size={30} />\n                </NavbarLink>\n              </NavbarCart>\n            </NavbarLinkItem>\n            <NavbarLinkItem>\n              <CurrencySelection />\n            </NavbarLinkItem>\n            <MyAccountMenu />\n          </NavbarLinkList>\n        </NavbarLinksContainer>\n\n        <SmallScreenOptions>\n          <CurrencySelection />\n          <NavbarToggleIcon size={25} onClick={handleToggle} />\n        </SmallScreenOptions>\n\n      </NavbarNavigation>\n    </NavbarContainer>\n  );\n};\n\nNavbar.propsTypes = {\n  handleToggle: PropTypes.func.isRequired\n};\n\nexport default Navbar;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport colours from '../../styles/colours.js';\n\nconst { light, dark } = colours;\n\nexport const DrawerNav = styled.nav`\n  background: ${light};\n  box-shadow: 2px 0px 7px rgba(0, 0, 0, 0.6);\n  display: fixed;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow: hidden;\n  width: 80%;\n  max-width: 350px;\n  z-index: 100;\n  @media (min-width: 1180px) {\n    display: none;\n  }\n`;\n\nexport const DrawerItems = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  list-style: none;\n  padding: 0 1rem;\n  margin: 0;\n`;\n\nexport const LinkContainer = styled.li`\n  padding: 0.25rem 0;\n  @media (min-width: 1180px) {\n    padding: 0.5rem 0;\n  }\n`;\n\nexport const DrawerLink = styled(Link)`\n  color: ${dark};\n  font-size: 1.4rem;\n  font-weight: bold;\n  text-decoration: none;\n  :hover {\n    color: ${dark};\n  }\n`;\n\nexport const Divider = styled.hr`\n  border: none;\n  border-top: 5px solid grey;\n`;\n\nexport const Spacer = styled.div`\n  flex: 1;\n`;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { RealmAppContext } from '../../realmApolloClient.js';\nimport SectionSpacer from '../SectionSpacer.js';\nimport { isAuthenticated, isAdmin } from '../../helpers/auth.js';\n\nimport {\n  DrawerNav,\n  DrawerItems,\n  DrawerLink as Link,\n  LinkContainer\n} from './SideDrawerElements.js';\n\nconst DrawerLink = ({ url, label, handleClick, handleClickComplete }) => {\n  let handleLinkClick;\n\n  if (handleClickComplete) {\n    handleLinkClick = () => {\n      handleClick();\n      handleClickComplete();\n    };\n  } else {\n    handleLinkClick = handleClick;\n  }\n  return (\n    <LinkContainer>\n      <Link\n        to={url}\n        onClick={handleLinkClick}\n      >\n        {label}\n      </Link>\n    </LinkContainer>\n  );\n};\nDrawerLink.propTypes = {\n  url: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.object.isRequired\n  ]),\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  handleClickComplete: PropTypes.func\n};\n\n// Show a menu that appears from the side on small screens\nconst SideDrawer = ({ handleDrawerLinkClick }) => {\n  const app = useContext(RealmAppContext);\n\n  const primaryLinks = [\n    { url: '/shop', label: 'Browse Shop' },\n    { url: '/about-us', label: 'About Us' },\n    { url: '/contact-us', label: 'Contact Us' },\n    { url: '/customer-info', label: 'Customer Info' }\n  ];\n\n  let secondaryLinks = [\n    { url: '/shop/cart', label: 'My Cart' }\n  ];\n\n  if (isAuthenticated(app.currentUser)) {\n    secondaryLinks.push(\n      { url: '/my-account', label: 'My Account' },\n      { url: '/', label: 'Logout' }\n    );\n    if (isAdmin(app.currentUser)) {\n      secondaryLinks.push({ url: '/admin', label: 'Admin Dashboard' });\n    }\n  } else {\n    secondaryLinks = [\n      ...secondaryLinks,\n      { url: '/login', label: 'Login' },\n      { url: { pathname: '/login', state: { form: 'register' } }, label: 'Register' }\n    ];\n  }\n\n  return (\n    <DrawerNav>\n      <DrawerItems>\n        <SectionSpacer light spaceBelow />\n        <DrawerLink\n          url='/'\n          label='Home'\n          handleClick={handleDrawerLinkClick}\n        />\n        <SectionSpacer light spaceBelow />\n        {\n          primaryLinks.map((link, index) => (\n            <DrawerLink\n              key={index}\n              url={link.url}\n              label={link.label}\n              handleClick={handleDrawerLinkClick}\n            />\n          ))\n        }\n        <SectionSpacer light spaceBelow />\n        {\n          secondaryLinks.map((link, index) => (\n            <DrawerLink\n              key={index}\n              url={link.url}\n              label={link.label}\n              handleClick={handleDrawerLinkClick}\n              handleClickComplete={link.label === 'Logout' ? () => app.logOut() : null}\n            />\n          ))\n        }\n      </DrawerItems>\n    </DrawerNav>\n  );\n};\n\nSideDrawer.propTypes = {\n  handleDrawerLinkClick: PropTypes.func.isRequired\n};\n\nexport default SideDrawer;\n","import styled from 'styled-components';\n\nexport const Shadow = styled.div`\n  background: rgba(0, 0, 0, 0.5);\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 99;\n\n  @media (min-width: 1180px) {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Shadow } from './BackgroundShadowElements';\n\nconst BackgroundShadow = ({ handleBackgroundClick }) => {\n  return <Shadow onClick={handleBackgroundClick} />;\n};\n\nBackgroundShadow.propsTypes = {\n  handleBackgroundClick: PropTypes.func.isRequired\n};\n\nexport default BackgroundShadow;\n","// External imports\nimport styled from 'styled-components';\nimport { Link as LinkTo } from 'react-router-dom';\n\n// Colours\nimport colours from '../styles/colours';\nconst { light } = colours;\n\n// Show react-router-dom Link without default styles\nconst Link = styled(LinkTo)`\n  color: ${light};\n  :hover,\n  :active {\n    color: ${light};\n    text-decoration: underline;\n  }\n`;\n\nexport default Link;\n","import styled from 'styled-components';\nimport { IoMailOutline } from 'react-icons/io5';\n\nimport colours from '../../styles/colours.js';\nconst { dark, darkFade, light } = colours;\n\n// Outer Containers.\nexport const FooterOuterWrapper = styled.div`\n  background-color: ${dark};\n  color: ${light};\n  padding: 1rem;\n  width: 100%;\n`;\n\nexport const FooterInner = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  /* max width is same as max width of image */\n  max-width: 414px;\n  margin: auto;\n  @media (min-width: 1024px) {\n    flex-direction: row;\n    justify-content: space-between;\n    max-width: 100%;\n  }\n`;\n\n// Upper section. includes shop image, CTA links and social icons.\nexport const FooterTopSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const TopSectionInner = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (min-width: 1024px) {\n    align-self: flex-end;\n  }\n`;\n\nexport const TopSectionLinks = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: flex-start;\n  align-items: center;\n  justify-content: space-between;\n  gap: 1rem;\n  margin: 1rem 0;\n  @media (min-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n  @media (min-width: 1024px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`;\n\nexport const GetInTouch = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: no-wrap;\n  @media (min-width: 1024px) {\n    padding-top: 0.1rem;\n  }\n`;\n\nexport const SocialIcons = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 2rem;\n`;\n\nexport const FindUsOnFacebook = styled.img`\n  height: 1.75rem;\n  width: auto;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nexport const MailIcon = styled(IoMailOutline)`\n  font-size: 2rem;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\n// Lower section. includes customer info links and contact details.\nexport const FooterBottomSection = styled.div`\n  border-top: 1px solid ${light};\n  display: flex;\n  justify-content: space-between;\n  padding-top: 1rem;\n  /* Move to right at laptop and above */\n  @media (min-width: 1024px) {\n    border-top: none;\n    border-left: 1px solid ${light};\n    flex-direction: column;\n    padding-top: 0;\n    padding-left: 1rem;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  flex-direction: row;\n  gap: 1rem;\n  font-size: 1rem;\n  margin-right: 2rem;\n`;\n\nexport const InfoLinksWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n// End\n\nexport const Copyright = styled.h6`\n  color: ${darkFade};\n  font-size: 0.75rem;\n  margin: 0.5rem 0 0 0;\n  text-align: center;\n`;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport Link from '../Link';\nimport Image from '../Image';\n\nimport {\n  FooterOuterWrapper,\n  FooterInner,\n  FooterTopSection,\n  TopSectionInner,\n  TopSectionLinks,\n  GetInTouch,\n  SocialIcons,\n  FindUsOnFacebook,\n  MailIcon,\n  FooterBottomSection,\n  ContactWrapper,\n  InfoLinksWrapper,\n  Copyright\n} from './FooterElements.js';\n\n//\nconst Footer = () => {\n  const history = useHistory();\n  const copyrightDate = new Date().getFullYear();\n\n  return (\n    <>\n      <FooterOuterWrapper>\n        <FooterInner>\n          <FooterTopSection>\n            <Image\n              src='/images/shop-front.jpeg'\n              alt='Doves and Dandys shop front in Llandrindod Wells'\n            />\n            <TopSectionInner>\n              <TopSectionLinks>\n                <GetInTouch>\n                  <SocialIcons>\n                    <FindUsOnFacebook\n                      src='/images/find-us-on-facebook.png'\n                      onClick={() => window.open('https://www.facebook.com/Doves-Dandys-143717172379125', '_blank')}\n                    />\n                    <MailIcon\n                      onClick={() => history.push('/contact-us')}\n                    />\n                  </SocialIcons>\n                </GetInTouch>\n              </TopSectionLinks>\n            </TopSectionInner>\n          </FooterTopSection>\n          <FooterBottomSection>\n            <ContactWrapper>\n              <div>\n                Doves & Dandys Westernwear\n                <br />\n                Unit 1, Old Town Hall Workshops\n                <br />\n                Beaufort Road\n                <br />\n                Llandrindod Wells\n                <br />\n                Powys\n                <br />\n                LD1 5DL\n                <br />\n                <br />\n                <p style={{ margin: 0 }}>(+44) 7869 375541</p>\n              </div>\n            </ContactWrapper>\n            <InfoLinksWrapper>\n              <Link to={{ pathname: '/customer-info', state: { type: 'sizing-info' } }}>\n                Sizing Info\n              </Link>\n              <Link to={{ pathname: '/customer-info', state: { type: 'payment-info' } }}>\n                Payment Info\n              </Link>\n              <Link to={{ pathname: '/customer-info', state: { type: 'delivery-info' } }}>\n                Delivery Info\n              </Link>\n              <Link to={{ pathname: '/customer-info', state: { type: 'returns-policy' } }}>\n                Returns Policy\n              </Link>\n              <Link to={{ pathname: '/customer-info', state: { type: 'privacy-policy' } }}>\n                Privacy Policy\n              </Link>\n              <Link to={{ pathname: '/customer-info', state: { type: 'faq' } }}>\n                FAQ's\n              </Link>\n            </InfoLinksWrapper>\n          </FooterBottomSection>\n        </FooterInner>\n      </FooterOuterWrapper>\n      <Copyright>\n        &copy; <span>{copyrightDate}</span> Doves and Dandys\n      </Copyright>\n    </>\n  );\n};\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { GrDeliver } from 'react-icons/gr';\n\nimport { getFreeDeliveryConstraints } from '../../helpers/offers.js';\nimport { getCurrencySymbol } from '../../helpers/price.js';\nimport { CurrencyContext } from '../../context/CurrencyContext.js';\nimport colours from '../../styles/colours.js';\n\nconst Container = styled.div`\n  background-color: ${colours.dark};\n  color: ${colours.light};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 3rem;\n  width: 100%;\n`;\n\nconst Icon = styled(GrDeliver)`\n  background-color: ${colours.light};\n  border-radius: 5px;\n  font-size: 1.5rem;\n  padding: 0.25rem;\n  margin-right: 1rem;\n  @media (min-width: 414px) {\n    font-size: 2rem;\n  }\n`;\n\nconst Text = styled.h5`\n  font-size: 1rem;\n  margin: 0;\n  @media (min-width: 414px) {\n    font-size: 1.5rem;\n  }\n`;\n\nconst FreeDelivery = () => {\n  const { currency } = useContext(CurrencyContext);\n  const amountConstraints = getFreeDeliveryConstraints();\n\n  return (\n    <Container>\n      <Icon />\n      <Text>FREE delivery on all orders over {`${getCurrencySymbol(currency)}${amountConstraints[currency]}`}!</Text>\n    </Container>\n  );\n};\n\nexport default FreeDelivery;\n","import React, { useState, cloneElement } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Navbar from './Navbar/Navbar';\nimport SideDrawer from './SideDrawer/SideDrawer';\nimport BackgroundShadow from './BackgroundShadow/BackgroundShadow';\nimport Footer from './Footer/Footer.js';\nimport FreeDelivery from './Offers/FreeDelivery.js';\nimport SectionSpacer from './SectionSpacer.js';\n\nconst ClientStyles = styled.section`\n  min-height: 100vh;\n  background-color: rgba(230,231,203,1);\n  display: flex;\n  flex-direction: column;\n`;\nconst ScrollDisabled = styled(ClientStyles)`\n  height: 100vh;\n  overflow-y: hidden;\n`;\nconst Spacer = styled.div`\n  flex: 1\n`;\n\nconst ClientView = ({ children }) => {\n  // Small screen menu toggle -->\n  const [menuInView, setMenuInView] = useState(false);\n  const handleToggle = () => setMenuInView(prevValue => !prevValue);\n\n  const closeMenu = () => {\n    setMenuInView(false);\n  };\n\n  const { state } = useLocation();\n\n  const content =\n    <>\n      <FreeDelivery />\n      <Navbar handleToggle={handleToggle} />\n      <SectionSpacer dark spaceBelow />\n      {\n        menuInView &&\n          <>\n            <SideDrawer handleDrawerLinkClick={closeMenu} />\n            <BackgroundShadow handleBackgroundClick={closeMenu} />\n          </>\n      }\n      {state && Object.keys(state).length ? cloneElement(children, { ...state }) : children}\n      <Spacer />\n      <Footer />\n    </>;\n\n  return (\n    menuInView\n      ? <ScrollDisabled>{content}</ScrollDisabled>\n      : <ClientStyles>{content}</ClientStyles>\n  );\n};\n\nClientView.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.object\n  ]).isRequired\n};\n\nexport default ClientView;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { RealmAppContext } from '../../realmApolloClient.js';\nimport { isAuthenticated } from '../../helpers/auth.js';\n\nconst PrivateClientRoute = ({ component: Component, ...rest }) => {\n  const app = useContext(RealmAppContext);\n\n  return (\n    app.currentUser && app.currentUser.dbUser ? (\n      <Route\n        {...rest} render={props =>\n          isAuthenticated(app.currentUser)\n            ? <Component {...props} />\n            : <Redirect to='/login' />}\n      />\n    ) : null\n  );\n};\n\nPrivateClientRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  exact: PropTypes.bool,\n  path: PropTypes.string.isRequired\n};\n\nexport default PrivateClientRoute;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { RealmAppContext } from '../../realmApolloClient.js';\nimport { isAdmin } from '../../helpers/auth.js';\n\nconst PrivateAdminRoute = ({ component: Component, ...rest }) => {\n  const app = useContext(RealmAppContext);\n\n  return (\n    app.currentUser && app.currentUser.dbUser\n      ? (\n        <Route\n          {...rest} render={props =>\n            isAdmin(app.currentUser)\n              ? <Component {...props} />\n              : <Redirect to='/login' />}\n        />\n      ) : null\n  );\n};\n\nPrivateAdminRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  exact: PropTypes.bool,\n  path: PropTypes.string.isRequired\n};\n\nexport default PrivateAdminRoute;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// Main views\nimport Home from './Views/Client/Home/Home.js';\nimport Admin from './Views/Admin/Admin.js';\nimport Shop from './Views/Client/Shop/Shop.js';\nimport AboutUs from './Views/Client/AboutUs/AboutUs.js';\nimport ContactUs from './Views/Client/ContactUs/ContactUs.js';\nimport CustomerInfo from './Views/Client/CustomerInfo/CustomerInfo.js';\nimport Account from './Views/Client/Account/Account.js';\nimport Login from './Views/Client/Account/Login.js';\nimport Error404 from './Views/Error/Error404.js';\n\n// Other\nimport ClientView from './Components/ClientView.js';\nimport PrivateClientRoute from './Components/PrivateRoutes/PrivateClientRoute.js';\nimport PrivateAdminRoute from './Components/PrivateRoutes/PrivateAdminRoute.js';\nimport { RealmAppContext } from './realmApolloClient.js';\n\nconst App = () => {\n  console.log('App.js fired');\n  const { currentUser } = useContext(RealmAppContext);\n  const [appReady, setAppReady] = useState(false);\n\n  useEffect(() => {\n    console.log('useEffect fired. currentUser:', currentUser);\n    if (currentUser && currentUser.dbUser) {\n      console.log('app ready');\n      setAppReady(true);\n    }\n  }, [currentUser]);\n\n  return (\n    appReady ? (\n      <Router>\n        <Switch>\n          <PrivateAdminRoute\n            exact\n            path='/admin'\n            component={Admin}\n          />\n          <Route\n            exact\n            path='/'\n            render={() =>\n              <ClientView>\n                <Home />\n              </ClientView>}\n          />\n          <Route\n            exact\n            path='/about-us'\n            render={() =>\n              <ClientView>\n                <AboutUs />\n              </ClientView>}\n          />\n          <Route\n            exact\n            path='/contact-us'\n            render={() =>\n              <ClientView>\n                <ContactUs />\n              </ClientView>}\n          />\n          <Route\n            exact\n            path='/customer-info'\n            render={() =>\n              <ClientView>\n                <CustomerInfo />\n              </ClientView>}\n          />\n          <Route\n            exact\n            path='/login'\n            render={() =>\n              <ClientView>\n                <Login />\n              </ClientView>}\n          />\n          <PrivateClientRoute\n            exact\n            path='/my-account'\n            component={() =>\n              <ClientView>\n                <Account />\n              </ClientView>}\n          />\n          <Route\n            path='/shop'\n            render={() =>\n              <ClientView>\n                <Shop />\n              </ClientView>}\n          />\n          <Route\n            path='/'\n            render={() =>\n              <ClientView>\n                <Error404 />\n              </ClientView>}\n          />\n        </Switch>\n      </Router>\n    ) : null\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.css';\nimport App from './App.js';\nimport { ApolloProvider } from '@apollo/client';\nimport client, { RealmAppProvider } from './realmApolloClient.js';\nimport { CurrencyContextProvider } from './context/CurrencyContext.js';\nimport { OrderContextProvider } from './context/OrderContext.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RealmAppProvider>\n      <ApolloProvider client={client}>\n        <CurrencyContextProvider>\n          <OrderContextProvider>\n            <App />\n          </OrderContextProvider>\n        </CurrencyContextProvider>\n      </ApolloProvider>\n    </RealmAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}